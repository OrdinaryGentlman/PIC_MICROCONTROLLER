

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Sat Sep 07 09:06:12 2024

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=2
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=2
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=2
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=2
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=1
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=1
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=1
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=1
    27                           	psect	text16,global,reloc=2,class=CODE,delta=1
    28                           	psect	text17,global,reloc=2,class=CODE,delta=1
    29                           	psect	text18,global,reloc=2,class=CODE,delta=1
    30                           	psect	text19,global,reloc=2,class=CODE,delta=1
    31                           	psect	text20,global,reloc=2,class=CODE,delta=1
    32                           	psect	text21,global,reloc=2,class=CODE,delta=1
    33                           	psect	text22,global,reloc=2,class=CODE,delta=1
    34                           	psect	text23,global,reloc=2,class=CODE,delta=1
    35                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    36                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    37                           	psect	text25,global,reloc=2,class=CODE,delta=1
    38                           	psect	text26,global,reloc=2,class=CODE,delta=1
    39                           	psect	text27,global,reloc=2,class=CODE,delta=1
    40                           	psect	text28,global,reloc=2,class=CODE,delta=1
    41                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    42                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    43                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    44                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    45   000000                     
    46                           ; Generated 23/03/2023 GMT
    47                           ; 
    48                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    49                           ; All rights reserved.
    50                           ; 
    51                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    52                           ; 
    53                           ; Redistribution and use in source and binary forms, with or without modification, are
    54                           ; permitted provided that the following conditions are met:
    55                           ; 
    56                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    57                           ;        conditions and the following disclaimer.
    58                           ; 
    59                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    60                           ;        of conditions and the following disclaimer in the documentation and/or other
    61                           ;        materials provided with the distribution. Publication is not required when
    62                           ;        this file is used in an embedded application.
    63                           ; 
    64                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    65                           ;        software without specific prior written permission.
    66                           ; 
    67                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    68                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    69                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    70                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    71                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    72                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    73                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    74                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    75                           ; 
    76                           ; 
    77                           ; Code-generator required, PIC18F4550 Definitions
    78                           ; 
    79                           ; SFR Addresses
    80   000000                     _RCREG	set	4014
    81   000000                     _TXREG	set	4013
    82   000000                     _SPBRG	set	4015
    83   000000                     _BRG16	set	32195
    84   000000                     _LATD	set	3980
    85   000000                     _PEIE	set	32662
    86   000000                     _RX9D	set	32088
    87   000000                     _OERR	set	32089
    88   000000                     _FERR	set	32090
    89   000000                     _RCIF	set	31989
    90   000000                     _TRMT	set	32097
    91   000000                     _TX9D	set	32096
    92   000000                     _SPEN	set	32095
    93   000000                     _TXEN	set	32101
    94   000000                     _CREN	set	32092
    95   000000                     _TX9	set	32102
    96   000000                     _RCIE	set	31981
    97   000000                     _RXDTP	set	32197
    98   000000                     _TXCKP	set	32196
    99   000000                     _SYNC	set	32100
   100   000000                     _LATDbits	set	3980
   101   000000                     _TRISCbits	set	3988
   102   000000                     _BRGH	set	32098
   103   000000                     _RCEN	set	32299
   104   000000                     _SPBRGH	set	4016
   105   000000                     _TRISD	set	3989
   106   000000                     _TXIE	set	31980
   107   000000                     _TXIF	set	31988
   108   000000                     _RX9	set	32094
   109   000000                     _GIE	set	32663
   110                           
   111                           	psect	smallconst
   112   000800                     __psmallconst:
   113                           	callstack 0
   114   000800  00                 	db	0
   115   000801                     STR_1:
   116   000801  52                 	db	82	;'R'
   117   000802  58                 	db	88	;'X'
   118   000803  3A                 	db	58	;':'
   119   000804  20                 	db	32
   120   000805  00                 	db	0
   121   000806  00                 	db	0	; dummy byte at the end
   122   000000                     
   123                           ; #config settings
   124                           
   125                           	psect	cinit
   126   003168                     __pcinit:
   127                           	callstack 0
   128   003168                     start_initialization:
   129                           	callstack 0
   130   003168                     __initialization:
   131                           	callstack 0
   132                           
   133                           ; Clear objects allocated to BANK0 (4 bytes)
   134   003168  0100               	movlb	0
   135   00316A  6BC4               	clrf	(__pbssBANK0+3)& (0+255),b
   136   00316C  6BC3               	clrf	(__pbssBANK0+2)& (0+255),b
   137   00316E  6BC2               	clrf	(__pbssBANK0+1)& (0+255),b
   138   003170  6BC1               	clrf	__pbssBANK0& (0+255),b
   139                           
   140                           ; Clear objects allocated to COMRAM (8 bytes)
   141   003172  EE00  F04A         	lfsr	0,__pbssCOMRAM
   142   003176  0E08               	movlw	8
   143   003178                     clear_0:
   144   003178  6AEE               	clrf	postinc0,c
   145   00317A  06E8               	decf	wreg,f,c
   146   00317C  E1FD               	bnz	clear_0
   147   00317E                     end_of_initialization:
   148                           	callstack 0
   149   00317E                     __end_of__initialization:
   150                           	callstack 0
   151   00317E  9052               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   152   003180  9252               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   153   003182  0E00               	movlw	low (__Lsmallconst shr (0+16))
   154   003184  6EF8               	movwf	tblptru,c
   155   003186  0E08               	movlw	high __Lsmallconst
   156   003188  6EF7               	movwf	tblptrh,c
   157   00318A  0100               	movlb	0
   158   00318C  EFF9  F015         	goto	_main	;jump to C main() function
   159                           
   160                           	psect	bssCOMRAM
   161   00004A                     __pbssCOMRAM:
   162                           	callstack 0
   163   00004A                     ___signbitf@F521:
   164                           	callstack 0
   165   00004A                     	ds	4
   166   00004E                     ___fpclassifyf@F465:
   167                           	callstack 0
   168   00004E                     	ds	4
   169                           
   170                           	psect	bssBANK0
   171   0000C1                     __pbssBANK0:
   172                           	callstack 0
   173   0000C1                     fabsf@F465:
   174                           	callstack 0
   175   0000C1                     	ds	4
   176                           
   177                           	psect	cstackBANK0
   178   000060                     __pcstackBANK0:
   179                           	callstack 0
   180   000060                     ??___fladd:
   181                           
   182                           ; 1 bytes @ 0x0
   183   000060                     	ds	4
   184   000064                     ___fladd@signs:
   185                           	callstack 0
   186                           
   187                           ; 1 bytes @ 0x4
   188   000064                     	ds	1
   189   000065                     ___fladd@aexp:
   190                           	callstack 0
   191                           
   192                           ; 1 bytes @ 0x5
   193   000065                     	ds	1
   194   000066                     ___fladd@bexp:
   195                           	callstack 0
   196                           
   197                           ; 1 bytes @ 0x6
   198   000066                     	ds	1
   199   000067                     ___fladd@grs:
   200                           	callstack 0
   201                           
   202                           ; 1 bytes @ 0x7
   203   000067                     	ds	1
   204   000068                     ?___flsub:
   205                           	callstack 0
   206   000068                     ?___fltol:
   207                           	callstack 0
   208   000068                     ___fltol@f1:
   209                           	callstack 0
   210   000068                     ___flsub@b:
   211                           	callstack 0
   212                           
   213                           ; 4 bytes @ 0x8
   214   000068                     	ds	4
   215   00006C                     ??___fltol:
   216   00006C                     ___flsub@a:
   217                           	callstack 0
   218                           
   219                           ; 4 bytes @ 0xC
   220   00006C                     	ds	4
   221   000070                     ?_fabsf:
   222                           	callstack 0
   223   000070                     fabsf@x:
   224                           	callstack 0
   225                           
   226                           ; 4 bytes @ 0x10
   227   000070                     	ds	4
   228   000074                     fabsf@u:
   229                           	callstack 0
   230                           
   231                           ; 4 bytes @ 0x14
   232   000074                     	ds	4
   233   000078                     ??_uart_init:
   234                           
   235                           ; 1 bytes @ 0x18
   236   000078                     	ds	4
   237   00007C                     _uart_init$920:
   238                           	callstack 0
   239                           
   240                           ; 4 bytes @ 0x1C
   241   00007C                     	ds	4
   242   000080                     uart_init@e11:
   243                           	callstack 0
   244                           
   245                           ; 4 bytes @ 0x20
   246   000080                     	ds	4
   247   000084                     uart_init@min:
   248                           	callstack 0
   249                           
   250                           ; 4 bytes @ 0x24
   251   000084                     	ds	4
   252   000088                     uart_init@e1:
   253                           	callstack 0
   254                           
   255                           ; 4 bytes @ 0x28
   256   000088                     	ds	4
   257   00008C                     uart_init@e22:
   258                           	callstack 0
   259                           
   260                           ; 4 bytes @ 0x2C
   261   00008C                     	ds	4
   262   000090                     uart_init@x:
   263                           	callstack 0
   264                           
   265                           ; 4 bytes @ 0x30
   266   000090                     	ds	4
   267   000094                     uart_init@e2:
   268                           	callstack 0
   269                           
   270                           ; 4 bytes @ 0x34
   271   000094                     	ds	4
   272   000098                     uart_init@e33:
   273                           	callstack 0
   274                           
   275                           ; 4 bytes @ 0x38
   276   000098                     	ds	4
   277   00009C                     uart_init@e3:
   278                           	callstack 0
   279                           
   280                           ; 4 bytes @ 0x3C
   281   00009C                     	ds	4
   282   0000A0                     uart_init@y:
   283                           	callstack 0
   284                           
   285                           ; 4 bytes @ 0x40
   286   0000A0                     	ds	4
   287   0000A4                     uart_init@z:
   288                           	callstack 0
   289                           
   290                           ; 4 bytes @ 0x44
   291   0000A4                     	ds	4
   292   0000A8                     uart_init@config:
   293                           	callstack 0
   294                           
   295                           ; 1 bytes @ 0x48
   296   0000A8                     	ds	1
   297   0000A9                     uart_init@frequency:
   298                           	callstack 0
   299                           
   300                           ; 4 bytes @ 0x49
   301   0000A9                     	ds	4
   302   0000AD                     _uart_init$919:
   303                           	callstack 0
   304                           
   305                           ; 4 bytes @ 0x4D
   306   0000AD                     	ds	4
   307   0000B1                     uart_init@baudrate:
   308                           	callstack 0
   309                           
   310                           ; 4 bytes @ 0x51
   311   0000B1                     	ds	4
   312   0000B5                     main@payload:
   313                           	callstack 0
   314                           
   315                           ; 10 bytes @ 0x55
   316   0000B5                     	ds	10
   317   0000BF                     main@i:
   318                           	callstack 0
   319                           
   320                           ; 2 bytes @ 0x5F
   321   0000BF                     	ds	2
   322                           
   323                           	psect	cstackCOMRAM
   324   000001                     __pcstackCOMRAM:
   325                           	callstack 0
   326   000001                     ?i2_uart_read:
   327                           	callstack 0
   328   000001                     i2lcd_set_bit@data_bit:
   329                           	callstack 0
   330                           
   331                           ; 1 bytes @ 0x0
   332   000001                     	ds	1
   333   000002                     i2lcd_char@Lower_Nibble:
   334                           	callstack 0
   335                           
   336                           ; 1 bytes @ 0x1
   337   000002                     	ds	1
   338   000003                     i2lcd_char@Upper_Nibble:
   339                           	callstack 0
   340   000003                     i2_uart_read$208:
   341                           	callstack 0
   342                           
   343                           ; 2 bytes @ 0x2
   344   000003                     	ds	1
   345   000004                     i2lcd_char@data:
   346                           	callstack 0
   347                           
   348                           ; 1 bytes @ 0x3
   349   000004                     	ds	1
   350   000005                     i2uart_read@receivedData:
   351                           	callstack 0
   352   000005                     i2lcd_char@i:
   353                           	callstack 0
   354                           
   355                           ; 2 bytes @ 0x4
   356   000005                     	ds	2
   357   000007                     i2lcd_char@i_173:
   358                           	callstack 0
   359                           
   360                           ; 2 bytes @ 0x6
   361   000007                     	ds	2
   362   000009                     i2test@s:
   363                           	callstack 0
   364                           
   365                           ; 1 bytes @ 0x8
   366   000009                     	ds	1
   367   00000A                     ??_low_isr:
   368                           
   369                           ; 1 bytes @ 0x9
   370   00000A                     	ds	2
   371   00000C                     low_isr@payload:
   372                           	callstack 0
   373                           
   374                           ; 2 bytes @ 0xB
   375   00000C                     	ds	2
   376   00000E                     ?___fpclassifyf:
   377                           	callstack 0
   378   00000E                     ?___signbitf:
   379                           	callstack 0
   380   00000E                     ?_uart_read:
   381                           	callstack 0
   382   00000E                     ?___flmul:
   383                           	callstack 0
   384   00000E                     ?___xxtofl:
   385                           	callstack 0
   386   00000E                     lcd_set_bit@data_bit:
   387                           	callstack 0
   388   00000E                     ___fleq@ff1:
   389                           	callstack 0
   390   00000E                     ___flge@ff1:
   391                           	callstack 0
   392   00000E                     ___flmul@b:
   393                           	callstack 0
   394   00000E                     ___xxtofl@val:
   395                           	callstack 0
   396   00000E                     ___fpclassifyf@x:
   397                           	callstack 0
   398   00000E                     ___signbitf@x:
   399                           	callstack 0
   400                           
   401                           ; 4 bytes @ 0xD
   402   00000E                     	ds	1
   403   00000F                     ??_lcd_cmd:
   404   00000F                     lcd_char@Lower_Nibble:
   405                           	callstack 0
   406                           
   407                           ; 1 bytes @ 0xE
   408   00000F                     	ds	1
   409   000010                     lcd_cmd@a:
   410                           	callstack 0
   411   000010                     lcd_char@Upper_Nibble:
   412                           	callstack 0
   413   000010                     _uart_read$208:
   414                           	callstack 0
   415                           
   416                           ; 2 bytes @ 0xF
   417   000010                     	ds	1
   418   000011                     ??_lcd_init:
   419   000011                     lcd_set_cursor@b:
   420                           	callstack 0
   421   000011                     lcd_char@data:
   422                           	callstack 0
   423                           
   424                           ; 1 bytes @ 0x10
   425   000011                     	ds	1
   426   000012                     ??___fpclassifyf:
   427   000012                     ??___signbitf:
   428   000012                     ??___xxtofl:
   429   000012                     lcd_set_cursor@a:
   430                           	callstack 0
   431   000012                     uart_read@receivedData:
   432                           	callstack 0
   433   000012                     lcd_char@i:
   434                           	callstack 0
   435   000012                     ___fleq@ff2:
   436                           	callstack 0
   437   000012                     ___flge@ff2:
   438                           	callstack 0
   439   000012                     ___flmul@a:
   440                           	callstack 0
   441                           
   442                           ; 4 bytes @ 0x11
   443   000012                     	ds	1
   444   000013                     lcd_set_cursor@z:
   445                           	callstack 0
   446   000013                     uart_read_buffer@buffer:
   447                           	callstack 0
   448                           
   449                           ; 1 bytes @ 0x12
   450   000013                     	ds	1
   451   000014                     lcd_set_cursor@y:
   452                           	callstack 0
   453   000014                     lcd_char@i_173:
   454                           	callstack 0
   455   000014                     uart_read_buffer@length:
   456                           	callstack 0
   457                           
   458                           ; 2 bytes @ 0x13
   459   000014                     	ds	1
   460   000015                     lcd_set_cursor@temp:
   461                           	callstack 0
   462                           
   463                           ; 1 bytes @ 0x14
   464   000015                     	ds	1
   465   000016                     ??_uart_read_buffer:
   466   000016                     ??___flmul:
   467   000016                     ??___fleq:
   468   000016                     ??___flge:
   469   000016                     lcd_string@a:
   470                           	callstack 0
   471   000016                     test@s:
   472                           	callstack 0
   473   000016                     ___xxtofl@sign:
   474                           	callstack 0
   475   000016                     ___fpclassifyf@e:
   476                           	callstack 0
   477   000016                     ___signbitf@y:
   478                           	callstack 0
   479                           
   480                           ; 4 bytes @ 0x15
   481   000016                     	ds	1
   482   000017                     ??_lcd_string:
   483   000017                     ___xxtofl@exp:
   484                           	callstack 0
   485   000017                     uart_read_buffer@i:
   486                           	callstack 0
   487                           
   488                           ; 2 bytes @ 0x16
   489   000017                     	ds	1
   490   000018                     lcd_string@i:
   491                           	callstack 0
   492   000018                     ___xxtofl@arg:
   493                           	callstack 0
   494   000018                     ___fpclassifyf@u:
   495                           	callstack 0
   496                           
   497                           ; 4 bytes @ 0x17
   498   000018                     	ds	2
   499   00001A                     ___flmul@sign:
   500                           	callstack 0
   501                           
   502                           ; 1 bytes @ 0x19
   503   00001A                     	ds	1
   504   00001B                     ___flmul@grs:
   505                           	callstack 0
   506                           
   507                           ; 4 bytes @ 0x1A
   508   00001B                     	ds	1
   509   00001C                     ?_fminf:
   510                           	callstack 0
   511   00001C                     fminf@x:
   512                           	callstack 0
   513                           
   514                           ; 4 bytes @ 0x1B
   515   00001C                     	ds	3
   516   00001F                     ___flmul@aexp:
   517                           	callstack 0
   518                           
   519                           ; 1 bytes @ 0x1E
   520   00001F                     	ds	1
   521   000020                     ___flmul@bexp:
   522                           	callstack 0
   523   000020                     fminf@y:
   524                           	callstack 0
   525                           
   526                           ; 4 bytes @ 0x1F
   527   000020                     	ds	1
   528   000021                     ___flmul@prod:
   529                           	callstack 0
   530                           
   531                           ; 4 bytes @ 0x20
   532   000021                     	ds	3
   533   000024                     ??_fminf:
   534                           
   535                           ; 1 bytes @ 0x23
   536   000024                     	ds	1
   537   000025                     ___flmul@temp:
   538                           	callstack 0
   539                           
   540                           ; 2 bytes @ 0x24
   541   000025                     	ds	2
   542   000027                     ?___fldiv:
   543                           	callstack 0
   544   000027                     ___fldiv@b:
   545                           	callstack 0
   546                           
   547                           ; 4 bytes @ 0x26
   548   000027                     	ds	4
   549   00002B                     ___fldiv@a:
   550                           	callstack 0
   551                           
   552                           ; 4 bytes @ 0x2A
   553   00002B                     	ds	4
   554   00002F                     ??___fldiv:
   555                           
   556                           ; 1 bytes @ 0x2E
   557   00002F                     	ds	4
   558   000033                     ___fldiv@rem:
   559                           	callstack 0
   560                           
   561                           ; 4 bytes @ 0x32
   562   000033                     	ds	4
   563   000037                     ___fldiv@sign:
   564                           	callstack 0
   565                           
   566                           ; 1 bytes @ 0x36
   567   000037                     	ds	1
   568   000038                     ___fldiv@new_exp:
   569                           	callstack 0
   570                           
   571                           ; 2 bytes @ 0x37
   572   000038                     	ds	2
   573   00003A                     ___fldiv@grs:
   574                           	callstack 0
   575                           
   576                           ; 4 bytes @ 0x39
   577   00003A                     	ds	4
   578   00003E                     ___fldiv@bexp:
   579                           	callstack 0
   580                           
   581                           ; 1 bytes @ 0x3D
   582   00003E                     	ds	1
   583   00003F                     ___fldiv@aexp:
   584                           	callstack 0
   585                           
   586                           ; 1 bytes @ 0x3E
   587   00003F                     	ds	1
   588   000040                     ?___fladd:
   589                           	callstack 0
   590   000040                     ___fladd@b:
   591                           	callstack 0
   592                           
   593                           ; 4 bytes @ 0x3F
   594   000040                     	ds	4
   595   000044                     ___fladd@a:
   596                           	callstack 0
   597                           
   598                           ; 4 bytes @ 0x43
   599   000044                     	ds	4
   600   000048                     ___fltol@sign1:
   601                           	callstack 0
   602                           
   603                           ; 1 bytes @ 0x47
   604   000048                     	ds	1
   605   000049                     ___fltol@exp1:
   606                           	callstack 0
   607                           
   608                           ; 1 bytes @ 0x48
   609   000049                     	ds	1
   610   00004A                     
   611                           ; 1 bytes @ 0x49
   612 ;;
   613 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   614 ;;
   615 ;; *************** function _main *****************
   616 ;; Defined at:
   617 ;;		line 13 in file "rx_main.c"
   618 ;; Parameters:    Size  Location     Type
   619 ;;		None
   620 ;; Auto vars:     Size  Location     Type
   621 ;;  i               2   95[BANK0 ] int 
   622 ;;  payload        10   85[BANK0 ] short [5]
   623 ;; Return value:  Size  Location     Type
   624 ;;                  1    wreg      void 
   625 ;; Registers used:
   626 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   627 ;; Tracked objects:
   628 ;;		On entry : 0/0
   629 ;;		On exit  : 0/0
   630 ;;		Unchanged: 0/0
   631 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   632 ;;      Params:         0       0       0       0       0       0       0       0       0
   633 ;;      Locals:         0      12       0       0       0       0       0       0       0
   634 ;;      Temps:          0       0       0       0       0       0       0       0       0
   635 ;;      Totals:         0      12       0       0       0       0       0       0       0
   636 ;;Total ram usage:       12 bytes
   637 ;; Hardware stack levels required when called: 7
   638 ;; This function calls:
   639 ;;		_lcd_clear
   640 ;;		_lcd_init
   641 ;;		_lcd_set_cursor
   642 ;;		_lcd_string
   643 ;;		_test
   644 ;;		_uart_init
   645 ;;		_uart_read_buffer
   646 ;; This function is called by:
   647 ;;		Startup code after reset
   648 ;; This function uses a non-reentrant model
   649 ;;
   650                           
   651                           	psect	text0
   652   002BF2                     __ptext0:
   653                           	callstack 0
   654   002BF2                     _main:
   655                           	callstack 24
   656   002BF2                     
   657                           ;rx_main.c: 14:     TRISD = 0;
   658   002BF2  0E00               	movlw	0
   659   002BF4  6E95               	movwf	149,c	;volatile
   660                           
   661                           ;rx_main.c: 15:     LATD = 0;
   662   002BF6  0E00               	movlw	0
   663   002BF8  6E8C               	movwf	140,c	;volatile
   664   002BFA                     
   665                           ;rx_main.c: 17:     GIE = PEIE = 0;
   666   002BFA  9CF2               	bcf	4082,6,c	;volatile
   667   002BFC  9EF2               	bcf	4082,7,c	;volatile
   668   002BFE                     
   669                           ;rx_main.c: 19:     lcd_init();
   670   002BFE  EC57  F017         	call	_lcd_init	;wreg free
   671   002C02                     
   672                           ;rx_main.c: 20:     lcd_set_cursor(1,1);
   673   002C02  0E01               	movlw	1
   674   002C04  6E11               	movwf	lcd_set_cursor@b^0,c
   675   002C06  0E01               	movlw	1
   676   002C08  EC24  F017         	call	_lcd_set_cursor
   677   002C0C                     
   678                           ;rx_main.c: 21:     lcd_clear();
   679   002C0C  ECD8  F018         	call	_lcd_clear	;wreg free
   680   002C10                     
   681                           ;rx_main.c: 22:     lcd_string("RX: ");
   682   002C10  0E01               	movlw	low STR_1
   683   002C12  6E16               	movwf	lcd_string@a^0,c
   684   002C14  EC78  F018         	call	_lcd_string	;wreg free
   685   002C18                     
   686                           ;rx_main.c: 26:     uart_init(0x01 | 0x20);
   687   002C18  0E21               	movlw	33
   688   002C1A  EC04  F004         	call	_uart_init
   689   002C1E                     l3304:
   690                           
   691                           ;rx_main.c: 30:         uart_read_buffer(payload, 5);
   692   002C1E  0EB5               	movlw	low main@payload
   693   002C20  6E13               	movwf	uart_read_buffer@buffer^0,c
   694   002C22  0E00               	movlw	0
   695   002C24  6E15               	movwf	(uart_read_buffer@length+1)^0,c
   696   002C26  0E05               	movlw	5
   697   002C28  6E14               	movwf	uart_read_buffer@length^0,c
   698   002C2A  EC0C  F018         	call	_uart_read_buffer	;wreg free
   699   002C2E                     
   700                           ;rx_main.c: 31:         for(int i=0; i<5; i++)
   701   002C2E  0E00               	movlw	0
   702   002C30  0100               	movlb	0	; () banked
   703   002C32  6FC0               	movwf	(main@i+1)& (0+255),b
   704   002C34  0E00               	movlw	0
   705   002C36  6FBF               	movwf	main@i& (0+255),b
   706   002C38                     l3312:
   707                           
   708                           ; BSR set to: 0
   709                           ;rx_main.c: 32:             test((char) payload[i]);
   710   002C38  51BF               	movf	main@i& (0+255),w,b
   711   002C3A  0D02               	mullw	2
   712   002C3C  50F3               	movf	243,w,c
   713   002C3E  0FB5               	addlw	low main@payload
   714   002C40  6ED9               	movwf	fsr2l,c
   715   002C42  6ADA               	clrf	fsr2h,c
   716   002C44  50DF               	movf	indf2,w,c
   717   002C46  ECDF  F018         	call	_test
   718   002C4A  0100               	movlb	0	; () banked
   719   002C4C  4BBF               	infsnz	main@i& (0+255),f,b
   720   002C4E  2BC0               	incf	(main@i+1)& (0+255),f,b
   721   002C50                     
   722                           ; BSR set to: 0
   723   002C50  BFC0               	btfsc	(main@i+1)& (0+255),7,b
   724   002C52  EF34  F016         	goto	u4511
   725   002C56  51C0               	movf	(main@i+1)& (0+255),w,b
   726   002C58  E109               	bnz	u4510
   727   002C5A  0E05               	movlw	5
   728   002C5C  5DBF               	subwf	main@i& (0+255),w,b
   729   002C5E  A0D8               	btfss	status,0,c
   730   002C60  EF34  F016         	goto	u4511
   731   002C64  EF36  F016         	goto	u4510
   732   002C68                     u4511:
   733   002C68  EF1C  F016         	goto	l3312
   734   002C6C                     u4510:
   735   002C6C  EF0F  F016         	goto	l3304
   736   002C70  EF07  F000         	goto	start
   737   002C74                     __end_of_main:
   738                           	callstack 0
   739                           
   740 ;; *************** function _uart_read_buffer *****************
   741 ;; Defined at:
   742 ;;		line 221 in file "./uart.h"
   743 ;; Parameters:    Size  Location     Type
   744 ;;  buffer          1   18[COMRAM] PTR short 
   745 ;;		 -> main@payload(10), 
   746 ;;  length          2   19[COMRAM] int 
   747 ;; Auto vars:     Size  Location     Type
   748 ;;  i               2   22[COMRAM] int 
   749 ;; Return value:  Size  Location     Type
   750 ;;                  1    wreg      PTR short 
   751 ;; Registers used:
   752 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   753 ;; Tracked objects:
   754 ;;		On entry : 0/0
   755 ;;		On exit  : 0/0
   756 ;;		Unchanged: 0/0
   757 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   758 ;;      Params:         3       0       0       0       0       0       0       0       0
   759 ;;      Locals:         2       0       0       0       0       0       0       0       0
   760 ;;      Temps:          1       0       0       0       0       0       0       0       0
   761 ;;      Totals:         6       0       0       0       0       0       0       0       0
   762 ;;Total ram usage:        6 bytes
   763 ;; Hardware stack levels used: 1
   764 ;; Hardware stack levels required when called: 5
   765 ;; This function calls:
   766 ;;		_uart_read
   767 ;; This function is called by:
   768 ;;		_main
   769 ;; This function uses a non-reentrant model
   770 ;;
   771                           
   772                           	psect	text1
   773   003018                     __ptext1:
   774                           	callstack 0
   775   003018                     _uart_read_buffer:
   776                           	callstack 25
   777   003018                     
   778                           ;./uart.h: 222:     for (int i = 0; i < length; i++) {
   779   003018  0E00               	movlw	0
   780   00301A  6E18               	movwf	(uart_read_buffer@i+1)^0,c
   781   00301C  0E00               	movlw	0
   782   00301E  6E17               	movwf	uart_read_buffer@i^0,c
   783   003020  EF20  F018         	goto	l2916
   784   003024                     l2912:
   785                           
   786                           ;./uart.h: 223:         buffer[i] = uart_read();
   787   003024  ECB6  F016         	call	_uart_read	;wreg free
   788   003028  5017               	movf	uart_read_buffer@i^0,w,c
   789   00302A  0D02               	mullw	2
   790   00302C  5013               	movf	uart_read_buffer@buffer^0,w,c
   791   00302E  24F3               	addwf	243,w,c
   792   003030  6ED9               	movwf	fsr2l,c
   793   003032  6ADA               	clrf	fsr2h,c
   794   003034  C00E  FFDE         	movff	?_uart_read,postinc2
   795   003038  C00F  FFDD         	movff	?_uart_read+1,postdec2
   796   00303C                     
   797                           ;./uart.h: 224:     }
   798   00303C  4A17               	infsnz	uart_read_buffer@i^0,f,c
   799   00303E  2A18               	incf	(uart_read_buffer@i+1)^0,f,c
   800   003040                     l2916:
   801   003040  5014               	movf	uart_read_buffer@length^0,w,c
   802   003042  5C17               	subwf	uart_read_buffer@i^0,w,c
   803   003044  5018               	movf	(uart_read_buffer@i+1)^0,w,c
   804   003046  0A80               	xorlw	128
   805   003048  6E16               	movwf	??_uart_read_buffer^0,c
   806   00304A  5015               	movf	(uart_read_buffer@length+1)^0,w,c
   807   00304C  0A80               	xorlw	128
   808   00304E  5816               	subwfb	??_uart_read_buffer^0,w,c
   809   003050  A0D8               	btfss	status,0,c
   810   003052  EF2D  F018         	goto	u3681
   811   003056  EF2F  F018         	goto	u3680
   812   00305A                     u3681:
   813   00305A  EF12  F018         	goto	l2912
   814   00305E                     u3680:
   815   00305E  0012               	return		;funcret
   816   003060                     __end_of_uart_read_buffer:
   817                           	callstack 0
   818                           
   819 ;; *************** function _uart_read *****************
   820 ;; Defined at:
   821 ;;		line 203 in file "./uart.h"
   822 ;; Parameters:    Size  Location     Type
   823 ;;		None
   824 ;; Auto vars:     Size  Location     Type
   825 ;;  receivedData    1   17[COMRAM] unsigned char 
   826 ;; Return value:  Size  Location     Type
   827 ;;                  2   13[COMRAM] short 
   828 ;; Registers used:
   829 ;;		wreg, status,2, status,0
   830 ;; Tracked objects:
   831 ;;		On entry : 0/0
   832 ;;		On exit  : 0/0
   833 ;;		Unchanged: 0/0
   834 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   835 ;;      Params:         2       0       0       0       0       0       0       0       0
   836 ;;      Locals:         3       0       0       0       0       0       0       0       0
   837 ;;      Temps:          0       0       0       0       0       0       0       0       0
   838 ;;      Totals:         5       0       0       0       0       0       0       0       0
   839 ;;Total ram usage:        5 bytes
   840 ;; Hardware stack levels used: 1
   841 ;; Hardware stack levels required when called: 4
   842 ;; This function calls:
   843 ;;		Nothing
   844 ;; This function is called by:
   845 ;;		_uart_read_buffer
   846 ;; This function uses a non-reentrant model
   847 ;;
   848                           
   849                           	psect	text2
   850   002D6C                     __ptext2:
   851                           	callstack 0
   852   002D6C                     _uart_read:
   853                           	callstack 25
   854   002D6C                     l173:
   855   002D6C  AA9E               	btfss	3998,5,c	;volatile
   856   002D6E  EFBB  F016         	goto	u2611
   857   002D72  EFBD  F016         	goto	u2610
   858   002D76                     u2611:
   859   002D76  EFB6  F016         	goto	l173
   860   002D7A                     u2610:
   861   002D7A                     
   862                           ;./uart.h: 206:     if (FERR) {
   863   002D7A  A4AB               	btfss	4011,2,c	;volatile
   864   002D7C  EFC2  F016         	goto	u2621
   865   002D80  EFC4  F016         	goto	u2620
   866   002D84                     u2621:
   867   002D84  EFCA  F016         	goto	l176
   868   002D88                     u2620:
   869   002D88  50AE               	movf	174,w,c	;volatile
   870   002D8A                     l2314:
   871                           
   872                           ;./uart.h: 208:         return 0x01FF;
   873   002D8A  0E01               	movlw	1
   874   002D8C  6E0F               	movwf	(?_uart_read+1)^0,c
   875   002D8E  680E               	setf	?_uart_read^0,c
   876   002D90  EFEC  F016         	goto	l177
   877   002D94                     l176:
   878                           
   879                           ;./uart.h: 211:     if (OERR) {
   880   002D94  A2AB               	btfss	4011,1,c	;volatile
   881   002D96  EFCF  F016         	goto	u2631
   882   002D9A  EFD1  F016         	goto	u2630
   883   002D9E                     u2631:
   884   002D9E  EFD6  F016         	goto	l178
   885   002DA2                     u2630:
   886   002DA2  50AE               	movf	174,w,c	;volatile
   887                           
   888                           ;./uart.h: 213:         RCEN = 0;
   889   002DA4  96C5               	bcf	4037,3,c	;volatile
   890                           
   891                           ;./uart.h: 214:         RCEN = 1;
   892   002DA6  86C5               	bsf	4037,3,c	;volatile
   893   002DA8  EFC5  F016         	goto	l2314
   894   002DAC                     l178:
   895                           
   896                           ;./uart.h: 217:     receivedData = RX9D ? RCREG | 0x0100 : RCREG;
   897   002DAC  B0AB               	btfsc	4011,0,c	;volatile
   898   002DAE  EFDB  F016         	goto	u2641
   899   002DB2  EFDD  F016         	goto	u2640
   900   002DB6                     u2641:
   901   002DB6  EFE2  F016         	goto	l2326
   902   002DBA                     u2640:
   903   002DBA  CFAE F010          	movff	4014,_uart_read$208	;volatile
   904   002DBE  6A11               	clrf	(_uart_read$208+1)^0,c
   905   002DC0  EFE7  F016         	goto	l2328
   906   002DC4                     l2326:
   907   002DC4  0E00               	movlw	0
   908   002DC6  10AE               	iorwf	174,w,c	;volatile
   909   002DC8  6E10               	movwf	_uart_read$208^0,c
   910   002DCA  0E01               	movlw	1
   911   002DCC  6E11               	movwf	(_uart_read$208+1)^0,c
   912   002DCE                     l2328:
   913   002DCE  C010  F012         	movff	_uart_read$208,uart_read@receivedData
   914   002DD2                     
   915                           ;./uart.h: 218:     return receivedData;
   916   002DD2  C012  F00E         	movff	uart_read@receivedData,?_uart_read
   917   002DD6  6A0F               	clrf	(?_uart_read+1)^0,c
   918   002DD8                     l177:
   919   002DD8  0012               	return		;funcret
   920   002DDA                     __end_of_uart_read:
   921                           	callstack 0
   922                           
   923 ;; *************** function _uart_init *****************
   924 ;; Defined at:
   925 ;;		line 25 in file "./uart.h"
   926 ;; Parameters:    Size  Location     Type
   927 ;;  config          1    wreg     unsigned char 
   928 ;; Auto vars:     Size  Location     Type
   929 ;;  config          1   72[BANK0 ] unsigned char 
   930 ;;  baudrate        4   81[BANK0 ] const 
   931 ;;  frequency       4   73[BANK0 ] const 
   932 ;;  z               4   68[BANK0 ] long 
   933 ;;  y               4   64[BANK0 ] long 
   934 ;;  e3              4   60[BANK0 ] long 
   935 ;;  e33             4   56[BANK0 ] long 
   936 ;;  e2              4   52[BANK0 ] long 
   937 ;;  x               4   48[BANK0 ] long 
   938 ;;  e22             4   44[BANK0 ] long 
   939 ;;  e1              4   40[BANK0 ] long 
   940 ;;  min             4   36[BANK0 ] long 
   941 ;;  e11             4   32[BANK0 ] long 
   942 ;; Return value:  Size  Location     Type
   943 ;;                  1    wreg      unsigned char 
   944 ;; Registers used:
   945 ;;		wreg, status,2, status,0, prodl, prodh, cstack
   946 ;; Tracked objects:
   947 ;;		On entry : 0/0
   948 ;;		On exit  : 0/0
   949 ;;		Unchanged: 0/0
   950 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   951 ;;      Params:         0       0       0       0       0       0       0       0       0
   952 ;;      Locals:         0      57       0       0       0       0       0       0       0
   953 ;;      Temps:          0       4       0       0       0       0       0       0       0
   954 ;;      Totals:         0      61       0       0       0       0       0       0       0
   955 ;;Total ram usage:       61 bytes
   956 ;; Hardware stack levels used: 1
   957 ;; Hardware stack levels required when called: 6
   958 ;; This function calls:
   959 ;;		___fladd
   960 ;;		___fldiv
   961 ;;		___fleq
   962 ;;		___flge
   963 ;;		___flmul
   964 ;;		___flsub
   965 ;;		___fltol
   966 ;;		___xxtofl
   967 ;;		_fabsf
   968 ;;		_fminf
   969 ;; This function is called by:
   970 ;;		_main
   971 ;; This function uses a non-reentrant model
   972 ;;
   973                           
   974                           	psect	text3
   975   000808                     __ptext3:
   976                           	callstack 0
   977   000808                     _uart_init:
   978                           	callstack 24
   979                           
   980                           ;incstack = 0
   981                           ;uart_init@config stored from wreg
   982   000808  0100               	movlb	0	; () banked
   983   00080A  6FA8               	movwf	uart_init@config& (0+255),b
   984   00080C                     
   985                           ;./uart.h: 27:     const double frequency = 8000000 + 0.0;
   986   00080C  0E00               	movlw	0
   987   00080E  0100               	movlb	0	; () banked
   988   000810  6FA9               	movwf	uart_init@frequency& (0+255),b
   989   000812  0E24               	movlw	36
   990   000814  6FAA               	movwf	(uart_init@frequency+1)& (0+255),b
   991   000816  0EF4               	movlw	244
   992   000818  6FAB               	movwf	(uart_init@frequency+2)& (0+255),b
   993   00081A  0E4A               	movlw	74
   994   00081C  6FAC               	movwf	(uart_init@frequency+3)& (0+255),b
   995                           
   996                           ;./uart.h: 28:     const double baudrate = 9600 + 0.0;
   997   00081E  0E00               	movlw	0
   998   000820  6FB1               	movwf	uart_init@baudrate& (0+255),b
   999   000822  0E00               	movlw	0
  1000   000824  6FB2               	movwf	(uart_init@baudrate+1)& (0+255),b
  1001   000826  0E16               	movlw	22
  1002   000828  6FB3               	movwf	(uart_init@baudrate+2)& (0+255),b
  1003   00082A  0E46               	movlw	70
  1004   00082C  6FB4               	movwf	(uart_init@baudrate+3)& (0+255),b
  1005   00082E                     
  1006                           ; BSR set to: 0
  1007                           ;./uart.h: 29:     long x, y, z;;./uart.h: 30:     double e1, e11, e2, e22, e3, e33;;./u
      +                          art.h: 33:     x = (long) ((frequency / (64 * baudrate)) - 1);
  1008   00082E  0E00               	movlw	0
  1009   000830  6E44               	movwf	___fladd@a^0,c
  1010   000832  0E00               	movlw	0
  1011   000834  6E45               	movwf	(___fladd@a+1)^0,c
  1012   000836  0E80               	movlw	128
  1013   000838  6E46               	movwf	(___fladd@a+2)^0,c
  1014   00083A  0EBF               	movlw	191
  1015   00083C  6E47               	movwf	(___fladd@a+3)^0,c
  1016   00083E  0E00               	movlw	0
  1017   000840  6E12               	movwf	___flmul@a^0,c
  1018   000842  0E00               	movlw	0
  1019   000844  6E13               	movwf	(___flmul@a+1)^0,c
  1020   000846  0E80               	movlw	128
  1021   000848  6E14               	movwf	(___flmul@a+2)^0,c
  1022   00084A  0E42               	movlw	66
  1023   00084C  6E15               	movwf	(___flmul@a+3)^0,c
  1024   00084E  C0B1  F00E         	movff	uart_init@baudrate,___flmul@b
  1025   000852  C0B2  F00F         	movff	uart_init@baudrate+1,___flmul@b+1
  1026   000856  C0B3  F010         	movff	uart_init@baudrate+2,___flmul@b+2
  1027   00085A  C0B4  F011         	movff	uart_init@baudrate+3,___flmul@b+3
  1028   00085E  ECD4  F00E         	call	___flmul	;wreg free
  1029   000862  C00E  F02B         	movff	?___flmul,___fldiv@a
  1030   000866  C00F  F02C         	movff	?___flmul+1,___fldiv@a+1
  1031   00086A  C010  F02D         	movff	?___flmul+2,___fldiv@a+2
  1032   00086E  C011  F02E         	movff	?___flmul+3,___fldiv@a+3
  1033   000872  C0A9  F027         	movff	uart_init@frequency,___fldiv@b
  1034   000876  C0AA  F028         	movff	uart_init@frequency+1,___fldiv@b+1
  1035   00087A  C0AB  F029         	movff	uart_init@frequency+2,___fldiv@b+2
  1036   00087E  C0AC  F02A         	movff	uart_init@frequency+3,___fldiv@b+3
  1037   000882  ECE9  F010         	call	___fldiv	;wreg free
  1038   000886  C027  F040         	movff	?___fldiv,___fladd@b
  1039   00088A  C028  F041         	movff	?___fldiv+1,___fladd@b+1
  1040   00088E  C029  F042         	movff	?___fldiv+2,___fladd@b+2
  1041   000892  C02A  F043         	movff	?___fldiv+3,___fladd@b+3
  1042   000896  EC73  F00C         	call	___fladd	;wreg free
  1043   00089A  C040  F068         	movff	?___fladd,___fltol@f1
  1044   00089E  C041  F069         	movff	?___fladd+1,___fltol@f1+1
  1045   0008A2  C042  F06A         	movff	?___fladd+2,___fltol@f1+2
  1046   0008A6  C043  F06B         	movff	?___fladd+3,___fltol@f1+3
  1047   0008AA  EC1F  F014         	call	___fltol	;wreg free
  1048   0008AE  C068  F090         	movff	?___fltol,uart_init@x
  1049   0008B2  C069  F091         	movff	?___fltol+1,uart_init@x+1
  1050   0008B6  C06A  F092         	movff	?___fltol+2,uart_init@x+2
  1051   0008BA  C06B  F093         	movff	?___fltol+3,uart_init@x+3
  1052   0008BE                     
  1053                           ;./uart.h: 34:     y = (long) ((frequency / (16 * baudrate)) - 1);
  1054   0008BE  0E00               	movlw	0
  1055   0008C0  6E44               	movwf	___fladd@a^0,c
  1056   0008C2  0E00               	movlw	0
  1057   0008C4  6E45               	movwf	(___fladd@a+1)^0,c
  1058   0008C6  0E80               	movlw	128
  1059   0008C8  6E46               	movwf	(___fladd@a+2)^0,c
  1060   0008CA  0EBF               	movlw	191
  1061   0008CC  6E47               	movwf	(___fladd@a+3)^0,c
  1062   0008CE  0E00               	movlw	0
  1063   0008D0  6E12               	movwf	___flmul@a^0,c
  1064   0008D2  0E00               	movlw	0
  1065   0008D4  6E13               	movwf	(___flmul@a+1)^0,c
  1066   0008D6  0E80               	movlw	128
  1067   0008D8  6E14               	movwf	(___flmul@a+2)^0,c
  1068   0008DA  0E41               	movlw	65
  1069   0008DC  6E15               	movwf	(___flmul@a+3)^0,c
  1070   0008DE  C0B1  F00E         	movff	uart_init@baudrate,___flmul@b
  1071   0008E2  C0B2  F00F         	movff	uart_init@baudrate+1,___flmul@b+1
  1072   0008E6  C0B3  F010         	movff	uart_init@baudrate+2,___flmul@b+2
  1073   0008EA  C0B4  F011         	movff	uart_init@baudrate+3,___flmul@b+3
  1074   0008EE  ECD4  F00E         	call	___flmul	;wreg free
  1075   0008F2  C00E  F02B         	movff	?___flmul,___fldiv@a
  1076   0008F6  C00F  F02C         	movff	?___flmul+1,___fldiv@a+1
  1077   0008FA  C010  F02D         	movff	?___flmul+2,___fldiv@a+2
  1078   0008FE  C011  F02E         	movff	?___flmul+3,___fldiv@a+3
  1079   000902  C0A9  F027         	movff	uart_init@frequency,___fldiv@b
  1080   000906  C0AA  F028         	movff	uart_init@frequency+1,___fldiv@b+1
  1081   00090A  C0AB  F029         	movff	uart_init@frequency+2,___fldiv@b+2
  1082   00090E  C0AC  F02A         	movff	uart_init@frequency+3,___fldiv@b+3
  1083   000912  ECE9  F010         	call	___fldiv	;wreg free
  1084   000916  C027  F040         	movff	?___fldiv,___fladd@b
  1085   00091A  C028  F041         	movff	?___fldiv+1,___fladd@b+1
  1086   00091E  C029  F042         	movff	?___fldiv+2,___fladd@b+2
  1087   000922  C02A  F043         	movff	?___fldiv+3,___fladd@b+3
  1088   000926  EC73  F00C         	call	___fladd	;wreg free
  1089   00092A  C040  F068         	movff	?___fladd,___fltol@f1
  1090   00092E  C041  F069         	movff	?___fladd+1,___fltol@f1+1
  1091   000932  C042  F06A         	movff	?___fladd+2,___fltol@f1+2
  1092   000936  C043  F06B         	movff	?___fladd+3,___fltol@f1+3
  1093   00093A  EC1F  F014         	call	___fltol	;wreg free
  1094   00093E  C068  F0A0         	movff	?___fltol,uart_init@y
  1095   000942  C069  F0A1         	movff	?___fltol+1,uart_init@y+1
  1096   000946  C06A  F0A2         	movff	?___fltol+2,uart_init@y+2
  1097   00094A  C06B  F0A3         	movff	?___fltol+3,uart_init@y+3
  1098   00094E                     
  1099                           ;./uart.h: 35:     z = (long) ((frequency / (4 * baudrate)) - 1);
  1100   00094E  0E00               	movlw	0
  1101   000950  6E44               	movwf	___fladd@a^0,c
  1102   000952  0E00               	movlw	0
  1103   000954  6E45               	movwf	(___fladd@a+1)^0,c
  1104   000956  0E80               	movlw	128
  1105   000958  6E46               	movwf	(___fladd@a+2)^0,c
  1106   00095A  0EBF               	movlw	191
  1107   00095C  6E47               	movwf	(___fladd@a+3)^0,c
  1108   00095E  0E00               	movlw	0
  1109   000960  6E12               	movwf	___flmul@a^0,c
  1110   000962  0E00               	movlw	0
  1111   000964  6E13               	movwf	(___flmul@a+1)^0,c
  1112   000966  0E80               	movlw	128
  1113   000968  6E14               	movwf	(___flmul@a+2)^0,c
  1114   00096A  0E40               	movlw	64
  1115   00096C  6E15               	movwf	(___flmul@a+3)^0,c
  1116   00096E  C0B1  F00E         	movff	uart_init@baudrate,___flmul@b
  1117   000972  C0B2  F00F         	movff	uart_init@baudrate+1,___flmul@b+1
  1118   000976  C0B3  F010         	movff	uart_init@baudrate+2,___flmul@b+2
  1119   00097A  C0B4  F011         	movff	uart_init@baudrate+3,___flmul@b+3
  1120   00097E  ECD4  F00E         	call	___flmul	;wreg free
  1121   000982  C00E  F02B         	movff	?___flmul,___fldiv@a
  1122   000986  C00F  F02C         	movff	?___flmul+1,___fldiv@a+1
  1123   00098A  C010  F02D         	movff	?___flmul+2,___fldiv@a+2
  1124   00098E  C011  F02E         	movff	?___flmul+3,___fldiv@a+3
  1125   000992  C0A9  F027         	movff	uart_init@frequency,___fldiv@b
  1126   000996  C0AA  F028         	movff	uart_init@frequency+1,___fldiv@b+1
  1127   00099A  C0AB  F029         	movff	uart_init@frequency+2,___fldiv@b+2
  1128   00099E  C0AC  F02A         	movff	uart_init@frequency+3,___fldiv@b+3
  1129   0009A2  ECE9  F010         	call	___fldiv	;wreg free
  1130   0009A6  C027  F040         	movff	?___fldiv,___fladd@b
  1131   0009AA  C028  F041         	movff	?___fldiv+1,___fladd@b+1
  1132   0009AE  C029  F042         	movff	?___fldiv+2,___fladd@b+2
  1133   0009B2  C02A  F043         	movff	?___fldiv+3,___fladd@b+3
  1134   0009B6  EC73  F00C         	call	___fladd	;wreg free
  1135   0009BA  C040  F068         	movff	?___fladd,___fltol@f1
  1136   0009BE  C041  F069         	movff	?___fladd+1,___fltol@f1+1
  1137   0009C2  C042  F06A         	movff	?___fladd+2,___fltol@f1+2
  1138   0009C6  C043  F06B         	movff	?___fladd+3,___fltol@f1+3
  1139   0009CA  EC1F  F014         	call	___fltol	;wreg free
  1140   0009CE  C068  F0A4         	movff	?___fltol,uart_init@z
  1141   0009D2  C069  F0A5         	movff	?___fltol+1,uart_init@z+1
  1142   0009D6  C06A  F0A6         	movff	?___fltol+2,uart_init@z+2
  1143   0009DA  C06B  F0A7         	movff	?___fltol+3,uart_init@z+3
  1144   0009DE                     
  1145                           ;./uart.h: 39:     if (x > 0) {
  1146   0009DE  0100               	movlb	0	; () banked
  1147   0009E0  BF93               	btfsc	(uart_init@x+3)& (0+255),7,b
  1148   0009E2  EFFD  F004         	goto	u4151
  1149   0009E6  5193               	movf	(uart_init@x+3)& (0+255),w,b
  1150   0009E8  1192               	iorwf	(uart_init@x+2)& (0+255),w,b
  1151   0009EA  1191               	iorwf	(uart_init@x+1)& (0+255),w,b
  1152   0009EC  E108               	bnz	u4150
  1153   0009EE  0590               	decf	uart_init@x& (0+255),w,b
  1154   0009F0  A0D8               	btfss	status,0,c
  1155   0009F2  EFFD  F004         	goto	u4151
  1156   0009F6  EFFF  F004         	goto	u4150
  1157   0009FA                     u4151:
  1158   0009FA  EF64  F008         	goto	l3238
  1159   0009FE                     u4150:
  1160   0009FE                     
  1161                           ; BSR set to: 0
  1162                           ;./uart.h: 40:         e1 = fabsf((frequency / (64 * (x + 1)) - baudrate) / baudrate);
  1163   0009FE  C0B1  F06C         	movff	uart_init@baudrate,___flsub@a
  1164   000A02  C0B2  F06D         	movff	uart_init@baudrate+1,___flsub@a+1
  1165   000A06  C0B3  F06E         	movff	uart_init@baudrate+2,___flsub@a+2
  1166   000A0A  C0B4  F06F         	movff	uart_init@baudrate+3,___flsub@a+3
  1167   000A0E  C090  F078         	movff	uart_init@x,??_uart_init
  1168   000A12  C091  F079         	movff	uart_init@x+1,??_uart_init+1
  1169   000A16  C092  F07A         	movff	uart_init@x+2,??_uart_init+2
  1170   000A1A  C093  F07B         	movff	uart_init@x+3,??_uart_init+3
  1171   000A1E  0E06               	movlw	6
  1172   000A20                     u4165:
  1173   000A20  90D8               	bcf	status,0,c
  1174   000A22  3778               	rlcf	??_uart_init& (0+255),f,b
  1175   000A24  3779               	rlcf	(??_uart_init+1)& (0+255),f,b
  1176   000A26  377A               	rlcf	(??_uart_init+2)& (0+255),f,b
  1177   000A28  377B               	rlcf	(??_uart_init+3)& (0+255),f,b
  1178   000A2A  2EE8               	decfsz	wreg,f,c
  1179   000A2C  EF10  F005         	goto	u4165
  1180   000A30  0E40               	movlw	64
  1181   000A32  2578               	addwf	??_uart_init& (0+255),w,b
  1182   000A34  6E0E               	movwf	___xxtofl@val^0,c
  1183   000A36  0E00               	movlw	0
  1184   000A38  2179               	addwfc	(??_uart_init+1)& (0+255),w,b
  1185   000A3A  6E0F               	movwf	(___xxtofl@val+1)^0,c
  1186   000A3C  0E00               	movlw	0
  1187   000A3E  217A               	addwfc	(??_uart_init+2)& (0+255),w,b
  1188   000A40  6E10               	movwf	(___xxtofl@val+2)^0,c
  1189   000A42  0E00               	movlw	0
  1190   000A44  217B               	addwfc	(??_uart_init+3)& (0+255),w,b
  1191   000A46  6E11               	movwf	(___xxtofl@val+3)^0,c
  1192   000A48  0E01               	movlw	1
  1193   000A4A  ECB6  F012         	call	___xxtofl
  1194   000A4E  C00E  F02B         	movff	?___xxtofl,___fldiv@a
  1195   000A52  C00F  F02C         	movff	?___xxtofl+1,___fldiv@a+1
  1196   000A56  C010  F02D         	movff	?___xxtofl+2,___fldiv@a+2
  1197   000A5A  C011  F02E         	movff	?___xxtofl+3,___fldiv@a+3
  1198   000A5E  C0A9  F027         	movff	uart_init@frequency,___fldiv@b
  1199   000A62  C0AA  F028         	movff	uart_init@frequency+1,___fldiv@b+1
  1200   000A66  C0AB  F029         	movff	uart_init@frequency+2,___fldiv@b+2
  1201   000A6A  C0AC  F02A         	movff	uart_init@frequency+3,___fldiv@b+3
  1202   000A6E  ECE9  F010         	call	___fldiv	;wreg free
  1203   000A72  C027  F068         	movff	?___fldiv,___flsub@b
  1204   000A76  C028  F069         	movff	?___fldiv+1,___flsub@b+1
  1205   000A7A  C029  F06A         	movff	?___fldiv+2,___flsub@b+2
  1206   000A7E  C02A  F06B         	movff	?___fldiv+3,___flsub@b+3
  1207   000A82  EC30  F018         	call	___flsub	;wreg free
  1208   000A86  C068  F0AD         	movff	?___flsub,_uart_init$919
  1209   000A8A  C069  F0AE         	movff	?___flsub+1,_uart_init$919+1
  1210   000A8E  C06A  F0AF         	movff	?___flsub+2,_uart_init$919+2
  1211   000A92  C06B  F0B0         	movff	?___flsub+3,_uart_init$919+3
  1212                           
  1213                           ;./uart.h: 40:         e1 = fabsf((frequency / (64 * (x + 1)) - baudrate) / baudrate);
  1214   000A96  C0AD  F027         	movff	_uart_init$919,___fldiv@b
  1215   000A9A  C0AE  F028         	movff	_uart_init$919+1,___fldiv@b+1
  1216   000A9E  C0AF  F029         	movff	_uart_init$919+2,___fldiv@b+2
  1217   000AA2  C0B0  F02A         	movff	_uart_init$919+3,___fldiv@b+3
  1218   000AA6  C0B1  F02B         	movff	uart_init@baudrate,___fldiv@a
  1219   000AAA  C0B2  F02C         	movff	uart_init@baudrate+1,___fldiv@a+1
  1220   000AAE  C0B3  F02D         	movff	uart_init@baudrate+2,___fldiv@a+2
  1221   000AB2  C0B4  F02E         	movff	uart_init@baudrate+3,___fldiv@a+3
  1222   000AB6  ECE9  F010         	call	___fldiv	;wreg free
  1223   000ABA  C027  F070         	movff	?___fldiv,fabsf@x
  1224   000ABE  C028  F071         	movff	?___fldiv+1,fabsf@x+1
  1225   000AC2  C029  F072         	movff	?___fldiv+2,fabsf@x+2
  1226   000AC6  C02A  F073         	movff	?___fldiv+3,fabsf@x+3
  1227   000ACA  EC99  F018         	call	_fabsf	;wreg free
  1228   000ACE  C070  F088         	movff	?_fabsf,uart_init@e1
  1229   000AD2  C071  F089         	movff	?_fabsf+1,uart_init@e1+1
  1230   000AD6  C072  F08A         	movff	?_fabsf+2,uart_init@e1+2
  1231   000ADA  C073  F08B         	movff	?_fabsf+3,uart_init@e1+3
  1232                           
  1233                           ;./uart.h: 41:         e11 = fabsf((frequency / (64 * (x + 1 + 1)) - baudrate) / baudrat
      +                          e);
  1234   000ADE  C0B1  F06C         	movff	uart_init@baudrate,___flsub@a
  1235   000AE2  C0B2  F06D         	movff	uart_init@baudrate+1,___flsub@a+1
  1236   000AE6  C0B3  F06E         	movff	uart_init@baudrate+2,___flsub@a+2
  1237   000AEA  C0B4  F06F         	movff	uart_init@baudrate+3,___flsub@a+3
  1238   000AEE  C090  F078         	movff	uart_init@x,??_uart_init
  1239   000AF2  C091  F079         	movff	uart_init@x+1,??_uart_init+1
  1240   000AF6  C092  F07A         	movff	uart_init@x+2,??_uart_init+2
  1241   000AFA  C093  F07B         	movff	uart_init@x+3,??_uart_init+3
  1242   000AFE  0E06               	movlw	6
  1243   000B00                     u4175:
  1244   000B00  90D8               	bcf	status,0,c
  1245   000B02  0100               	movlb	0	; () banked
  1246   000B04  3778               	rlcf	??_uart_init& (0+255),f,b
  1247   000B06  3779               	rlcf	(??_uart_init+1)& (0+255),f,b
  1248   000B08  377A               	rlcf	(??_uart_init+2)& (0+255),f,b
  1249   000B0A  377B               	rlcf	(??_uart_init+3)& (0+255),f,b
  1250   000B0C  2EE8               	decfsz	wreg,f,c
  1251   000B0E  EF80  F005         	goto	u4175
  1252   000B12  0E80               	movlw	128
  1253   000B14  2578               	addwf	??_uart_init& (0+255),w,b
  1254   000B16  6E0E               	movwf	___xxtofl@val^0,c
  1255   000B18  0E00               	movlw	0
  1256   000B1A  2179               	addwfc	(??_uart_init+1)& (0+255),w,b
  1257   000B1C  6E0F               	movwf	(___xxtofl@val+1)^0,c
  1258   000B1E  0E00               	movlw	0
  1259   000B20  217A               	addwfc	(??_uart_init+2)& (0+255),w,b
  1260   000B22  6E10               	movwf	(___xxtofl@val+2)^0,c
  1261   000B24  0E00               	movlw	0
  1262   000B26  217B               	addwfc	(??_uart_init+3)& (0+255),w,b
  1263   000B28  6E11               	movwf	(___xxtofl@val+3)^0,c
  1264   000B2A  0E01               	movlw	1
  1265   000B2C  ECB6  F012         	call	___xxtofl
  1266   000B30  C00E  F02B         	movff	?___xxtofl,___fldiv@a
  1267   000B34  C00F  F02C         	movff	?___xxtofl+1,___fldiv@a+1
  1268   000B38  C010  F02D         	movff	?___xxtofl+2,___fldiv@a+2
  1269   000B3C  C011  F02E         	movff	?___xxtofl+3,___fldiv@a+3
  1270   000B40  C0A9  F027         	movff	uart_init@frequency,___fldiv@b
  1271   000B44  C0AA  F028         	movff	uart_init@frequency+1,___fldiv@b+1
  1272   000B48  C0AB  F029         	movff	uart_init@frequency+2,___fldiv@b+2
  1273   000B4C  C0AC  F02A         	movff	uart_init@frequency+3,___fldiv@b+3
  1274   000B50  ECE9  F010         	call	___fldiv	;wreg free
  1275   000B54  C027  F068         	movff	?___fldiv,___flsub@b
  1276   000B58  C028  F069         	movff	?___fldiv+1,___flsub@b+1
  1277   000B5C  C029  F06A         	movff	?___fldiv+2,___flsub@b+2
  1278   000B60  C02A  F06B         	movff	?___fldiv+3,___flsub@b+3
  1279   000B64  EC30  F018         	call	___flsub	;wreg free
  1280   000B68  C068  F0AD         	movff	?___flsub,_uart_init$919
  1281   000B6C  C069  F0AE         	movff	?___flsub+1,_uart_init$919+1
  1282   000B70  C06A  F0AF         	movff	?___flsub+2,_uart_init$919+2
  1283   000B74  C06B  F0B0         	movff	?___flsub+3,_uart_init$919+3
  1284                           
  1285                           ;./uart.h: 41:         e11 = fabsf((frequency / (64 * (x + 1 + 1)) - baudrate) / baudrat
      +                          e);
  1286   000B78  C0AD  F027         	movff	_uart_init$919,___fldiv@b
  1287   000B7C  C0AE  F028         	movff	_uart_init$919+1,___fldiv@b+1
  1288   000B80  C0AF  F029         	movff	_uart_init$919+2,___fldiv@b+2
  1289   000B84  C0B0  F02A         	movff	_uart_init$919+3,___fldiv@b+3
  1290   000B88  C0B1  F02B         	movff	uart_init@baudrate,___fldiv@a
  1291   000B8C  C0B2  F02C         	movff	uart_init@baudrate+1,___fldiv@a+1
  1292   000B90  C0B3  F02D         	movff	uart_init@baudrate+2,___fldiv@a+2
  1293   000B94  C0B4  F02E         	movff	uart_init@baudrate+3,___fldiv@a+3
  1294   000B98  ECE9  F010         	call	___fldiv	;wreg free
  1295   000B9C  C027  F070         	movff	?___fldiv,fabsf@x
  1296   000BA0  C028  F071         	movff	?___fldiv+1,fabsf@x+1
  1297   000BA4  C029  F072         	movff	?___fldiv+2,fabsf@x+2
  1298   000BA8  C02A  F073         	movff	?___fldiv+3,fabsf@x+3
  1299   000BAC  EC99  F018         	call	_fabsf	;wreg free
  1300   000BB0  C070  F080         	movff	?_fabsf,uart_init@e11
  1301   000BB4  C071  F081         	movff	?_fabsf+1,uart_init@e11+1
  1302   000BB8  C072  F082         	movff	?_fabsf+2,uart_init@e11+2
  1303   000BBC  C073  F083         	movff	?_fabsf+3,uart_init@e11+3
  1304                           
  1305                           ;./uart.h: 42:         if (e11 < e1) {
  1306   000BC0  C080  F00E         	movff	uart_init@e11,___flge@ff1
  1307   000BC4  C081  F00F         	movff	uart_init@e11+1,___flge@ff1+1
  1308   000BC8  C082  F010         	movff	uart_init@e11+2,___flge@ff1+2
  1309   000BCC  C083  F011         	movff	uart_init@e11+3,___flge@ff1+3
  1310   000BD0  C088  F012         	movff	uart_init@e1,___flge@ff2
  1311   000BD4  C089  F013         	movff	uart_init@e1+1,___flge@ff2+1
  1312   000BD8  C08A  F014         	movff	uart_init@e1+2,___flge@ff2+2
  1313   000BDC  C08B  F015         	movff	uart_init@e1+3,___flge@ff2+3
  1314   000BE0  ECA3  F014         	call	___flge	;wreg free
  1315   000BE4  B0D8               	btfsc	status,0,c
  1316   000BE6  EFF7  F005         	goto	u4181
  1317   000BEA  EFF9  F005         	goto	u4180
  1318   000BEE                     u4181:
  1319   000BEE  EF0E  F006         	goto	l3206
  1320   000BF2                     u4180:
  1321   000BF2                     
  1322                           ;./uart.h: 43:             e1 = e11;
  1323   000BF2  C080  F088         	movff	uart_init@e11,uart_init@e1
  1324   000BF6  C081  F089         	movff	uart_init@e11+1,uart_init@e1+1
  1325   000BFA  C082  F08A         	movff	uart_init@e11+2,uart_init@e1+2
  1326   000BFE  C083  F08B         	movff	uart_init@e11+3,uart_init@e1+3
  1327   000C02                     
  1328                           ;./uart.h: 44:             x = x + 1;
  1329   000C02  0E01               	movlw	1
  1330   000C04  0100               	movlb	0	; () banked
  1331   000C06  2590               	addwf	uart_init@x& (0+255),w,b
  1332   000C08  6F90               	movwf	uart_init@x& (0+255),b
  1333   000C0A  0E00               	movlw	0
  1334   000C0C  2191               	addwfc	(uart_init@x+1)& (0+255),w,b
  1335   000C0E  6F91               	movwf	(uart_init@x+1)& (0+255),b
  1336   000C10  0E00               	movlw	0
  1337   000C12  2192               	addwfc	(uart_init@x+2)& (0+255),w,b
  1338   000C14  6F92               	movwf	(uart_init@x+2)& (0+255),b
  1339   000C16  0E00               	movlw	0
  1340   000C18  2193               	addwfc	(uart_init@x+3)& (0+255),w,b
  1341   000C1A  6F93               	movwf	(uart_init@x+3)& (0+255),b
  1342   000C1C                     l3206:
  1343                           
  1344                           ;./uart.h: 47:         e2 = fabsf((frequency / (16 * (y + 1)) - baudrate) / baudrate);
  1345   000C1C  C0B1  F06C         	movff	uart_init@baudrate,___flsub@a
  1346   000C20  C0B2  F06D         	movff	uart_init@baudrate+1,___flsub@a+1
  1347   000C24  C0B3  F06E         	movff	uart_init@baudrate+2,___flsub@a+2
  1348   000C28  C0B4  F06F         	movff	uart_init@baudrate+3,___flsub@a+3
  1349   000C2C  C0A0  F078         	movff	uart_init@y,??_uart_init
  1350   000C30  C0A1  F079         	movff	uart_init@y+1,??_uart_init+1
  1351   000C34  C0A2  F07A         	movff	uart_init@y+2,??_uart_init+2
  1352   000C38  C0A3  F07B         	movff	uart_init@y+3,??_uart_init+3
  1353   000C3C  0E04               	movlw	4
  1354   000C3E                     u4195:
  1355   000C3E  90D8               	bcf	status,0,c
  1356   000C40  0100               	movlb	0	; () banked
  1357   000C42  3778               	rlcf	??_uart_init& (0+255),f,b
  1358   000C44  3779               	rlcf	(??_uart_init+1)& (0+255),f,b
  1359   000C46  377A               	rlcf	(??_uart_init+2)& (0+255),f,b
  1360   000C48  377B               	rlcf	(??_uart_init+3)& (0+255),f,b
  1361   000C4A  2EE8               	decfsz	wreg,f,c
  1362   000C4C  EF1F  F006         	goto	u4195
  1363   000C50  0E10               	movlw	16
  1364   000C52  2578               	addwf	??_uart_init& (0+255),w,b
  1365   000C54  6E0E               	movwf	___xxtofl@val^0,c
  1366   000C56  0E00               	movlw	0
  1367   000C58  2179               	addwfc	(??_uart_init+1)& (0+255),w,b
  1368   000C5A  6E0F               	movwf	(___xxtofl@val+1)^0,c
  1369   000C5C  0E00               	movlw	0
  1370   000C5E  217A               	addwfc	(??_uart_init+2)& (0+255),w,b
  1371   000C60  6E10               	movwf	(___xxtofl@val+2)^0,c
  1372   000C62  0E00               	movlw	0
  1373   000C64  217B               	addwfc	(??_uart_init+3)& (0+255),w,b
  1374   000C66  6E11               	movwf	(___xxtofl@val+3)^0,c
  1375   000C68  0E01               	movlw	1
  1376   000C6A  ECB6  F012         	call	___xxtofl
  1377   000C6E  C00E  F02B         	movff	?___xxtofl,___fldiv@a
  1378   000C72  C00F  F02C         	movff	?___xxtofl+1,___fldiv@a+1
  1379   000C76  C010  F02D         	movff	?___xxtofl+2,___fldiv@a+2
  1380   000C7A  C011  F02E         	movff	?___xxtofl+3,___fldiv@a+3
  1381   000C7E  C0A9  F027         	movff	uart_init@frequency,___fldiv@b
  1382   000C82  C0AA  F028         	movff	uart_init@frequency+1,___fldiv@b+1
  1383   000C86  C0AB  F029         	movff	uart_init@frequency+2,___fldiv@b+2
  1384   000C8A  C0AC  F02A         	movff	uart_init@frequency+3,___fldiv@b+3
  1385   000C8E  ECE9  F010         	call	___fldiv	;wreg free
  1386   000C92  C027  F068         	movff	?___fldiv,___flsub@b
  1387   000C96  C028  F069         	movff	?___fldiv+1,___flsub@b+1
  1388   000C9A  C029  F06A         	movff	?___fldiv+2,___flsub@b+2
  1389   000C9E  C02A  F06B         	movff	?___fldiv+3,___flsub@b+3
  1390   000CA2  EC30  F018         	call	___flsub	;wreg free
  1391   000CA6  C068  F0AD         	movff	?___flsub,_uart_init$919
  1392   000CAA  C069  F0AE         	movff	?___flsub+1,_uart_init$919+1
  1393   000CAE  C06A  F0AF         	movff	?___flsub+2,_uart_init$919+2
  1394   000CB2  C06B  F0B0         	movff	?___flsub+3,_uart_init$919+3
  1395   000CB6                     
  1396                           ;./uart.h: 47:         e2 = fabsf((frequency / (16 * (y + 1)) - baudrate) / baudrate);
  1397   000CB6  C0AD  F027         	movff	_uart_init$919,___fldiv@b
  1398   000CBA  C0AE  F028         	movff	_uart_init$919+1,___fldiv@b+1
  1399   000CBE  C0AF  F029         	movff	_uart_init$919+2,___fldiv@b+2
  1400   000CC2  C0B0  F02A         	movff	_uart_init$919+3,___fldiv@b+3
  1401   000CC6  C0B1  F02B         	movff	uart_init@baudrate,___fldiv@a
  1402   000CCA  C0B2  F02C         	movff	uart_init@baudrate+1,___fldiv@a+1
  1403   000CCE  C0B3  F02D         	movff	uart_init@baudrate+2,___fldiv@a+2
  1404   000CD2  C0B4  F02E         	movff	uart_init@baudrate+3,___fldiv@a+3
  1405   000CD6  ECE9  F010         	call	___fldiv	;wreg free
  1406   000CDA  C027  F070         	movff	?___fldiv,fabsf@x
  1407   000CDE  C028  F071         	movff	?___fldiv+1,fabsf@x+1
  1408   000CE2  C029  F072         	movff	?___fldiv+2,fabsf@x+2
  1409   000CE6  C02A  F073         	movff	?___fldiv+3,fabsf@x+3
  1410   000CEA  EC99  F018         	call	_fabsf	;wreg free
  1411   000CEE  C070  F094         	movff	?_fabsf,uart_init@e2
  1412   000CF2  C071  F095         	movff	?_fabsf+1,uart_init@e2+1
  1413   000CF6  C072  F096         	movff	?_fabsf+2,uart_init@e2+2
  1414   000CFA  C073  F097         	movff	?_fabsf+3,uart_init@e2+3
  1415   000CFE                     
  1416                           ;./uart.h: 48:         e22 = fabsf((frequency / (16 * (y + 1 + 1)) - baudrate) / baudrat
      +                          e);
  1417   000CFE  C0B1  F06C         	movff	uart_init@baudrate,___flsub@a
  1418   000D02  C0B2  F06D         	movff	uart_init@baudrate+1,___flsub@a+1
  1419   000D06  C0B3  F06E         	movff	uart_init@baudrate+2,___flsub@a+2
  1420   000D0A  C0B4  F06F         	movff	uart_init@baudrate+3,___flsub@a+3
  1421   000D0E  C0A0  F078         	movff	uart_init@y,??_uart_init
  1422   000D12  C0A1  F079         	movff	uart_init@y+1,??_uart_init+1
  1423   000D16  C0A2  F07A         	movff	uart_init@y+2,??_uart_init+2
  1424   000D1A  C0A3  F07B         	movff	uart_init@y+3,??_uart_init+3
  1425   000D1E  0E04               	movlw	4
  1426   000D20                     u4205:
  1427   000D20  90D8               	bcf	status,0,c
  1428   000D22  0100               	movlb	0	; () banked
  1429   000D24  3778               	rlcf	??_uart_init& (0+255),f,b
  1430   000D26  3779               	rlcf	(??_uart_init+1)& (0+255),f,b
  1431   000D28  377A               	rlcf	(??_uart_init+2)& (0+255),f,b
  1432   000D2A  377B               	rlcf	(??_uart_init+3)& (0+255),f,b
  1433   000D2C  2EE8               	decfsz	wreg,f,c
  1434   000D2E  EF90  F006         	goto	u4205
  1435   000D32  0E20               	movlw	32
  1436   000D34  2578               	addwf	??_uart_init& (0+255),w,b
  1437   000D36  6E0E               	movwf	___xxtofl@val^0,c
  1438   000D38  0E00               	movlw	0
  1439   000D3A  2179               	addwfc	(??_uart_init+1)& (0+255),w,b
  1440   000D3C  6E0F               	movwf	(___xxtofl@val+1)^0,c
  1441   000D3E  0E00               	movlw	0
  1442   000D40  217A               	addwfc	(??_uart_init+2)& (0+255),w,b
  1443   000D42  6E10               	movwf	(___xxtofl@val+2)^0,c
  1444   000D44  0E00               	movlw	0
  1445   000D46  217B               	addwfc	(??_uart_init+3)& (0+255),w,b
  1446   000D48  6E11               	movwf	(___xxtofl@val+3)^0,c
  1447   000D4A  0E01               	movlw	1
  1448   000D4C  ECB6  F012         	call	___xxtofl
  1449   000D50  C00E  F02B         	movff	?___xxtofl,___fldiv@a
  1450   000D54  C00F  F02C         	movff	?___xxtofl+1,___fldiv@a+1
  1451   000D58  C010  F02D         	movff	?___xxtofl+2,___fldiv@a+2
  1452   000D5C  C011  F02E         	movff	?___xxtofl+3,___fldiv@a+3
  1453   000D60  C0A9  F027         	movff	uart_init@frequency,___fldiv@b
  1454   000D64  C0AA  F028         	movff	uart_init@frequency+1,___fldiv@b+1
  1455   000D68  C0AB  F029         	movff	uart_init@frequency+2,___fldiv@b+2
  1456   000D6C  C0AC  F02A         	movff	uart_init@frequency+3,___fldiv@b+3
  1457   000D70  ECE9  F010         	call	___fldiv	;wreg free
  1458   000D74  C027  F068         	movff	?___fldiv,___flsub@b
  1459   000D78  C028  F069         	movff	?___fldiv+1,___flsub@b+1
  1460   000D7C  C029  F06A         	movff	?___fldiv+2,___flsub@b+2
  1461   000D80  C02A  F06B         	movff	?___fldiv+3,___flsub@b+3
  1462   000D84  EC30  F018         	call	___flsub	;wreg free
  1463   000D88  C068  F0AD         	movff	?___flsub,_uart_init$919
  1464   000D8C  C069  F0AE         	movff	?___flsub+1,_uart_init$919+1
  1465   000D90  C06A  F0AF         	movff	?___flsub+2,_uart_init$919+2
  1466   000D94  C06B  F0B0         	movff	?___flsub+3,_uart_init$919+3
  1467   000D98                     
  1468                           ;./uart.h: 48:         e22 = fabsf((frequency / (16 * (y + 1 + 1)) - baudrate) / baudrat
      +                          e);
  1469   000D98  C0AD  F027         	movff	_uart_init$919,___fldiv@b
  1470   000D9C  C0AE  F028         	movff	_uart_init$919+1,___fldiv@b+1
  1471   000DA0  C0AF  F029         	movff	_uart_init$919+2,___fldiv@b+2
  1472   000DA4  C0B0  F02A         	movff	_uart_init$919+3,___fldiv@b+3
  1473   000DA8  C0B1  F02B         	movff	uart_init@baudrate,___fldiv@a
  1474   000DAC  C0B2  F02C         	movff	uart_init@baudrate+1,___fldiv@a+1
  1475   000DB0  C0B3  F02D         	movff	uart_init@baudrate+2,___fldiv@a+2
  1476   000DB4  C0B4  F02E         	movff	uart_init@baudrate+3,___fldiv@a+3
  1477   000DB8  ECE9  F010         	call	___fldiv	;wreg free
  1478   000DBC  C027  F070         	movff	?___fldiv,fabsf@x
  1479   000DC0  C028  F071         	movff	?___fldiv+1,fabsf@x+1
  1480   000DC4  C029  F072         	movff	?___fldiv+2,fabsf@x+2
  1481   000DC8  C02A  F073         	movff	?___fldiv+3,fabsf@x+3
  1482   000DCC  EC99  F018         	call	_fabsf	;wreg free
  1483   000DD0  C070  F08C         	movff	?_fabsf,uart_init@e22
  1484   000DD4  C071  F08D         	movff	?_fabsf+1,uart_init@e22+1
  1485   000DD8  C072  F08E         	movff	?_fabsf+2,uart_init@e22+2
  1486   000DDC  C073  F08F         	movff	?_fabsf+3,uart_init@e22+3
  1487   000DE0                     
  1488                           ;./uart.h: 49:         if (e22 < e2) {
  1489   000DE0  C08C  F00E         	movff	uart_init@e22,___flge@ff1
  1490   000DE4  C08D  F00F         	movff	uart_init@e22+1,___flge@ff1+1
  1491   000DE8  C08E  F010         	movff	uart_init@e22+2,___flge@ff1+2
  1492   000DEC  C08F  F011         	movff	uart_init@e22+3,___flge@ff1+3
  1493   000DF0  C094  F012         	movff	uart_init@e2,___flge@ff2
  1494   000DF4  C095  F013         	movff	uart_init@e2+1,___flge@ff2+1
  1495   000DF8  C096  F014         	movff	uart_init@e2+2,___flge@ff2+2
  1496   000DFC  C097  F015         	movff	uart_init@e2+3,___flge@ff2+3
  1497   000E00  ECA3  F014         	call	___flge	;wreg free
  1498   000E04  B0D8               	btfsc	status,0,c
  1499   000E06  EF07  F007         	goto	u4211
  1500   000E0A  EF09  F007         	goto	u4210
  1501   000E0E                     u4211:
  1502   000E0E  EF1E  F007         	goto	l3220
  1503   000E12                     u4210:
  1504   000E12                     
  1505                           ;./uart.h: 50:             e2 = e22;
  1506   000E12  C08C  F094         	movff	uart_init@e22,uart_init@e2
  1507   000E16  C08D  F095         	movff	uart_init@e22+1,uart_init@e2+1
  1508   000E1A  C08E  F096         	movff	uart_init@e22+2,uart_init@e2+2
  1509   000E1E  C08F  F097         	movff	uart_init@e22+3,uart_init@e2+3
  1510   000E22                     
  1511                           ;./uart.h: 51:             y = y + 1;
  1512   000E22  0E01               	movlw	1
  1513   000E24  0100               	movlb	0	; () banked
  1514   000E26  25A0               	addwf	uart_init@y& (0+255),w,b
  1515   000E28  6FA0               	movwf	uart_init@y& (0+255),b
  1516   000E2A  0E00               	movlw	0
  1517   000E2C  21A1               	addwfc	(uart_init@y+1)& (0+255),w,b
  1518   000E2E  6FA1               	movwf	(uart_init@y+1)& (0+255),b
  1519   000E30  0E00               	movlw	0
  1520   000E32  21A2               	addwfc	(uart_init@y+2)& (0+255),w,b
  1521   000E34  6FA2               	movwf	(uart_init@y+2)& (0+255),b
  1522   000E36  0E00               	movlw	0
  1523   000E38  21A3               	addwfc	(uart_init@y+3)& (0+255),w,b
  1524   000E3A  6FA3               	movwf	(uart_init@y+3)& (0+255),b
  1525   000E3C                     l3220:
  1526                           
  1527                           ;./uart.h: 54:         e3 = fabsf((frequency / (4 * (z + 1)) - baudrate) / baudrate);
  1528   000E3C  C0B1  F06C         	movff	uart_init@baudrate,___flsub@a
  1529   000E40  C0B2  F06D         	movff	uart_init@baudrate+1,___flsub@a+1
  1530   000E44  C0B3  F06E         	movff	uart_init@baudrate+2,___flsub@a+2
  1531   000E48  C0B4  F06F         	movff	uart_init@baudrate+3,___flsub@a+3
  1532   000E4C  C0A4  F078         	movff	uart_init@z,??_uart_init
  1533   000E50  C0A5  F079         	movff	uart_init@z+1,??_uart_init+1
  1534   000E54  C0A6  F07A         	movff	uart_init@z+2,??_uart_init+2
  1535   000E58  C0A7  F07B         	movff	uart_init@z+3,??_uart_init+3
  1536   000E5C  0E02               	movlw	2
  1537   000E5E                     u4225:
  1538   000E5E  90D8               	bcf	status,0,c
  1539   000E60  0100               	movlb	0	; () banked
  1540   000E62  3778               	rlcf	??_uart_init& (0+255),f,b
  1541   000E64  3779               	rlcf	(??_uart_init+1)& (0+255),f,b
  1542   000E66  377A               	rlcf	(??_uart_init+2)& (0+255),f,b
  1543   000E68  377B               	rlcf	(??_uart_init+3)& (0+255),f,b
  1544   000E6A  2EE8               	decfsz	wreg,f,c
  1545   000E6C  EF2F  F007         	goto	u4225
  1546   000E70  0E04               	movlw	4
  1547   000E72  2578               	addwf	??_uart_init& (0+255),w,b
  1548   000E74  6E0E               	movwf	___xxtofl@val^0,c
  1549   000E76  0E00               	movlw	0
  1550   000E78  2179               	addwfc	(??_uart_init+1)& (0+255),w,b
  1551   000E7A  6E0F               	movwf	(___xxtofl@val+1)^0,c
  1552   000E7C  0E00               	movlw	0
  1553   000E7E  217A               	addwfc	(??_uart_init+2)& (0+255),w,b
  1554   000E80  6E10               	movwf	(___xxtofl@val+2)^0,c
  1555   000E82  0E00               	movlw	0
  1556   000E84  217B               	addwfc	(??_uart_init+3)& (0+255),w,b
  1557   000E86  6E11               	movwf	(___xxtofl@val+3)^0,c
  1558   000E88  0E01               	movlw	1
  1559   000E8A  ECB6  F012         	call	___xxtofl
  1560   000E8E  C00E  F02B         	movff	?___xxtofl,___fldiv@a
  1561   000E92  C00F  F02C         	movff	?___xxtofl+1,___fldiv@a+1
  1562   000E96  C010  F02D         	movff	?___xxtofl+2,___fldiv@a+2
  1563   000E9A  C011  F02E         	movff	?___xxtofl+3,___fldiv@a+3
  1564   000E9E  C0A9  F027         	movff	uart_init@frequency,___fldiv@b
  1565   000EA2  C0AA  F028         	movff	uart_init@frequency+1,___fldiv@b+1
  1566   000EA6  C0AB  F029         	movff	uart_init@frequency+2,___fldiv@b+2
  1567   000EAA  C0AC  F02A         	movff	uart_init@frequency+3,___fldiv@b+3
  1568   000EAE  ECE9  F010         	call	___fldiv	;wreg free
  1569   000EB2  C027  F068         	movff	?___fldiv,___flsub@b
  1570   000EB6  C028  F069         	movff	?___fldiv+1,___flsub@b+1
  1571   000EBA  C029  F06A         	movff	?___fldiv+2,___flsub@b+2
  1572   000EBE  C02A  F06B         	movff	?___fldiv+3,___flsub@b+3
  1573   000EC2  EC30  F018         	call	___flsub	;wreg free
  1574   000EC6  C068  F0AD         	movff	?___flsub,_uart_init$919
  1575   000ECA  C069  F0AE         	movff	?___flsub+1,_uart_init$919+1
  1576   000ECE  C06A  F0AF         	movff	?___flsub+2,_uart_init$919+2
  1577   000ED2  C06B  F0B0         	movff	?___flsub+3,_uart_init$919+3
  1578   000ED6                     
  1579                           ;./uart.h: 54:         e3 = fabsf((frequency / (4 * (z + 1)) - baudrate) / baudrate);
  1580   000ED6  C0AD  F027         	movff	_uart_init$919,___fldiv@b
  1581   000EDA  C0AE  F028         	movff	_uart_init$919+1,___fldiv@b+1
  1582   000EDE  C0AF  F029         	movff	_uart_init$919+2,___fldiv@b+2
  1583   000EE2  C0B0  F02A         	movff	_uart_init$919+3,___fldiv@b+3
  1584   000EE6  C0B1  F02B         	movff	uart_init@baudrate,___fldiv@a
  1585   000EEA  C0B2  F02C         	movff	uart_init@baudrate+1,___fldiv@a+1
  1586   000EEE  C0B3  F02D         	movff	uart_init@baudrate+2,___fldiv@a+2
  1587   000EF2  C0B4  F02E         	movff	uart_init@baudrate+3,___fldiv@a+3
  1588   000EF6  ECE9  F010         	call	___fldiv	;wreg free
  1589   000EFA  C027  F070         	movff	?___fldiv,fabsf@x
  1590   000EFE  C028  F071         	movff	?___fldiv+1,fabsf@x+1
  1591   000F02  C029  F072         	movff	?___fldiv+2,fabsf@x+2
  1592   000F06  C02A  F073         	movff	?___fldiv+3,fabsf@x+3
  1593   000F0A  EC99  F018         	call	_fabsf	;wreg free
  1594   000F0E  C070  F09C         	movff	?_fabsf,uart_init@e3
  1595   000F12  C071  F09D         	movff	?_fabsf+1,uart_init@e3+1
  1596   000F16  C072  F09E         	movff	?_fabsf+2,uart_init@e3+2
  1597   000F1A  C073  F09F         	movff	?_fabsf+3,uart_init@e3+3
  1598   000F1E                     
  1599                           ;./uart.h: 55:         e33 = fabsf((frequency / (4 * (z + 1 + 1)) - baudrate) / baudrate
      +                          );
  1600   000F1E  C0B1  F06C         	movff	uart_init@baudrate,___flsub@a
  1601   000F22  C0B2  F06D         	movff	uart_init@baudrate+1,___flsub@a+1
  1602   000F26  C0B3  F06E         	movff	uart_init@baudrate+2,___flsub@a+2
  1603   000F2A  C0B4  F06F         	movff	uart_init@baudrate+3,___flsub@a+3
  1604   000F2E  C0A4  F078         	movff	uart_init@z,??_uart_init
  1605   000F32  C0A5  F079         	movff	uart_init@z+1,??_uart_init+1
  1606   000F36  C0A6  F07A         	movff	uart_init@z+2,??_uart_init+2
  1607   000F3A  C0A7  F07B         	movff	uart_init@z+3,??_uart_init+3
  1608   000F3E  0E02               	movlw	2
  1609   000F40                     u4235:
  1610   000F40  90D8               	bcf	status,0,c
  1611   000F42  0100               	movlb	0	; () banked
  1612   000F44  3778               	rlcf	??_uart_init& (0+255),f,b
  1613   000F46  3779               	rlcf	(??_uart_init+1)& (0+255),f,b
  1614   000F48  377A               	rlcf	(??_uart_init+2)& (0+255),f,b
  1615   000F4A  377B               	rlcf	(??_uart_init+3)& (0+255),f,b
  1616   000F4C  2EE8               	decfsz	wreg,f,c
  1617   000F4E  EFA0  F007         	goto	u4235
  1618   000F52  0E08               	movlw	8
  1619   000F54  2578               	addwf	??_uart_init& (0+255),w,b
  1620   000F56  6E0E               	movwf	___xxtofl@val^0,c
  1621   000F58  0E00               	movlw	0
  1622   000F5A  2179               	addwfc	(??_uart_init+1)& (0+255),w,b
  1623   000F5C  6E0F               	movwf	(___xxtofl@val+1)^0,c
  1624   000F5E  0E00               	movlw	0
  1625   000F60  217A               	addwfc	(??_uart_init+2)& (0+255),w,b
  1626   000F62  6E10               	movwf	(___xxtofl@val+2)^0,c
  1627   000F64  0E00               	movlw	0
  1628   000F66  217B               	addwfc	(??_uart_init+3)& (0+255),w,b
  1629   000F68  6E11               	movwf	(___xxtofl@val+3)^0,c
  1630   000F6A  0E01               	movlw	1
  1631   000F6C  ECB6  F012         	call	___xxtofl
  1632   000F70  C00E  F02B         	movff	?___xxtofl,___fldiv@a
  1633   000F74  C00F  F02C         	movff	?___xxtofl+1,___fldiv@a+1
  1634   000F78  C010  F02D         	movff	?___xxtofl+2,___fldiv@a+2
  1635   000F7C  C011  F02E         	movff	?___xxtofl+3,___fldiv@a+3
  1636   000F80  C0A9  F027         	movff	uart_init@frequency,___fldiv@b
  1637   000F84  C0AA  F028         	movff	uart_init@frequency+1,___fldiv@b+1
  1638   000F88  C0AB  F029         	movff	uart_init@frequency+2,___fldiv@b+2
  1639   000F8C  C0AC  F02A         	movff	uart_init@frequency+3,___fldiv@b+3
  1640   000F90  ECE9  F010         	call	___fldiv	;wreg free
  1641   000F94  C027  F068         	movff	?___fldiv,___flsub@b
  1642   000F98  C028  F069         	movff	?___fldiv+1,___flsub@b+1
  1643   000F9C  C029  F06A         	movff	?___fldiv+2,___flsub@b+2
  1644   000FA0  C02A  F06B         	movff	?___fldiv+3,___flsub@b+3
  1645   000FA4  EC30  F018         	call	___flsub	;wreg free
  1646   000FA8  C068  F0AD         	movff	?___flsub,_uart_init$919
  1647   000FAC  C069  F0AE         	movff	?___flsub+1,_uart_init$919+1
  1648   000FB0  C06A  F0AF         	movff	?___flsub+2,_uart_init$919+2
  1649   000FB4  C06B  F0B0         	movff	?___flsub+3,_uart_init$919+3
  1650   000FB8                     
  1651                           ;./uart.h: 55:         e33 = fabsf((frequency / (4 * (z + 1 + 1)) - baudrate) / baudrate
      +                          );
  1652   000FB8  C0AD  F027         	movff	_uart_init$919,___fldiv@b
  1653   000FBC  C0AE  F028         	movff	_uart_init$919+1,___fldiv@b+1
  1654   000FC0  C0AF  F029         	movff	_uart_init$919+2,___fldiv@b+2
  1655   000FC4  C0B0  F02A         	movff	_uart_init$919+3,___fldiv@b+3
  1656   000FC8  C0B1  F02B         	movff	uart_init@baudrate,___fldiv@a
  1657   000FCC  C0B2  F02C         	movff	uart_init@baudrate+1,___fldiv@a+1
  1658   000FD0  C0B3  F02D         	movff	uart_init@baudrate+2,___fldiv@a+2
  1659   000FD4  C0B4  F02E         	movff	uart_init@baudrate+3,___fldiv@a+3
  1660   000FD8  ECE9  F010         	call	___fldiv	;wreg free
  1661   000FDC  C027  F070         	movff	?___fldiv,fabsf@x
  1662   000FE0  C028  F071         	movff	?___fldiv+1,fabsf@x+1
  1663   000FE4  C029  F072         	movff	?___fldiv+2,fabsf@x+2
  1664   000FE8  C02A  F073         	movff	?___fldiv+3,fabsf@x+3
  1665   000FEC  EC99  F018         	call	_fabsf	;wreg free
  1666   000FF0  C070  F098         	movff	?_fabsf,uart_init@e33
  1667   000FF4  C071  F099         	movff	?_fabsf+1,uart_init@e33+1
  1668   000FF8  C072  F09A         	movff	?_fabsf+2,uart_init@e33+2
  1669   000FFC  C073  F09B         	movff	?_fabsf+3,uart_init@e33+3
  1670   001000                     
  1671                           ;./uart.h: 56:         if (e33 < e3) {
  1672   001000  C098  F00E         	movff	uart_init@e33,___flge@ff1
  1673   001004  C099  F00F         	movff	uart_init@e33+1,___flge@ff1+1
  1674   001008  C09A  F010         	movff	uart_init@e33+2,___flge@ff1+2
  1675   00100C  C09B  F011         	movff	uart_init@e33+3,___flge@ff1+3
  1676   001010  C09C  F012         	movff	uart_init@e3,___flge@ff2
  1677   001014  C09D  F013         	movff	uart_init@e3+1,___flge@ff2+1
  1678   001018  C09E  F014         	movff	uart_init@e3+2,___flge@ff2+2
  1679   00101C  C09F  F015         	movff	uart_init@e3+3,___flge@ff2+3
  1680   001020  ECA3  F014         	call	___flge	;wreg free
  1681   001024  B0D8               	btfsc	status,0,c
  1682   001026  EF17  F008         	goto	u4241
  1683   00102A  EF19  F008         	goto	u4240
  1684   00102E                     u4241:
  1685   00102E  EF2E  F008         	goto	l3234
  1686   001032                     u4240:
  1687   001032                     
  1688                           ;./uart.h: 57:             e3 = e33;
  1689   001032  C098  F09C         	movff	uart_init@e33,uart_init@e3
  1690   001036  C099  F09D         	movff	uart_init@e33+1,uart_init@e3+1
  1691   00103A  C09A  F09E         	movff	uart_init@e33+2,uart_init@e3+2
  1692   00103E  C09B  F09F         	movff	uart_init@e33+3,uart_init@e3+3
  1693   001042                     
  1694                           ;./uart.h: 58:             z = z + 1;
  1695   001042  0E01               	movlw	1
  1696   001044  0100               	movlb	0	; () banked
  1697   001046  25A4               	addwf	uart_init@z& (0+255),w,b
  1698   001048  6FA4               	movwf	uart_init@z& (0+255),b
  1699   00104A  0E00               	movlw	0
  1700   00104C  21A5               	addwfc	(uart_init@z+1)& (0+255),w,b
  1701   00104E  6FA5               	movwf	(uart_init@z+1)& (0+255),b
  1702   001050  0E00               	movlw	0
  1703   001052  21A6               	addwfc	(uart_init@z+2)& (0+255),w,b
  1704   001054  6FA6               	movwf	(uart_init@z+2)& (0+255),b
  1705   001056  0E00               	movlw	0
  1706   001058  21A7               	addwfc	(uart_init@z+3)& (0+255),w,b
  1707   00105A  6FA7               	movwf	(uart_init@z+3)& (0+255),b
  1708   00105C                     l3234:
  1709                           
  1710                           ;./uart.h: 61:         min = fminf(e1,fminf(e2,e3));
  1711   00105C  C094  F01C         	movff	uart_init@e2,fminf@x
  1712   001060  C095  F01D         	movff	uart_init@e2+1,fminf@x+1
  1713   001064  C096  F01E         	movff	uart_init@e2+2,fminf@x+2
  1714   001068  C097  F01F         	movff	uart_init@e2+3,fminf@x+3
  1715   00106C  C09C  F020         	movff	uart_init@e3,fminf@y
  1716   001070  C09D  F021         	movff	uart_init@e3+1,fminf@y+1
  1717   001074  C09E  F022         	movff	uart_init@e3+2,fminf@y+2
  1718   001078  C09F  F023         	movff	uart_init@e3+3,fminf@y+3
  1719   00107C  EC90  F013         	call	_fminf	;wreg free
  1720   001080  C01C  F07C         	movff	?_fminf,_uart_init$920
  1721   001084  C01D  F07D         	movff	?_fminf+1,_uart_init$920+1
  1722   001088  C01E  F07E         	movff	?_fminf+2,_uart_init$920+2
  1723   00108C  C01F  F07F         	movff	?_fminf+3,_uart_init$920+3
  1724   001090                     
  1725                           ;./uart.h: 61:         min = fminf(e1,fminf(e2,e3));
  1726   001090  C088  F01C         	movff	uart_init@e1,fminf@x
  1727   001094  C089  F01D         	movff	uart_init@e1+1,fminf@x+1
  1728   001098  C08A  F01E         	movff	uart_init@e1+2,fminf@x+2
  1729   00109C  C08B  F01F         	movff	uart_init@e1+3,fminf@x+3
  1730   0010A0  C07C  F020         	movff	_uart_init$920,fminf@y
  1731   0010A4  C07D  F021         	movff	_uart_init$920+1,fminf@y+1
  1732   0010A8  C07E  F022         	movff	_uart_init$920+2,fminf@y+2
  1733   0010AC  C07F  F023         	movff	_uart_init$920+3,fminf@y+3
  1734   0010B0  EC90  F013         	call	_fminf	;wreg free
  1735   0010B4  C01C  F084         	movff	?_fminf,uart_init@min
  1736   0010B8  C01D  F085         	movff	?_fminf+1,uart_init@min+1
  1737   0010BC  C01E  F086         	movff	?_fminf+2,uart_init@min+2
  1738   0010C0  C01F  F087         	movff	?_fminf+3,uart_init@min+3
  1739                           
  1740                           ;./uart.h: 62:     } else if (y > 0) {
  1741   0010C4  EFAD  F00B         	goto	l3256
  1742   0010C8                     l3238:
  1743                           
  1744                           ; BSR set to: 0
  1745   0010C8  BFA3               	btfsc	(uart_init@y+3)& (0+255),7,b
  1746   0010CA  EF71  F008         	goto	u4251
  1747   0010CE  51A3               	movf	(uart_init@y+3)& (0+255),w,b
  1748   0010D0  11A2               	iorwf	(uart_init@y+2)& (0+255),w,b
  1749   0010D2  11A1               	iorwf	(uart_init@y+1)& (0+255),w,b
  1750   0010D4  E108               	bnz	u4250
  1751   0010D6  05A0               	decf	uart_init@y& (0+255),w,b
  1752   0010D8  A0D8               	btfss	status,0,c
  1753   0010DA  EF71  F008         	goto	u4251
  1754   0010DE  EF73  F008         	goto	u4250
  1755   0010E2                     u4251:
  1756   0010E2  EF94  F00A         	goto	l3250
  1757   0010E6                     u4250:
  1758   0010E6                     
  1759                           ; BSR set to: 0
  1760                           ;./uart.h: 63:         e2 = fabsf((frequency / (16 * (y + 1)) - baudrate) / baudrate);
  1761   0010E6  C0B1  F06C         	movff	uart_init@baudrate,___flsub@a
  1762   0010EA  C0B2  F06D         	movff	uart_init@baudrate+1,___flsub@a+1
  1763   0010EE  C0B3  F06E         	movff	uart_init@baudrate+2,___flsub@a+2
  1764   0010F2  C0B4  F06F         	movff	uart_init@baudrate+3,___flsub@a+3
  1765   0010F6  C0A0  F078         	movff	uart_init@y,??_uart_init
  1766   0010FA  C0A1  F079         	movff	uart_init@y+1,??_uart_init+1
  1767   0010FE  C0A2  F07A         	movff	uart_init@y+2,??_uart_init+2
  1768   001102  C0A3  F07B         	movff	uart_init@y+3,??_uart_init+3
  1769   001106  0E04               	movlw	4
  1770   001108                     u4265:
  1771   001108  90D8               	bcf	status,0,c
  1772   00110A  3778               	rlcf	??_uart_init& (0+255),f,b
  1773   00110C  3779               	rlcf	(??_uart_init+1)& (0+255),f,b
  1774   00110E  377A               	rlcf	(??_uart_init+2)& (0+255),f,b
  1775   001110  377B               	rlcf	(??_uart_init+3)& (0+255),f,b
  1776   001112  2EE8               	decfsz	wreg,f,c
  1777   001114  EF84  F008         	goto	u4265
  1778   001118  0E10               	movlw	16
  1779   00111A  2578               	addwf	??_uart_init& (0+255),w,b
  1780   00111C  6E0E               	movwf	___xxtofl@val^0,c
  1781   00111E  0E00               	movlw	0
  1782   001120  2179               	addwfc	(??_uart_init+1)& (0+255),w,b
  1783   001122  6E0F               	movwf	(___xxtofl@val+1)^0,c
  1784   001124  0E00               	movlw	0
  1785   001126  217A               	addwfc	(??_uart_init+2)& (0+255),w,b
  1786   001128  6E10               	movwf	(___xxtofl@val+2)^0,c
  1787   00112A  0E00               	movlw	0
  1788   00112C  217B               	addwfc	(??_uart_init+3)& (0+255),w,b
  1789   00112E  6E11               	movwf	(___xxtofl@val+3)^0,c
  1790   001130  0E01               	movlw	1
  1791   001132  ECB6  F012         	call	___xxtofl
  1792   001136  C00E  F02B         	movff	?___xxtofl,___fldiv@a
  1793   00113A  C00F  F02C         	movff	?___xxtofl+1,___fldiv@a+1
  1794   00113E  C010  F02D         	movff	?___xxtofl+2,___fldiv@a+2
  1795   001142  C011  F02E         	movff	?___xxtofl+3,___fldiv@a+3
  1796   001146  C0A9  F027         	movff	uart_init@frequency,___fldiv@b
  1797   00114A  C0AA  F028         	movff	uart_init@frequency+1,___fldiv@b+1
  1798   00114E  C0AB  F029         	movff	uart_init@frequency+2,___fldiv@b+2
  1799   001152  C0AC  F02A         	movff	uart_init@frequency+3,___fldiv@b+3
  1800   001156  ECE9  F010         	call	___fldiv	;wreg free
  1801   00115A  C027  F068         	movff	?___fldiv,___flsub@b
  1802   00115E  C028  F069         	movff	?___fldiv+1,___flsub@b+1
  1803   001162  C029  F06A         	movff	?___fldiv+2,___flsub@b+2
  1804   001166  C02A  F06B         	movff	?___fldiv+3,___flsub@b+3
  1805   00116A  EC30  F018         	call	___flsub	;wreg free
  1806   00116E  C068  F0AD         	movff	?___flsub,_uart_init$919
  1807   001172  C069  F0AE         	movff	?___flsub+1,_uart_init$919+1
  1808   001176  C06A  F0AF         	movff	?___flsub+2,_uart_init$919+2
  1809   00117A  C06B  F0B0         	movff	?___flsub+3,_uart_init$919+3
  1810                           
  1811                           ;./uart.h: 63:         e2 = fabsf((frequency / (16 * (y + 1)) - baudrate) / baudrate);
  1812   00117E  C0AD  F027         	movff	_uart_init$919,___fldiv@b
  1813   001182  C0AE  F028         	movff	_uart_init$919+1,___fldiv@b+1
  1814   001186  C0AF  F029         	movff	_uart_init$919+2,___fldiv@b+2
  1815   00118A  C0B0  F02A         	movff	_uart_init$919+3,___fldiv@b+3
  1816   00118E  C0B1  F02B         	movff	uart_init@baudrate,___fldiv@a
  1817   001192  C0B2  F02C         	movff	uart_init@baudrate+1,___fldiv@a+1
  1818   001196  C0B3  F02D         	movff	uart_init@baudrate+2,___fldiv@a+2
  1819   00119A  C0B4  F02E         	movff	uart_init@baudrate+3,___fldiv@a+3
  1820   00119E  ECE9  F010         	call	___fldiv	;wreg free
  1821   0011A2  C027  F070         	movff	?___fldiv,fabsf@x
  1822   0011A6  C028  F071         	movff	?___fldiv+1,fabsf@x+1
  1823   0011AA  C029  F072         	movff	?___fldiv+2,fabsf@x+2
  1824   0011AE  C02A  F073         	movff	?___fldiv+3,fabsf@x+3
  1825   0011B2  EC99  F018         	call	_fabsf	;wreg free
  1826   0011B6  C070  F094         	movff	?_fabsf,uart_init@e2
  1827   0011BA  C071  F095         	movff	?_fabsf+1,uart_init@e2+1
  1828   0011BE  C072  F096         	movff	?_fabsf+2,uart_init@e2+2
  1829   0011C2  C073  F097         	movff	?_fabsf+3,uart_init@e2+3
  1830                           
  1831                           ;./uart.h: 64:         e22 = fabsf((frequency / (16 * (y + 1 + 1)) - baudrate) / baudrat
      +                          e);
  1832   0011C6  C0B1  F06C         	movff	uart_init@baudrate,___flsub@a
  1833   0011CA  C0B2  F06D         	movff	uart_init@baudrate+1,___flsub@a+1
  1834   0011CE  C0B3  F06E         	movff	uart_init@baudrate+2,___flsub@a+2
  1835   0011D2  C0B4  F06F         	movff	uart_init@baudrate+3,___flsub@a+3
  1836   0011D6  C0A0  F078         	movff	uart_init@y,??_uart_init
  1837   0011DA  C0A1  F079         	movff	uart_init@y+1,??_uart_init+1
  1838   0011DE  C0A2  F07A         	movff	uart_init@y+2,??_uart_init+2
  1839   0011E2  C0A3  F07B         	movff	uart_init@y+3,??_uart_init+3
  1840   0011E6  0E04               	movlw	4
  1841   0011E8                     u4275:
  1842   0011E8  90D8               	bcf	status,0,c
  1843   0011EA  0100               	movlb	0	; () banked
  1844   0011EC  3778               	rlcf	??_uart_init& (0+255),f,b
  1845   0011EE  3779               	rlcf	(??_uart_init+1)& (0+255),f,b
  1846   0011F0  377A               	rlcf	(??_uart_init+2)& (0+255),f,b
  1847   0011F2  377B               	rlcf	(??_uart_init+3)& (0+255),f,b
  1848   0011F4  2EE8               	decfsz	wreg,f,c
  1849   0011F6  EFF4  F008         	goto	u4275
  1850   0011FA  0E20               	movlw	32
  1851   0011FC  2578               	addwf	??_uart_init& (0+255),w,b
  1852   0011FE  6E0E               	movwf	___xxtofl@val^0,c
  1853   001200  0E00               	movlw	0
  1854   001202  2179               	addwfc	(??_uart_init+1)& (0+255),w,b
  1855   001204  6E0F               	movwf	(___xxtofl@val+1)^0,c
  1856   001206  0E00               	movlw	0
  1857   001208  217A               	addwfc	(??_uart_init+2)& (0+255),w,b
  1858   00120A  6E10               	movwf	(___xxtofl@val+2)^0,c
  1859   00120C  0E00               	movlw	0
  1860   00120E  217B               	addwfc	(??_uart_init+3)& (0+255),w,b
  1861   001210  6E11               	movwf	(___xxtofl@val+3)^0,c
  1862   001212  0E01               	movlw	1
  1863   001214  ECB6  F012         	call	___xxtofl
  1864   001218  C00E  F02B         	movff	?___xxtofl,___fldiv@a
  1865   00121C  C00F  F02C         	movff	?___xxtofl+1,___fldiv@a+1
  1866   001220  C010  F02D         	movff	?___xxtofl+2,___fldiv@a+2
  1867   001224  C011  F02E         	movff	?___xxtofl+3,___fldiv@a+3
  1868   001228  C0A9  F027         	movff	uart_init@frequency,___fldiv@b
  1869   00122C  C0AA  F028         	movff	uart_init@frequency+1,___fldiv@b+1
  1870   001230  C0AB  F029         	movff	uart_init@frequency+2,___fldiv@b+2
  1871   001234  C0AC  F02A         	movff	uart_init@frequency+3,___fldiv@b+3
  1872   001238  ECE9  F010         	call	___fldiv	;wreg free
  1873   00123C  C027  F068         	movff	?___fldiv,___flsub@b
  1874   001240  C028  F069         	movff	?___fldiv+1,___flsub@b+1
  1875   001244  C029  F06A         	movff	?___fldiv+2,___flsub@b+2
  1876   001248  C02A  F06B         	movff	?___fldiv+3,___flsub@b+3
  1877   00124C  EC30  F018         	call	___flsub	;wreg free
  1878   001250  C068  F0AD         	movff	?___flsub,_uart_init$919
  1879   001254  C069  F0AE         	movff	?___flsub+1,_uart_init$919+1
  1880   001258  C06A  F0AF         	movff	?___flsub+2,_uart_init$919+2
  1881   00125C  C06B  F0B0         	movff	?___flsub+3,_uart_init$919+3
  1882                           
  1883                           ;./uart.h: 64:         e22 = fabsf((frequency / (16 * (y + 1 + 1)) - baudrate) / baudrat
      +                          e);
  1884   001260  C0AD  F027         	movff	_uart_init$919,___fldiv@b
  1885   001264  C0AE  F028         	movff	_uart_init$919+1,___fldiv@b+1
  1886   001268  C0AF  F029         	movff	_uart_init$919+2,___fldiv@b+2
  1887   00126C  C0B0  F02A         	movff	_uart_init$919+3,___fldiv@b+3
  1888   001270  C0B1  F02B         	movff	uart_init@baudrate,___fldiv@a
  1889   001274  C0B2  F02C         	movff	uart_init@baudrate+1,___fldiv@a+1
  1890   001278  C0B3  F02D         	movff	uart_init@baudrate+2,___fldiv@a+2
  1891   00127C  C0B4  F02E         	movff	uart_init@baudrate+3,___fldiv@a+3
  1892   001280  ECE9  F010         	call	___fldiv	;wreg free
  1893   001284  C027  F070         	movff	?___fldiv,fabsf@x
  1894   001288  C028  F071         	movff	?___fldiv+1,fabsf@x+1
  1895   00128C  C029  F072         	movff	?___fldiv+2,fabsf@x+2
  1896   001290  C02A  F073         	movff	?___fldiv+3,fabsf@x+3
  1897   001294  EC99  F018         	call	_fabsf	;wreg free
  1898   001298  C070  F08C         	movff	?_fabsf,uart_init@e22
  1899   00129C  C071  F08D         	movff	?_fabsf+1,uart_init@e22+1
  1900   0012A0  C072  F08E         	movff	?_fabsf+2,uart_init@e22+2
  1901   0012A4  C073  F08F         	movff	?_fabsf+3,uart_init@e22+3
  1902                           
  1903                           ;./uart.h: 65:         if (e22 < e2) e2 = e22;
  1904   0012A8  C08C  F00E         	movff	uart_init@e22,___flge@ff1
  1905   0012AC  C08D  F00F         	movff	uart_init@e22+1,___flge@ff1+1
  1906   0012B0  C08E  F010         	movff	uart_init@e22+2,___flge@ff1+2
  1907   0012B4  C08F  F011         	movff	uart_init@e22+3,___flge@ff1+3
  1908   0012B8  C094  F012         	movff	uart_init@e2,___flge@ff2
  1909   0012BC  C095  F013         	movff	uart_init@e2+1,___flge@ff2+1
  1910   0012C0  C096  F014         	movff	uart_init@e2+2,___flge@ff2+2
  1911   0012C4  C097  F015         	movff	uart_init@e2+3,___flge@ff2+3
  1912   0012C8  ECA3  F014         	call	___flge	;wreg free
  1913   0012CC  B0D8               	btfsc	status,0,c
  1914   0012CE  EF6B  F009         	goto	u4281
  1915   0012D2  EF6D  F009         	goto	u4280
  1916   0012D6                     u4281:
  1917   0012D6  EF75  F009         	goto	l3244
  1918   0012DA                     u4280:
  1919   0012DA  C08C  F094         	movff	uart_init@e22,uart_init@e2
  1920   0012DE  C08D  F095         	movff	uart_init@e22+1,uart_init@e2+1
  1921   0012E2  C08E  F096         	movff	uart_init@e22+2,uart_init@e2+2
  1922   0012E6  C08F  F097         	movff	uart_init@e22+3,uart_init@e2+3
  1923   0012EA                     l3244:
  1924                           
  1925                           ;./uart.h: 67:         e3 = fabsf((frequency / (4 * (z + 1)) - baudrate) / baudrate);
  1926   0012EA  C0B1  F06C         	movff	uart_init@baudrate,___flsub@a
  1927   0012EE  C0B2  F06D         	movff	uart_init@baudrate+1,___flsub@a+1
  1928   0012F2  C0B3  F06E         	movff	uart_init@baudrate+2,___flsub@a+2
  1929   0012F6  C0B4  F06F         	movff	uart_init@baudrate+3,___flsub@a+3
  1930   0012FA  C0A4  F078         	movff	uart_init@z,??_uart_init
  1931   0012FE  C0A5  F079         	movff	uart_init@z+1,??_uart_init+1
  1932   001302  C0A6  F07A         	movff	uart_init@z+2,??_uart_init+2
  1933   001306  C0A7  F07B         	movff	uart_init@z+3,??_uart_init+3
  1934   00130A  0E02               	movlw	2
  1935   00130C                     u4295:
  1936   00130C  90D8               	bcf	status,0,c
  1937   00130E  0100               	movlb	0	; () banked
  1938   001310  3778               	rlcf	??_uart_init& (0+255),f,b
  1939   001312  3779               	rlcf	(??_uart_init+1)& (0+255),f,b
  1940   001314  377A               	rlcf	(??_uart_init+2)& (0+255),f,b
  1941   001316  377B               	rlcf	(??_uart_init+3)& (0+255),f,b
  1942   001318  2EE8               	decfsz	wreg,f,c
  1943   00131A  EF86  F009         	goto	u4295
  1944   00131E  0E04               	movlw	4
  1945   001320  2578               	addwf	??_uart_init& (0+255),w,b
  1946   001322  6E0E               	movwf	___xxtofl@val^0,c
  1947   001324  0E00               	movlw	0
  1948   001326  2179               	addwfc	(??_uart_init+1)& (0+255),w,b
  1949   001328  6E0F               	movwf	(___xxtofl@val+1)^0,c
  1950   00132A  0E00               	movlw	0
  1951   00132C  217A               	addwfc	(??_uart_init+2)& (0+255),w,b
  1952   00132E  6E10               	movwf	(___xxtofl@val+2)^0,c
  1953   001330  0E00               	movlw	0
  1954   001332  217B               	addwfc	(??_uart_init+3)& (0+255),w,b
  1955   001334  6E11               	movwf	(___xxtofl@val+3)^0,c
  1956   001336  0E01               	movlw	1
  1957   001338  ECB6  F012         	call	___xxtofl
  1958   00133C  C00E  F02B         	movff	?___xxtofl,___fldiv@a
  1959   001340  C00F  F02C         	movff	?___xxtofl+1,___fldiv@a+1
  1960   001344  C010  F02D         	movff	?___xxtofl+2,___fldiv@a+2
  1961   001348  C011  F02E         	movff	?___xxtofl+3,___fldiv@a+3
  1962   00134C  C0A9  F027         	movff	uart_init@frequency,___fldiv@b
  1963   001350  C0AA  F028         	movff	uart_init@frequency+1,___fldiv@b+1
  1964   001354  C0AB  F029         	movff	uart_init@frequency+2,___fldiv@b+2
  1965   001358  C0AC  F02A         	movff	uart_init@frequency+3,___fldiv@b+3
  1966   00135C  ECE9  F010         	call	___fldiv	;wreg free
  1967   001360  C027  F068         	movff	?___fldiv,___flsub@b
  1968   001364  C028  F069         	movff	?___fldiv+1,___flsub@b+1
  1969   001368  C029  F06A         	movff	?___fldiv+2,___flsub@b+2
  1970   00136C  C02A  F06B         	movff	?___fldiv+3,___flsub@b+3
  1971   001370  EC30  F018         	call	___flsub	;wreg free
  1972   001374  C068  F0AD         	movff	?___flsub,_uart_init$919
  1973   001378  C069  F0AE         	movff	?___flsub+1,_uart_init$919+1
  1974   00137C  C06A  F0AF         	movff	?___flsub+2,_uart_init$919+2
  1975   001380  C06B  F0B0         	movff	?___flsub+3,_uart_init$919+3
  1976                           
  1977                           ;./uart.h: 67:         e3 = fabsf((frequency / (4 * (z + 1)) - baudrate) / baudrate);
  1978   001384  C0AD  F027         	movff	_uart_init$919,___fldiv@b
  1979   001388  C0AE  F028         	movff	_uart_init$919+1,___fldiv@b+1
  1980   00138C  C0AF  F029         	movff	_uart_init$919+2,___fldiv@b+2
  1981   001390  C0B0  F02A         	movff	_uart_init$919+3,___fldiv@b+3
  1982   001394  C0B1  F02B         	movff	uart_init@baudrate,___fldiv@a
  1983   001398  C0B2  F02C         	movff	uart_init@baudrate+1,___fldiv@a+1
  1984   00139C  C0B3  F02D         	movff	uart_init@baudrate+2,___fldiv@a+2
  1985   0013A0  C0B4  F02E         	movff	uart_init@baudrate+3,___fldiv@a+3
  1986   0013A4  ECE9  F010         	call	___fldiv	;wreg free
  1987   0013A8  C027  F070         	movff	?___fldiv,fabsf@x
  1988   0013AC  C028  F071         	movff	?___fldiv+1,fabsf@x+1
  1989   0013B0  C029  F072         	movff	?___fldiv+2,fabsf@x+2
  1990   0013B4  C02A  F073         	movff	?___fldiv+3,fabsf@x+3
  1991   0013B8  EC99  F018         	call	_fabsf	;wreg free
  1992   0013BC  C070  F09C         	movff	?_fabsf,uart_init@e3
  1993   0013C0  C071  F09D         	movff	?_fabsf+1,uart_init@e3+1
  1994   0013C4  C072  F09E         	movff	?_fabsf+2,uart_init@e3+2
  1995   0013C8  C073  F09F         	movff	?_fabsf+3,uart_init@e3+3
  1996                           
  1997                           ;./uart.h: 68:         e33 = fabsf((frequency / (4 * (z + 1 + 1)) - baudrate) / baudrate
      +                          );
  1998   0013CC  C0B1  F06C         	movff	uart_init@baudrate,___flsub@a
  1999   0013D0  C0B2  F06D         	movff	uart_init@baudrate+1,___flsub@a+1
  2000   0013D4  C0B3  F06E         	movff	uart_init@baudrate+2,___flsub@a+2
  2001   0013D8  C0B4  F06F         	movff	uart_init@baudrate+3,___flsub@a+3
  2002   0013DC  C0A4  F078         	movff	uart_init@z,??_uart_init
  2003   0013E0  C0A5  F079         	movff	uart_init@z+1,??_uart_init+1
  2004   0013E4  C0A6  F07A         	movff	uart_init@z+2,??_uart_init+2
  2005   0013E8  C0A7  F07B         	movff	uart_init@z+3,??_uart_init+3
  2006   0013EC  0E02               	movlw	2
  2007   0013EE                     u4305:
  2008   0013EE  90D8               	bcf	status,0,c
  2009   0013F0  0100               	movlb	0	; () banked
  2010   0013F2  3778               	rlcf	??_uart_init& (0+255),f,b
  2011   0013F4  3779               	rlcf	(??_uart_init+1)& (0+255),f,b
  2012   0013F6  377A               	rlcf	(??_uart_init+2)& (0+255),f,b
  2013   0013F8  377B               	rlcf	(??_uart_init+3)& (0+255),f,b
  2014   0013FA  2EE8               	decfsz	wreg,f,c
  2015   0013FC  EFF7  F009         	goto	u4305
  2016   001400  0E08               	movlw	8
  2017   001402  2578               	addwf	??_uart_init& (0+255),w,b
  2018   001404  6E0E               	movwf	___xxtofl@val^0,c
  2019   001406  0E00               	movlw	0
  2020   001408  2179               	addwfc	(??_uart_init+1)& (0+255),w,b
  2021   00140A  6E0F               	movwf	(___xxtofl@val+1)^0,c
  2022   00140C  0E00               	movlw	0
  2023   00140E  217A               	addwfc	(??_uart_init+2)& (0+255),w,b
  2024   001410  6E10               	movwf	(___xxtofl@val+2)^0,c
  2025   001412  0E00               	movlw	0
  2026   001414  217B               	addwfc	(??_uart_init+3)& (0+255),w,b
  2027   001416  6E11               	movwf	(___xxtofl@val+3)^0,c
  2028   001418  0E01               	movlw	1
  2029   00141A  ECB6  F012         	call	___xxtofl
  2030   00141E  C00E  F02B         	movff	?___xxtofl,___fldiv@a
  2031   001422  C00F  F02C         	movff	?___xxtofl+1,___fldiv@a+1
  2032   001426  C010  F02D         	movff	?___xxtofl+2,___fldiv@a+2
  2033   00142A  C011  F02E         	movff	?___xxtofl+3,___fldiv@a+3
  2034   00142E  C0A9  F027         	movff	uart_init@frequency,___fldiv@b
  2035   001432  C0AA  F028         	movff	uart_init@frequency+1,___fldiv@b+1
  2036   001436  C0AB  F029         	movff	uart_init@frequency+2,___fldiv@b+2
  2037   00143A  C0AC  F02A         	movff	uart_init@frequency+3,___fldiv@b+3
  2038   00143E  ECE9  F010         	call	___fldiv	;wreg free
  2039   001442  C027  F068         	movff	?___fldiv,___flsub@b
  2040   001446  C028  F069         	movff	?___fldiv+1,___flsub@b+1
  2041   00144A  C029  F06A         	movff	?___fldiv+2,___flsub@b+2
  2042   00144E  C02A  F06B         	movff	?___fldiv+3,___flsub@b+3
  2043   001452  EC30  F018         	call	___flsub	;wreg free
  2044   001456  C068  F0AD         	movff	?___flsub,_uart_init$919
  2045   00145A  C069  F0AE         	movff	?___flsub+1,_uart_init$919+1
  2046   00145E  C06A  F0AF         	movff	?___flsub+2,_uart_init$919+2
  2047   001462  C06B  F0B0         	movff	?___flsub+3,_uart_init$919+3
  2048                           
  2049                           ;./uart.h: 68:         e33 = fabsf((frequency / (4 * (z + 1 + 1)) - baudrate) / baudrate
      +                          );
  2050   001466  C0AD  F027         	movff	_uart_init$919,___fldiv@b
  2051   00146A  C0AE  F028         	movff	_uart_init$919+1,___fldiv@b+1
  2052   00146E  C0AF  F029         	movff	_uart_init$919+2,___fldiv@b+2
  2053   001472  C0B0  F02A         	movff	_uart_init$919+3,___fldiv@b+3
  2054   001476  C0B1  F02B         	movff	uart_init@baudrate,___fldiv@a
  2055   00147A  C0B2  F02C         	movff	uart_init@baudrate+1,___fldiv@a+1
  2056   00147E  C0B3  F02D         	movff	uart_init@baudrate+2,___fldiv@a+2
  2057   001482  C0B4  F02E         	movff	uart_init@baudrate+3,___fldiv@a+3
  2058   001486  ECE9  F010         	call	___fldiv	;wreg free
  2059   00148A  C027  F070         	movff	?___fldiv,fabsf@x
  2060   00148E  C028  F071         	movff	?___fldiv+1,fabsf@x+1
  2061   001492  C029  F072         	movff	?___fldiv+2,fabsf@x+2
  2062   001496  C02A  F073         	movff	?___fldiv+3,fabsf@x+3
  2063   00149A  EC99  F018         	call	_fabsf	;wreg free
  2064   00149E  C070  F098         	movff	?_fabsf,uart_init@e33
  2065   0014A2  C071  F099         	movff	?_fabsf+1,uart_init@e33+1
  2066   0014A6  C072  F09A         	movff	?_fabsf+2,uart_init@e33+2
  2067   0014AA  C073  F09B         	movff	?_fabsf+3,uart_init@e33+3
  2068                           
  2069                           ;./uart.h: 69:         if (e33 < e3) e3 = e33;
  2070   0014AE  C098  F00E         	movff	uart_init@e33,___flge@ff1
  2071   0014B2  C099  F00F         	movff	uart_init@e33+1,___flge@ff1+1
  2072   0014B6  C09A  F010         	movff	uart_init@e33+2,___flge@ff1+2
  2073   0014BA  C09B  F011         	movff	uart_init@e33+3,___flge@ff1+3
  2074   0014BE  C09C  F012         	movff	uart_init@e3,___flge@ff2
  2075   0014C2  C09D  F013         	movff	uart_init@e3+1,___flge@ff2+1
  2076   0014C6  C09E  F014         	movff	uart_init@e3+2,___flge@ff2+2
  2077   0014CA  C09F  F015         	movff	uart_init@e3+3,___flge@ff2+3
  2078   0014CE  ECA3  F014         	call	___flge	;wreg free
  2079   0014D2  B0D8               	btfsc	status,0,c
  2080   0014D4  EF6E  F00A         	goto	u4311
  2081   0014D8  EF70  F00A         	goto	u4310
  2082   0014DC                     u4311:
  2083   0014DC  EF78  F00A         	goto	l3248
  2084   0014E0                     u4310:
  2085   0014E0  C098  F09C         	movff	uart_init@e33,uart_init@e3
  2086   0014E4  C099  F09D         	movff	uart_init@e33+1,uart_init@e3+1
  2087   0014E8  C09A  F09E         	movff	uart_init@e33+2,uart_init@e3+2
  2088   0014EC  C09B  F09F         	movff	uart_init@e33+3,uart_init@e3+3
  2089   0014F0                     l3248:
  2090                           
  2091                           ;./uart.h: 71:         min = fminf(e2,e3);
  2092   0014F0  C094  F01C         	movff	uart_init@e2,fminf@x
  2093   0014F4  C095  F01D         	movff	uart_init@e2+1,fminf@x+1
  2094   0014F8  C096  F01E         	movff	uart_init@e2+2,fminf@x+2
  2095   0014FC  C097  F01F         	movff	uart_init@e2+3,fminf@x+3
  2096   001500  C09C  F020         	movff	uart_init@e3,fminf@y
  2097   001504  C09D  F021         	movff	uart_init@e3+1,fminf@y+1
  2098   001508  C09E  F022         	movff	uart_init@e3+2,fminf@y+2
  2099   00150C  C09F  F023         	movff	uart_init@e3+3,fminf@y+3
  2100   001510  EC90  F013         	call	_fminf	;wreg free
  2101   001514  C01C  F084         	movff	?_fminf,uart_init@min
  2102   001518  C01D  F085         	movff	?_fminf+1,uart_init@min+1
  2103   00151C  C01E  F086         	movff	?_fminf+2,uart_init@min+2
  2104   001520  C01F  F087         	movff	?_fminf+3,uart_init@min+3
  2105                           
  2106                           ;./uart.h: 72:     } else if (z > 0) {
  2107   001524  EFAD  F00B         	goto	l3256
  2108   001528                     l3250:
  2109                           
  2110                           ; BSR set to: 0
  2111   001528  BFA7               	btfsc	(uart_init@z+3)& (0+255),7,b
  2112   00152A  EFA1  F00A         	goto	u4321
  2113   00152E  51A7               	movf	(uart_init@z+3)& (0+255),w,b
  2114   001530  11A6               	iorwf	(uart_init@z+2)& (0+255),w,b
  2115   001532  11A5               	iorwf	(uart_init@z+1)& (0+255),w,b
  2116   001534  E108               	bnz	u4320
  2117   001536  05A4               	decf	uart_init@z& (0+255),w,b
  2118   001538  A0D8               	btfss	status,0,c
  2119   00153A  EFA1  F00A         	goto	u4321
  2120   00153E  EFA3  F00A         	goto	u4320
  2121   001542                     u4321:
  2122   001542  EF72  F00C         	goto	l127
  2123   001546                     u4320:
  2124   001546                     
  2125                           ; BSR set to: 0
  2126                           ;./uart.h: 73:         e3 = fabsf((frequency / (4 * (z + 1)) - baudrate) / baudrate);
  2127   001546  C0B1  F06C         	movff	uart_init@baudrate,___flsub@a
  2128   00154A  C0B2  F06D         	movff	uart_init@baudrate+1,___flsub@a+1
  2129   00154E  C0B3  F06E         	movff	uart_init@baudrate+2,___flsub@a+2
  2130   001552  C0B4  F06F         	movff	uart_init@baudrate+3,___flsub@a+3
  2131   001556  C0A4  F078         	movff	uart_init@z,??_uart_init
  2132   00155A  C0A5  F079         	movff	uart_init@z+1,??_uart_init+1
  2133   00155E  C0A6  F07A         	movff	uart_init@z+2,??_uart_init+2
  2134   001562  C0A7  F07B         	movff	uart_init@z+3,??_uart_init+3
  2135   001566  0E02               	movlw	2
  2136   001568                     u4335:
  2137   001568  90D8               	bcf	status,0,c
  2138   00156A  3778               	rlcf	??_uart_init& (0+255),f,b
  2139   00156C  3779               	rlcf	(??_uart_init+1)& (0+255),f,b
  2140   00156E  377A               	rlcf	(??_uart_init+2)& (0+255),f,b
  2141   001570  377B               	rlcf	(??_uart_init+3)& (0+255),f,b
  2142   001572  2EE8               	decfsz	wreg,f,c
  2143   001574  EFB4  F00A         	goto	u4335
  2144   001578  0E04               	movlw	4
  2145   00157A  2578               	addwf	??_uart_init& (0+255),w,b
  2146   00157C  6E0E               	movwf	___xxtofl@val^0,c
  2147   00157E  0E00               	movlw	0
  2148   001580  2179               	addwfc	(??_uart_init+1)& (0+255),w,b
  2149   001582  6E0F               	movwf	(___xxtofl@val+1)^0,c
  2150   001584  0E00               	movlw	0
  2151   001586  217A               	addwfc	(??_uart_init+2)& (0+255),w,b
  2152   001588  6E10               	movwf	(___xxtofl@val+2)^0,c
  2153   00158A  0E00               	movlw	0
  2154   00158C  217B               	addwfc	(??_uart_init+3)& (0+255),w,b
  2155   00158E  6E11               	movwf	(___xxtofl@val+3)^0,c
  2156   001590  0E01               	movlw	1
  2157   001592  ECB6  F012         	call	___xxtofl
  2158   001596  C00E  F02B         	movff	?___xxtofl,___fldiv@a
  2159   00159A  C00F  F02C         	movff	?___xxtofl+1,___fldiv@a+1
  2160   00159E  C010  F02D         	movff	?___xxtofl+2,___fldiv@a+2
  2161   0015A2  C011  F02E         	movff	?___xxtofl+3,___fldiv@a+3
  2162   0015A6  C0A9  F027         	movff	uart_init@frequency,___fldiv@b
  2163   0015AA  C0AA  F028         	movff	uart_init@frequency+1,___fldiv@b+1
  2164   0015AE  C0AB  F029         	movff	uart_init@frequency+2,___fldiv@b+2
  2165   0015B2  C0AC  F02A         	movff	uart_init@frequency+3,___fldiv@b+3
  2166   0015B6  ECE9  F010         	call	___fldiv	;wreg free
  2167   0015BA  C027  F068         	movff	?___fldiv,___flsub@b
  2168   0015BE  C028  F069         	movff	?___fldiv+1,___flsub@b+1
  2169   0015C2  C029  F06A         	movff	?___fldiv+2,___flsub@b+2
  2170   0015C6  C02A  F06B         	movff	?___fldiv+3,___flsub@b+3
  2171   0015CA  EC30  F018         	call	___flsub	;wreg free
  2172   0015CE  C068  F0AD         	movff	?___flsub,_uart_init$919
  2173   0015D2  C069  F0AE         	movff	?___flsub+1,_uart_init$919+1
  2174   0015D6  C06A  F0AF         	movff	?___flsub+2,_uart_init$919+2
  2175   0015DA  C06B  F0B0         	movff	?___flsub+3,_uart_init$919+3
  2176                           
  2177                           ;./uart.h: 73:         e3 = fabsf((frequency / (4 * (z + 1)) - baudrate) / baudrate);
  2178   0015DE  C0AD  F027         	movff	_uart_init$919,___fldiv@b
  2179   0015E2  C0AE  F028         	movff	_uart_init$919+1,___fldiv@b+1
  2180   0015E6  C0AF  F029         	movff	_uart_init$919+2,___fldiv@b+2
  2181   0015EA  C0B0  F02A         	movff	_uart_init$919+3,___fldiv@b+3
  2182   0015EE  C0B1  F02B         	movff	uart_init@baudrate,___fldiv@a
  2183   0015F2  C0B2  F02C         	movff	uart_init@baudrate+1,___fldiv@a+1
  2184   0015F6  C0B3  F02D         	movff	uart_init@baudrate+2,___fldiv@a+2
  2185   0015FA  C0B4  F02E         	movff	uart_init@baudrate+3,___fldiv@a+3
  2186   0015FE  ECE9  F010         	call	___fldiv	;wreg free
  2187   001602  C027  F070         	movff	?___fldiv,fabsf@x
  2188   001606  C028  F071         	movff	?___fldiv+1,fabsf@x+1
  2189   00160A  C029  F072         	movff	?___fldiv+2,fabsf@x+2
  2190   00160E  C02A  F073         	movff	?___fldiv+3,fabsf@x+3
  2191   001612  EC99  F018         	call	_fabsf	;wreg free
  2192   001616  C070  F09C         	movff	?_fabsf,uart_init@e3
  2193   00161A  C071  F09D         	movff	?_fabsf+1,uart_init@e3+1
  2194   00161E  C072  F09E         	movff	?_fabsf+2,uart_init@e3+2
  2195   001622  C073  F09F         	movff	?_fabsf+3,uart_init@e3+3
  2196                           
  2197                           ;./uart.h: 74:         e33 = fabsf((frequency / (4 * (z + 1 + 1)) - baudrate) / baudrate
      +                          );
  2198   001626  C0B1  F06C         	movff	uart_init@baudrate,___flsub@a
  2199   00162A  C0B2  F06D         	movff	uart_init@baudrate+1,___flsub@a+1
  2200   00162E  C0B3  F06E         	movff	uart_init@baudrate+2,___flsub@a+2
  2201   001632  C0B4  F06F         	movff	uart_init@baudrate+3,___flsub@a+3
  2202   001636  C0A4  F078         	movff	uart_init@z,??_uart_init
  2203   00163A  C0A5  F079         	movff	uart_init@z+1,??_uart_init+1
  2204   00163E  C0A6  F07A         	movff	uart_init@z+2,??_uart_init+2
  2205   001642  C0A7  F07B         	movff	uart_init@z+3,??_uart_init+3
  2206   001646  0E02               	movlw	2
  2207   001648                     u4345:
  2208   001648  90D8               	bcf	status,0,c
  2209   00164A  0100               	movlb	0	; () banked
  2210   00164C  3778               	rlcf	??_uart_init& (0+255),f,b
  2211   00164E  3779               	rlcf	(??_uart_init+1)& (0+255),f,b
  2212   001650  377A               	rlcf	(??_uart_init+2)& (0+255),f,b
  2213   001652  377B               	rlcf	(??_uart_init+3)& (0+255),f,b
  2214   001654  2EE8               	decfsz	wreg,f,c
  2215   001656  EF24  F00B         	goto	u4345
  2216   00165A  0E08               	movlw	8
  2217   00165C  2578               	addwf	??_uart_init& (0+255),w,b
  2218   00165E  6E0E               	movwf	___xxtofl@val^0,c
  2219   001660  0E00               	movlw	0
  2220   001662  2179               	addwfc	(??_uart_init+1)& (0+255),w,b
  2221   001664  6E0F               	movwf	(___xxtofl@val+1)^0,c
  2222   001666  0E00               	movlw	0
  2223   001668  217A               	addwfc	(??_uart_init+2)& (0+255),w,b
  2224   00166A  6E10               	movwf	(___xxtofl@val+2)^0,c
  2225   00166C  0E00               	movlw	0
  2226   00166E  217B               	addwfc	(??_uart_init+3)& (0+255),w,b
  2227   001670  6E11               	movwf	(___xxtofl@val+3)^0,c
  2228   001672  0E01               	movlw	1
  2229   001674  ECB6  F012         	call	___xxtofl
  2230   001678  C00E  F02B         	movff	?___xxtofl,___fldiv@a
  2231   00167C  C00F  F02C         	movff	?___xxtofl+1,___fldiv@a+1
  2232   001680  C010  F02D         	movff	?___xxtofl+2,___fldiv@a+2
  2233   001684  C011  F02E         	movff	?___xxtofl+3,___fldiv@a+3
  2234   001688  C0A9  F027         	movff	uart_init@frequency,___fldiv@b
  2235   00168C  C0AA  F028         	movff	uart_init@frequency+1,___fldiv@b+1
  2236   001690  C0AB  F029         	movff	uart_init@frequency+2,___fldiv@b+2
  2237   001694  C0AC  F02A         	movff	uart_init@frequency+3,___fldiv@b+3
  2238   001698  ECE9  F010         	call	___fldiv	;wreg free
  2239   00169C  C027  F068         	movff	?___fldiv,___flsub@b
  2240   0016A0  C028  F069         	movff	?___fldiv+1,___flsub@b+1
  2241   0016A4  C029  F06A         	movff	?___fldiv+2,___flsub@b+2
  2242   0016A8  C02A  F06B         	movff	?___fldiv+3,___flsub@b+3
  2243   0016AC  EC30  F018         	call	___flsub	;wreg free
  2244   0016B0  C068  F0AD         	movff	?___flsub,_uart_init$919
  2245   0016B4  C069  F0AE         	movff	?___flsub+1,_uart_init$919+1
  2246   0016B8  C06A  F0AF         	movff	?___flsub+2,_uart_init$919+2
  2247   0016BC  C06B  F0B0         	movff	?___flsub+3,_uart_init$919+3
  2248                           
  2249                           ;./uart.h: 74:         e33 = fabsf((frequency / (4 * (z + 1 + 1)) - baudrate) / baudrate
      +                          );
  2250   0016C0  C0AD  F027         	movff	_uart_init$919,___fldiv@b
  2251   0016C4  C0AE  F028         	movff	_uart_init$919+1,___fldiv@b+1
  2252   0016C8  C0AF  F029         	movff	_uart_init$919+2,___fldiv@b+2
  2253   0016CC  C0B0  F02A         	movff	_uart_init$919+3,___fldiv@b+3
  2254   0016D0  C0B1  F02B         	movff	uart_init@baudrate,___fldiv@a
  2255   0016D4  C0B2  F02C         	movff	uart_init@baudrate+1,___fldiv@a+1
  2256   0016D8  C0B3  F02D         	movff	uart_init@baudrate+2,___fldiv@a+2
  2257   0016DC  C0B4  F02E         	movff	uart_init@baudrate+3,___fldiv@a+3
  2258   0016E0  ECE9  F010         	call	___fldiv	;wreg free
  2259   0016E4  C027  F070         	movff	?___fldiv,fabsf@x
  2260   0016E8  C028  F071         	movff	?___fldiv+1,fabsf@x+1
  2261   0016EC  C029  F072         	movff	?___fldiv+2,fabsf@x+2
  2262   0016F0  C02A  F073         	movff	?___fldiv+3,fabsf@x+3
  2263   0016F4  EC99  F018         	call	_fabsf	;wreg free
  2264   0016F8  C070  F098         	movff	?_fabsf,uart_init@e33
  2265   0016FC  C071  F099         	movff	?_fabsf+1,uart_init@e33+1
  2266   001700  C072  F09A         	movff	?_fabsf+2,uart_init@e33+2
  2267   001704  C073  F09B         	movff	?_fabsf+3,uart_init@e33+3
  2268                           
  2269                           ;./uart.h: 75:         if (e33 < e3) e3 = e33;
  2270   001708  C098  F00E         	movff	uart_init@e33,___flge@ff1
  2271   00170C  C099  F00F         	movff	uart_init@e33+1,___flge@ff1+1
  2272   001710  C09A  F010         	movff	uart_init@e33+2,___flge@ff1+2
  2273   001714  C09B  F011         	movff	uart_init@e33+3,___flge@ff1+3
  2274   001718  C09C  F012         	movff	uart_init@e3,___flge@ff2
  2275   00171C  C09D  F013         	movff	uart_init@e3+1,___flge@ff2+1
  2276   001720  C09E  F014         	movff	uart_init@e3+2,___flge@ff2+2
  2277   001724  C09F  F015         	movff	uart_init@e3+3,___flge@ff2+3
  2278   001728  ECA3  F014         	call	___flge	;wreg free
  2279   00172C  B0D8               	btfsc	status,0,c
  2280   00172E  EF9B  F00B         	goto	u4351
  2281   001732  EF9D  F00B         	goto	u4350
  2282   001736                     u4351:
  2283   001736  EFA5  F00B         	goto	l125
  2284   00173A                     u4350:
  2285   00173A  C098  F09C         	movff	uart_init@e33,uart_init@e3
  2286   00173E  C099  F09D         	movff	uart_init@e33+1,uart_init@e3+1
  2287   001742  C09A  F09E         	movff	uart_init@e33+2,uart_init@e3+2
  2288   001746  C09B  F09F         	movff	uart_init@e33+3,uart_init@e3+3
  2289   00174A                     l125:
  2290                           
  2291                           ;./uart.h: 76:         min = e3;
  2292   00174A  C09C  F084         	movff	uart_init@e3,uart_init@min
  2293   00174E  C09D  F085         	movff	uart_init@e3+1,uart_init@min+1
  2294   001752  C09E  F086         	movff	uart_init@e3+2,uart_init@min+2
  2295   001756  C09F  F087         	movff	uart_init@e3+3,uart_init@min+3
  2296   00175A                     l3256:
  2297                           
  2298                           ;./uart.h: 81:     if (min == e1) {
  2299   00175A  C084  F00E         	movff	uart_init@min,___fleq@ff1
  2300   00175E  C085  F00F         	movff	uart_init@min+1,___fleq@ff1+1
  2301   001762  C086  F010         	movff	uart_init@min+2,___fleq@ff1+2
  2302   001766  C087  F011         	movff	uart_init@min+3,___fleq@ff1+3
  2303   00176A  C088  F012         	movff	uart_init@e1,___fleq@ff2
  2304   00176E  C089  F013         	movff	uart_init@e1+1,___fleq@ff2+1
  2305   001772  C08A  F014         	movff	uart_init@e1+2,___fleq@ff2+2
  2306   001776  C08B  F015         	movff	uart_init@e1+3,___fleq@ff2+3
  2307   00177A  ECA4  F015         	call	___fleq	;wreg free
  2308   00177E  A0D8               	btfss	status,0,c
  2309   001780  EFC4  F00B         	goto	u4361
  2310   001784  EFC6  F00B         	goto	u4360
  2311   001788                     u4361:
  2312   001788  EFCC  F00B         	goto	l3260
  2313   00178C                     u4360:
  2314   00178C                     
  2315                           ;./uart.h: 82:         BRGH = 0;
  2316   00178C  94AC               	bcf	4012,2,c	;volatile
  2317                           
  2318                           ;./uart.h: 83:         BRG16 = 0;
  2319   00178E  96B8               	bcf	4024,3,c	;volatile
  2320                           
  2321                           ;./uart.h: 84:         SPBRG = x;
  2322   001790  C090  FFAF         	movff	uart_init@x,4015	;volatile
  2323                           
  2324                           ;./uart.h: 85:     }
  2325   001794  EFF3  F00B         	goto	l129
  2326   001798                     l3260:
  2327   001798  C084  F00E         	movff	uart_init@min,___fleq@ff1
  2328   00179C  C085  F00F         	movff	uart_init@min+1,___fleq@ff1+1
  2329   0017A0  C086  F010         	movff	uart_init@min+2,___fleq@ff1+2
  2330   0017A4  C087  F011         	movff	uart_init@min+3,___fleq@ff1+3
  2331   0017A8  C094  F012         	movff	uart_init@e2,___fleq@ff2
  2332   0017AC  C095  F013         	movff	uart_init@e2+1,___fleq@ff2+1
  2333   0017B0  C096  F014         	movff	uart_init@e2+2,___fleq@ff2+2
  2334   0017B4  C097  F015         	movff	uart_init@e2+3,___fleq@ff2+3
  2335   0017B8  ECA4  F015         	call	___fleq	;wreg free
  2336   0017BC  A0D8               	btfss	status,0,c
  2337   0017BE  EFE3  F00B         	goto	u4371
  2338   0017C2  EFE5  F00B         	goto	u4370
  2339   0017C6                     u4371:
  2340   0017C6  EFED  F00B         	goto	l130
  2341   0017CA                     u4370:
  2342   0017CA                     
  2343                           ;./uart.h: 87:         BRGH = 1;
  2344   0017CA  84AC               	bsf	4012,2,c	;volatile
  2345                           
  2346                           ;./uart.h: 88:         BRG16 = 0;
  2347   0017CC  96B8               	bcf	4024,3,c	;volatile
  2348                           
  2349                           ;./uart.h: 89:         SPBRG = y;
  2350   0017CE  C0A0  FFAF         	movff	uart_init@y,4015	;volatile
  2351                           
  2352                           ;./uart.h: 90:         SPBRGH = y >> 8;
  2353   0017D2  C0A1  FFB0         	movff	uart_init@y+1,4016	;volatile
  2354                           
  2355                           ;./uart.h: 91:     }
  2356   0017D6  EFF3  F00B         	goto	l129
  2357   0017DA                     l130:
  2358                           
  2359                           ;./uart.h: 93:         BRGH = 1;
  2360   0017DA  84AC               	bsf	4012,2,c	;volatile
  2361                           
  2362                           ;./uart.h: 94:         BRG16 = 1;
  2363   0017DC  86B8               	bsf	4024,3,c	;volatile
  2364                           
  2365                           ;./uart.h: 95:         SPBRG = z;
  2366   0017DE  C0A4  FFAF         	movff	uart_init@z,4015	;volatile
  2367                           
  2368                           ;./uart.h: 96:         SPBRGH = z >> 8;
  2369   0017E2  C0A5  FFB0         	movff	uart_init@z+1,4016	;volatile
  2370   0017E6                     l129:
  2371                           
  2372                           ;./uart.h: 104:     TRISCbits.TRISC6 = 1;
  2373   0017E6  8C94               	bsf	148,6,c	;volatile
  2374                           
  2375                           ;./uart.h: 105:     TRISCbits.TRISC7 = 1;
  2376   0017E8  8E94               	bsf	148,7,c	;volatile
  2377                           
  2378                           ;./uart.h: 108:     if ((config & 0x01) == 0x01) SYNC = 0;
  2379   0017EA  0100               	movlb	0	; () banked
  2380   0017EC  A1A8               	btfss	uart_init@config& (0+255),0,b
  2381   0017EE  EFFB  F00B         	goto	u4381
  2382   0017F2  EFFD  F00B         	goto	u4380
  2383   0017F6                     u4381:
  2384   0017F6  EF00  F00C         	goto	l132
  2385   0017FA                     u4380:
  2386   0017FA                     
  2387                           ; BSR set to: 0
  2388   0017FA  98AC               	bcf	4012,4,c	;volatile
  2389   0017FC  EF01  F00C         	goto	l133
  2390   001800                     l132:
  2391                           
  2392                           ; BSR set to: 0
  2393                           ;./uart.h: 110:         SYNC = 1;
  2394   001800  88AC               	bsf	4012,4,c	;volatile
  2395   001802                     l133:
  2396                           
  2397                           ; BSR set to: 0
  2398                           ;./uart.h: 113:     if ((config & 0x40) == 0x40) {
  2399   001802  ADA8               	btfss	uart_init@config& (0+255),6,b
  2400   001804  EF06  F00C         	goto	u4391
  2401   001808  EF08  F00C         	goto	u4390
  2402   00180C                     u4391:
  2403   00180C  EF27  F00C         	goto	l134
  2404   001810                     u4390:
  2405   001810                     
  2406                           ; BSR set to: 0
  2407                           ;./uart.h: 115:         if ((config & 0x02) == 0x02) {
  2408   001810  A3A8               	btfss	uart_init@config& (0+255),1,b
  2409   001812  EF0D  F00C         	goto	u4401
  2410   001816  EF0F  F00C         	goto	u4400
  2411   00181A                     u4401:
  2412   00181A  EF11  F00C         	goto	l135
  2413   00181E                     u4400:
  2414   00181E                     
  2415                           ; BSR set to: 0
  2416                           ;./uart.h: 116:             TXCKP = 1;
  2417   00181E  88B8               	bsf	4024,4,c	;volatile
  2418                           
  2419                           ;./uart.h: 117:             RXDTP = 1;
  2420   001820  8AB8               	bsf	4024,5,c	;volatile
  2421   001822                     l135:
  2422                           
  2423                           ; BSR set to: 0
  2424                           ;./uart.h: 121:         if ((config & 0x04) == 0x04) {
  2425   001822  A5A8               	btfss	uart_init@config& (0+255),2,b
  2426   001824  EF16  F00C         	goto	u4411
  2427   001828  EF18  F00C         	goto	u4410
  2428   00182C                     u4411:
  2429   00182C  EF1A  F00C         	goto	l136
  2430   001830                     u4410:
  2431   001830                     
  2432                           ; BSR set to: 0
  2433                           ;./uart.h: 122:             TXIE = 1;
  2434   001830  889D               	bsf	3997,4,c	;volatile
  2435                           
  2436                           ;./uart.h: 123:             RCIE = 1;
  2437   001832  8A9D               	bsf	3997,5,c	;volatile
  2438   001834                     l136:
  2439                           
  2440                           ; BSR set to: 0
  2441                           ;./uart.h: 127:         if ((config & 0x08) == 0x08) {
  2442   001834  A7A8               	btfss	uart_init@config& (0+255),3,b
  2443   001836  EF1F  F00C         	goto	u4421
  2444   00183A  EF21  F00C         	goto	u4420
  2445   00183E                     u4421:
  2446   00183E  EF23  F00C         	goto	l137
  2447   001842                     u4420:
  2448   001842                     
  2449                           ; BSR set to: 0
  2450                           ;./uart.h: 128:             TX9 = 1;
  2451   001842  8CAC               	bsf	4012,6,c	;volatile
  2452                           
  2453                           ;./uart.h: 129:             RX9 = 1;
  2454   001844  8CAB               	bsf	4011,6,c	;volatile
  2455   001846                     l137:
  2456                           
  2457                           ; BSR set to: 0
  2458                           ;./uart.h: 132:         CREN = 1;
  2459   001846  88AB               	bsf	4011,4,c	;volatile
  2460                           
  2461                           ;./uart.h: 133:         TXEN = 1;
  2462   001848  8AAC               	bsf	4012,5,c	;volatile
  2463                           
  2464                           ;./uart.h: 134:     } else {
  2465   00184A  EF71  F00C         	goto	l138
  2466   00184E                     l134:
  2467                           
  2468                           ; BSR set to: 0
  2469                           ;./uart.h: 135:         if ((config & 0x10) == 0x10) {
  2470   00184E  A9A8               	btfss	uart_init@config& (0+255),4,b
  2471   001850  EF2C  F00C         	goto	u4431
  2472   001854  EF2E  F00C         	goto	u4430
  2473   001858                     u4431:
  2474   001858  EF4D  F00C         	goto	l139
  2475   00185C                     u4430:
  2476   00185C                     
  2477                           ; BSR set to: 0
  2478                           ;./uart.h: 137:             if ((config & 0x02) == 0x02) {
  2479   00185C  A3A8               	btfss	uart_init@config& (0+255),1,b
  2480   00185E  EF33  F00C         	goto	u4441
  2481   001862  EF35  F00C         	goto	u4440
  2482   001866                     u4441:
  2483   001866  EF37  F00C         	goto	l140
  2484   00186A                     u4440:
  2485   00186A                     
  2486                           ; BSR set to: 0
  2487                           ;./uart.h: 138:                 TXCKP = 1;
  2488   00186A  88B8               	bsf	4024,4,c	;volatile
  2489                           
  2490                           ;./uart.h: 139:                 RXDTP = 0;
  2491   00186C  9AB8               	bcf	4024,5,c	;volatile
  2492   00186E                     l140:
  2493                           
  2494                           ; BSR set to: 0
  2495                           ;./uart.h: 143:             if ((config & 0x04) == 0x04) {
  2496   00186E  A5A8               	btfss	uart_init@config& (0+255),2,b
  2497   001870  EF3C  F00C         	goto	u4451
  2498   001874  EF3E  F00C         	goto	u4450
  2499   001878                     u4451:
  2500   001878  EF40  F00C         	goto	l141
  2501   00187C                     u4450:
  2502   00187C                     
  2503                           ; BSR set to: 0
  2504                           ;./uart.h: 144:                 TXIE = 1;
  2505   00187C  889D               	bsf	3997,4,c	;volatile
  2506                           
  2507                           ;./uart.h: 145:                 RCIE = 0;
  2508   00187E  9A9D               	bcf	3997,5,c	;volatile
  2509   001880                     l141:
  2510                           
  2511                           ; BSR set to: 0
  2512                           ;./uart.h: 149:             if ((config & 0x08) == 0x08) {
  2513   001880  A7A8               	btfss	uart_init@config& (0+255),3,b
  2514   001882  EF45  F00C         	goto	u4461
  2515   001886  EF47  F00C         	goto	u4460
  2516   00188A                     u4461:
  2517   00188A  EF49  F00C         	goto	l142
  2518   00188E                     u4460:
  2519   00188E                     
  2520                           ; BSR set to: 0
  2521                           ;./uart.h: 150:                 TX9 = 1;
  2522   00188E  8CAC               	bsf	4012,6,c	;volatile
  2523                           
  2524                           ;./uart.h: 151:                 RX9 = 0;
  2525   001890  9CAB               	bcf	4011,6,c	;volatile
  2526   001892                     l142:
  2527                           
  2528                           ; BSR set to: 0
  2529                           ;./uart.h: 154:             CREN = 0;
  2530   001892  98AB               	bcf	4011,4,c	;volatile
  2531                           
  2532                           ;./uart.h: 155:             TXEN = 1;
  2533   001894  8AAC               	bsf	4012,5,c	;volatile
  2534                           
  2535                           ;./uart.h: 156:         } else if ((config & 0x20) == 0x20) {
  2536   001896  EF71  F00C         	goto	l138
  2537   00189A                     l139:
  2538                           
  2539                           ; BSR set to: 0
  2540   00189A  ABA8               	btfss	uart_init@config& (0+255),5,b
  2541   00189C  EF52  F00C         	goto	u4471
  2542   0018A0  EF54  F00C         	goto	u4470
  2543   0018A4                     u4471:
  2544   0018A4  EF71  F00C         	goto	l138
  2545   0018A8                     u4470:
  2546   0018A8                     
  2547                           ; BSR set to: 0
  2548                           ;./uart.h: 158:             if ((config & 0x02) == 0x02) {
  2549   0018A8  A3A8               	btfss	uart_init@config& (0+255),1,b
  2550   0018AA  EF59  F00C         	goto	u4481
  2551   0018AE  EF5B  F00C         	goto	u4480
  2552   0018B2                     u4481:
  2553   0018B2  EF5D  F00C         	goto	l145
  2554   0018B6                     u4480:
  2555   0018B6                     
  2556                           ; BSR set to: 0
  2557                           ;./uart.h: 159:                 TXCKP = 0;
  2558   0018B6  98B8               	bcf	4024,4,c	;volatile
  2559                           
  2560                           ;./uart.h: 160:                 RXDTP = 1;
  2561   0018B8  8AB8               	bsf	4024,5,c	;volatile
  2562   0018BA                     l145:
  2563                           
  2564                           ; BSR set to: 0
  2565                           ;./uart.h: 164:             if ((config & 0x04) == 0x04) {
  2566   0018BA  A5A8               	btfss	uart_init@config& (0+255),2,b
  2567   0018BC  EF62  F00C         	goto	u4491
  2568   0018C0  EF64  F00C         	goto	u4490
  2569   0018C4                     u4491:
  2570   0018C4  EF66  F00C         	goto	l146
  2571   0018C8                     u4490:
  2572   0018C8                     
  2573                           ; BSR set to: 0
  2574                           ;./uart.h: 165:                 TXIE = 0;
  2575   0018C8  989D               	bcf	3997,4,c	;volatile
  2576                           
  2577                           ;./uart.h: 166:                 RCIE = 1;
  2578   0018CA  8A9D               	bsf	3997,5,c	;volatile
  2579   0018CC                     l146:
  2580                           
  2581                           ; BSR set to: 0
  2582                           ;./uart.h: 170:             if ((config & 0x08) == 0x08) {
  2583   0018CC  A7A8               	btfss	uart_init@config& (0+255),3,b
  2584   0018CE  EF6B  F00C         	goto	u4501
  2585   0018D2  EF6D  F00C         	goto	u4500
  2586   0018D6                     u4501:
  2587   0018D6  EF6F  F00C         	goto	l147
  2588   0018DA                     u4500:
  2589   0018DA                     
  2590                           ; BSR set to: 0
  2591                           ;./uart.h: 171:                 TX9 = 0;
  2592   0018DA  9CAC               	bcf	4012,6,c	;volatile
  2593                           
  2594                           ;./uart.h: 172:                 RX9 = 1;
  2595   0018DC  8CAB               	bsf	4011,6,c	;volatile
  2596   0018DE                     l147:
  2597                           
  2598                           ; BSR set to: 0
  2599                           ;./uart.h: 175:             CREN = 1;
  2600   0018DE  88AB               	bsf	4011,4,c	;volatile
  2601                           
  2602                           ;./uart.h: 176:             TXEN = 0;
  2603   0018E0  9AAC               	bcf	4012,5,c	;volatile
  2604   0018E2                     l138:
  2605                           
  2606                           ; BSR set to: 0
  2607                           ;./uart.h: 180:     SPEN = 1;
  2608   0018E2  8EAB               	bsf	4011,7,c	;volatile
  2609   0018E4                     l127:
  2610                           
  2611                           ; BSR set to: 0
  2612   0018E4  0012               	return		;funcret
  2613   0018E6                     __end_of_uart_init:
  2614                           	callstack 0
  2615                           
  2616 ;; *************** function _fminf *****************
  2617 ;; Defined at:
  2618 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\fminf.c"
  2619 ;; Parameters:    Size  Location     Type
  2620 ;;  x               4   27[COMRAM] float 
  2621 ;;  y               4   31[COMRAM] float 
  2622 ;; Auto vars:     Size  Location     Type
  2623 ;;		None
  2624 ;; Return value:  Size  Location     Type
  2625 ;;                  4   27[COMRAM] float 
  2626 ;; Registers used:
  2627 ;;		wreg, status,2, status,0, cstack
  2628 ;; Tracked objects:
  2629 ;;		On entry : 0/0
  2630 ;;		On exit  : 0/0
  2631 ;;		Unchanged: 0/0
  2632 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2633 ;;      Params:         8       0       0       0       0       0       0       0       0
  2634 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2635 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2636 ;;      Totals:        10       0       0       0       0       0       0       0       0
  2637 ;;Total ram usage:       10 bytes
  2638 ;; Hardware stack levels used: 1
  2639 ;; Hardware stack levels required when called: 5
  2640 ;; This function calls:
  2641 ;;		___flge
  2642 ;;		___fpclassifyf
  2643 ;;		___signbitf
  2644 ;; This function is called by:
  2645 ;;		_uart_init
  2646 ;; This function uses a non-reentrant model
  2647 ;;
  2648                           
  2649                           	psect	text4
  2650   002720                     __ptext4:
  2651                           	callstack 0
  2652   002720                     _fminf:
  2653                           	callstack 24
  2654   002720  C01C  F00E         	movff	fminf@x,___fpclassifyf@x
  2655   002724  C01D  F00F         	movff	fminf@x+1,___fpclassifyf@x+1
  2656   002728  C01E  F010         	movff	fminf@x+2,___fpclassifyf@x+2
  2657   00272C  C01F  F011         	movff	fminf@x+3,___fpclassifyf@x+3
  2658   002730  EC25  F015         	call	___fpclassifyf	;wreg free
  2659   002734  500E               	movf	?___fpclassifyf^0,w,c
  2660   002736  100F               	iorwf	(?___fpclassifyf+1)^0,w,c
  2661   002738  A4D8               	btfss	status,2,c
  2662   00273A  EFA1  F013         	goto	u2561
  2663   00273E  EFA3  F013         	goto	u2560
  2664   002742                     u2561:
  2665   002742  EFAD  F013         	goto	l2296
  2666   002746                     u2560:
  2667   002746                     l2294:
  2668   002746  C020  F01C         	movff	fminf@y,?_fminf
  2669   00274A  C021  F01D         	movff	fminf@y+1,?_fminf+1
  2670   00274E  C022  F01E         	movff	fminf@y+2,?_fminf+2
  2671   002752  C023  F01F         	movff	fminf@y+3,?_fminf+3
  2672   002756  EF1E  F014         	goto	l892
  2673   00275A                     l2296:
  2674   00275A  C020  F00E         	movff	fminf@y,___fpclassifyf@x
  2675   00275E  C021  F00F         	movff	fminf@y+1,___fpclassifyf@x+1
  2676   002762  C022  F010         	movff	fminf@y+2,___fpclassifyf@x+2
  2677   002766  C023  F011         	movff	fminf@y+3,___fpclassifyf@x+3
  2678   00276A  EC25  F015         	call	___fpclassifyf	;wreg free
  2679   00276E  500E               	movf	?___fpclassifyf^0,w,c
  2680   002770  100F               	iorwf	(?___fpclassifyf+1)^0,w,c
  2681   002772  A4D8               	btfss	status,2,c
  2682   002774  EFBE  F013         	goto	u2571
  2683   002778  EFC0  F013         	goto	u2570
  2684   00277C                     u2571:
  2685   00277C  EFCA  F013         	goto	l2300
  2686   002780                     u2570:
  2687   002780                     l2298:
  2688   002780  C01C  F01C         	movff	fminf@x,?_fminf
  2689   002784  C01D  F01D         	movff	fminf@x+1,?_fminf+1
  2690   002788  C01E  F01E         	movff	fminf@x+2,?_fminf+2
  2691   00278C  C01F  F01F         	movff	fminf@x+3,?_fminf+3
  2692   002790  EF1E  F014         	goto	l892
  2693   002794                     l2300:
  2694   002794  C01C  F00E         	movff	fminf@x,___signbitf@x
  2695   002798  C01D  F00F         	movff	fminf@x+1,___signbitf@x+1
  2696   00279C  C01E  F010         	movff	fminf@x+2,___signbitf@x+2
  2697   0027A0  C01F  F011         	movff	fminf@x+3,___signbitf@x+3
  2698   0027A4  ECE4  F017         	call	___signbitf	;wreg free
  2699   0027A8  C00E  F024         	movff	?___signbitf,??_fminf
  2700   0027AC  C00F  F025         	movff	?___signbitf+1,??_fminf+1
  2701   0027B0  C020  F00E         	movff	fminf@y,___signbitf@x
  2702   0027B4  C021  F00F         	movff	fminf@y+1,___signbitf@x+1
  2703   0027B8  C022  F010         	movff	fminf@y+2,___signbitf@x+2
  2704   0027BC  C023  F011         	movff	fminf@y+3,___signbitf@x+3
  2705   0027C0  ECE4  F017         	call	___signbitf	;wreg free
  2706   0027C4  500E               	movf	?___signbitf^0,w,c
  2707   0027C6  1824               	xorwf	??_fminf^0,w,c
  2708   0027C8  E109               	bnz	u2580
  2709   0027CA  500F               	movf	(?___signbitf+1)^0,w,c
  2710   0027CC  1825               	xorwf	(??_fminf+1)^0,w,c
  2711   0027CE  B4D8               	btfsc	status,2,c
  2712   0027D0  EFEC  F013         	goto	u2581
  2713   0027D4  EFEE  F013         	goto	u2580
  2714   0027D8                     u2581:
  2715   0027D8  EF03  F014         	goto	l2306
  2716   0027DC                     u2580:
  2717   0027DC  C01C  F00E         	movff	fminf@x,___signbitf@x
  2718   0027E0  C01D  F00F         	movff	fminf@x+1,___signbitf@x+1
  2719   0027E4  C01E  F010         	movff	fminf@x+2,___signbitf@x+2
  2720   0027E8  C01F  F011         	movff	fminf@x+3,___signbitf@x+3
  2721   0027EC  ECE4  F017         	call	___signbitf	;wreg free
  2722   0027F0  500E               	movf	?___signbitf^0,w,c
  2723   0027F2  100F               	iorwf	(?___signbitf+1)^0,w,c
  2724   0027F4  A4D8               	btfss	status,2,c
  2725   0027F6  EFFF  F013         	goto	u2591
  2726   0027FA  EF01  F014         	goto	u2590
  2727   0027FE                     u2591:
  2728   0027FE  EFC0  F013         	goto	l2298
  2729   002802                     u2590:
  2730   002802  EFA3  F013         	goto	l2294
  2731   002806                     l2306:
  2732   002806  C01C  F00E         	movff	fminf@x,___flge@ff1
  2733   00280A  C01D  F00F         	movff	fminf@x+1,___flge@ff1+1
  2734   00280E  C01E  F010         	movff	fminf@x+2,___flge@ff1+2
  2735   002812  C01F  F011         	movff	fminf@x+3,___flge@ff1+3
  2736   002816  C020  F012         	movff	fminf@y,___flge@ff2
  2737   00281A  C021  F013         	movff	fminf@y+1,___flge@ff2+1
  2738   00281E  C022  F014         	movff	fminf@y+2,___flge@ff2+2
  2739   002822  C023  F015         	movff	fminf@y+3,___flge@ff2+3
  2740   002826  ECA3  F014         	call	___flge	;wreg free
  2741   00282A  A0D8               	btfss	status,0,c
  2742   00282C  EF1A  F014         	goto	u2601
  2743   002830  EF1C  F014         	goto	u2600
  2744   002834                     u2601:
  2745   002834  EFC0  F013         	goto	l2298
  2746   002838                     u2600:
  2747   002838  EFA3  F013         	goto	l2294
  2748   00283C                     l892:
  2749   00283C  0012               	return		;funcret
  2750   00283E                     __end_of_fminf:
  2751                           	callstack 0
  2752                           
  2753 ;; *************** function ___signbitf *****************
  2754 ;; Defined at:
  2755 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\__signbitf.c"
  2756 ;; Parameters:    Size  Location     Type
  2757 ;;  x               4   13[COMRAM] float 
  2758 ;; Auto vars:     Size  Location     Type
  2759 ;;  y               4   21[COMRAM] struct .
  2760 ;; Return value:  Size  Location     Type
  2761 ;;                  2   13[COMRAM] int 
  2762 ;; Registers used:
  2763 ;;		wreg, status,2, status,0
  2764 ;; Tracked objects:
  2765 ;;		On entry : 0/0
  2766 ;;		On exit  : 0/0
  2767 ;;		Unchanged: 0/0
  2768 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2769 ;;      Params:         4       0       0       0       0       0       0       0       0
  2770 ;;      Locals:         4       0       0       0       0       0       0       0       0
  2771 ;;      Temps:          4       0       0       0       0       0       0       0       0
  2772 ;;      Totals:        12       0       0       0       0       0       0       0       0
  2773 ;;Total ram usage:       12 bytes
  2774 ;; Hardware stack levels used: 1
  2775 ;; Hardware stack levels required when called: 4
  2776 ;; This function calls:
  2777 ;;		Nothing
  2778 ;; This function is called by:
  2779 ;;		_fminf
  2780 ;; This function uses a non-reentrant model
  2781 ;;
  2782                           
  2783                           	psect	text5
  2784   002FC8                     __ptext5:
  2785                           	callstack 0
  2786   002FC8                     ___signbitf:
  2787                           	callstack 24
  2788   002FC8  C04A  F016         	movff	___signbitf@F521,___signbitf@y
  2789   002FCC  C04B  F017         	movff	___signbitf@F521+1,___signbitf@y+1
  2790   002FD0  C04C  F018         	movff	___signbitf@F521+2,___signbitf@y+2
  2791   002FD4  C04D  F019         	movff	___signbitf@F521+3,___signbitf@y+3
  2792   002FD8  C00E  F016         	movff	___signbitf@x,___signbitf@y
  2793   002FDC  C00F  F017         	movff	___signbitf@x+1,___signbitf@y+1
  2794   002FE0  C010  F018         	movff	___signbitf@x+2,___signbitf@y+2
  2795   002FE4  C011  F019         	movff	___signbitf@x+3,___signbitf@y+3
  2796   002FE8  C016  F012         	movff	___signbitf@y,??___signbitf
  2797   002FEC  C017  F013         	movff	___signbitf@y+1,??___signbitf+1
  2798   002FF0  C018  F014         	movff	___signbitf@y+2,??___signbitf+2
  2799   002FF4  C019  F015         	movff	___signbitf@y+3,??___signbitf+3
  2800   002FF8  0E20               	movlw	32
  2801   002FFA  EF04  F018         	goto	u2490
  2802   002FFE                     u2495:
  2803   002FFE  90D8               	bcf	status,0,c
  2804   003000  3215               	rrcf	(??___signbitf+3)^0,f,c
  2805   003002  3214               	rrcf	(??___signbitf+2)^0,f,c
  2806   003004  3213               	rrcf	(??___signbitf+1)^0,f,c
  2807   003006  3212               	rrcf	??___signbitf^0,f,c
  2808   003008                     u2490:
  2809   003008  2EE8               	decfsz	wreg,f,c
  2810   00300A  EFFF  F017         	goto	u2495
  2811   00300E  C012  F00E         	movff	??___signbitf,?___signbitf
  2812   003012  C013  F00F         	movff	??___signbitf+1,?___signbitf+1
  2813   003016  0012               	return		;funcret
  2814   003018                     __end_of___signbitf:
  2815                           	callstack 0
  2816                           
  2817 ;; *************** function ___fpclassifyf *****************
  2818 ;; Defined at:
  2819 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\__fpclassifyf.c"
  2820 ;; Parameters:    Size  Location     Type
  2821 ;;  x               4   13[COMRAM] float 
  2822 ;; Auto vars:     Size  Location     Type
  2823 ;;  u               4   23[COMRAM] struct .
  2824 ;;  e               2   21[COMRAM] int 
  2825 ;; Return value:  Size  Location     Type
  2826 ;;                  2   13[COMRAM] int 
  2827 ;; Registers used:
  2828 ;;		wreg, status,2, status,0
  2829 ;; Tracked objects:
  2830 ;;		On entry : 0/0
  2831 ;;		On exit  : 0/0
  2832 ;;		Unchanged: 0/0
  2833 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2834 ;;      Params:         4       0       0       0       0       0       0       0       0
  2835 ;;      Locals:         6       0       0       0       0       0       0       0       0
  2836 ;;      Temps:          4       0       0       0       0       0       0       0       0
  2837 ;;      Totals:        14       0       0       0       0       0       0       0       0
  2838 ;;Total ram usage:       14 bytes
  2839 ;; Hardware stack levels used: 1
  2840 ;; Hardware stack levels required when called: 4
  2841 ;; This function calls:
  2842 ;;		Nothing
  2843 ;; This function is called by:
  2844 ;;		_fminf
  2845 ;; This function uses a non-reentrant model
  2846 ;;
  2847                           
  2848                           	psect	text6
  2849   002A4A                     __ptext6:
  2850                           	callstack 0
  2851   002A4A                     ___fpclassifyf:
  2852                           	callstack 24
  2853   002A4A  C04E  F018         	movff	___fpclassifyf@F465,___fpclassifyf@u
  2854   002A4E  C04F  F019         	movff	___fpclassifyf@F465+1,___fpclassifyf@u+1
  2855   002A52  C050  F01A         	movff	___fpclassifyf@F465+2,___fpclassifyf@u+2
  2856   002A56  C051  F01B         	movff	___fpclassifyf@F465+3,___fpclassifyf@u+3
  2857   002A5A  C00E  F018         	movff	___fpclassifyf@x,___fpclassifyf@u
  2858   002A5E  C00F  F019         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
  2859   002A62  C010  F01A         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
  2860   002A66  C011  F01B         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
  2861   002A6A  C018  F012         	movff	___fpclassifyf@u,??___fpclassifyf
  2862   002A6E  C019  F013         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  2863   002A72  C01A  F014         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  2864   002A76  C01B  F015         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  2865   002A7A  0E18               	movlw	24
  2866   002A7C  EF45  F015         	goto	u2420
  2867   002A80                     u2425:
  2868   002A80  90D8               	bcf	status,0,c
  2869   002A82  3215               	rrcf	(??___fpclassifyf+3)^0,f,c
  2870   002A84  3214               	rrcf	(??___fpclassifyf+2)^0,f,c
  2871   002A86  3213               	rrcf	(??___fpclassifyf+1)^0,f,c
  2872   002A88  3212               	rrcf	??___fpclassifyf^0,f,c
  2873   002A8A                     u2420:
  2874   002A8A  2EE8               	decfsz	wreg,f,c
  2875   002A8C  EF40  F015         	goto	u2425
  2876   002A90  5012               	movf	??___fpclassifyf^0,w,c
  2877   002A92  6E16               	movwf	___fpclassifyf@e^0,c
  2878   002A94  6A17               	clrf	(___fpclassifyf@e+1)^0,c
  2879   002A96  5016               	movf	___fpclassifyf@e^0,w,c
  2880   002A98  1017               	iorwf	(___fpclassifyf@e+1)^0,w,c
  2881   002A9A  A4D8               	btfss	status,2,c
  2882   002A9C  EF52  F015         	goto	u2431
  2883   002AA0  EF54  F015         	goto	u2430
  2884   002AA4                     u2431:
  2885   002AA4  EF74  F015         	goto	l2210
  2886   002AA8                     u2430:
  2887   002AA8  90D8               	bcf	status,0,c
  2888   002AAA  3418               	rlcf	___fpclassifyf@u^0,w,c
  2889   002AAC  6E12               	movwf	??___fpclassifyf^0,c
  2890   002AAE  3419               	rlcf	(___fpclassifyf@u+1)^0,w,c
  2891   002AB0  6E13               	movwf	(??___fpclassifyf+1)^0,c
  2892   002AB2  341A               	rlcf	(___fpclassifyf@u+2)^0,w,c
  2893   002AB4  6E14               	movwf	(??___fpclassifyf+2)^0,c
  2894   002AB6  341B               	rlcf	(___fpclassifyf@u+3)^0,w,c
  2895   002AB8  6E15               	movwf	(??___fpclassifyf+3)^0,c
  2896   002ABA  5012               	movf	??___fpclassifyf^0,w,c
  2897   002ABC  1013               	iorwf	(??___fpclassifyf+1)^0,w,c
  2898   002ABE  1014               	iorwf	(??___fpclassifyf+2)^0,w,c
  2899   002AC0  1015               	iorwf	(??___fpclassifyf+3)^0,w,c
  2900   002AC2  A4D8               	btfss	status,2,c
  2901   002AC4  EF66  F015         	goto	u2441
  2902   002AC8  EF68  F015         	goto	u2440
  2903   002ACC                     u2441:
  2904   002ACC  EF6E  F015         	goto	l2206
  2905   002AD0                     u2440:
  2906   002AD0  0E00               	movlw	0
  2907   002AD2  6E0F               	movwf	(?___fpclassifyf+1)^0,c
  2908   002AD4  0E02               	movlw	2
  2909   002AD6  6E0E               	movwf	?___fpclassifyf^0,c
  2910   002AD8  EFA3  F015         	goto	l912
  2911   002ADC                     l2206:
  2912   002ADC  0E00               	movlw	0
  2913   002ADE  6E0F               	movwf	(?___fpclassifyf+1)^0,c
  2914   002AE0  0E03               	movlw	3
  2915   002AE2  6E0E               	movwf	?___fpclassifyf^0,c
  2916   002AE4  EFA3  F015         	goto	l912
  2917   002AE8                     l2210:
  2918   002AE8  2816               	incf	___fpclassifyf@e^0,w,c
  2919   002AEA  1017               	iorwf	(___fpclassifyf@e+1)^0,w,c
  2920   002AEC  A4D8               	btfss	status,2,c
  2921   002AEE  EF7B  F015         	goto	u2451
  2922   002AF2  EF7D  F015         	goto	u2450
  2923   002AF6                     u2451:
  2924   002AF6  EF9F  F015         	goto	l2216
  2925   002AFA                     u2450:
  2926   002AFA  C018  F012         	movff	___fpclassifyf@u,??___fpclassifyf
  2927   002AFE  C019  F013         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  2928   002B02  C01A  F014         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  2929   002B06  C01B  F015         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  2930   002B0A  0E09               	movlw	9
  2931   002B0C                     u2465:
  2932   002B0C  90D8               	bcf	status,0,c
  2933   002B0E  3612               	rlcf	??___fpclassifyf^0,f,c
  2934   002B10  3613               	rlcf	(??___fpclassifyf+1)^0,f,c
  2935   002B12  3614               	rlcf	(??___fpclassifyf+2)^0,f,c
  2936   002B14  3615               	rlcf	(??___fpclassifyf+3)^0,f,c
  2937   002B16  2EE8               	decfsz	wreg,f,c
  2938   002B18  EF86  F015         	goto	u2465
  2939   002B1C  5012               	movf	??___fpclassifyf^0,w,c
  2940   002B1E  1013               	iorwf	(??___fpclassifyf+1)^0,w,c
  2941   002B20  1014               	iorwf	(??___fpclassifyf+2)^0,w,c
  2942   002B22  1015               	iorwf	(??___fpclassifyf+3)^0,w,c
  2943   002B24  B4D8               	btfsc	status,2,c
  2944   002B26  EF97  F015         	goto	u2471
  2945   002B2A  EF9A  F015         	goto	u2470
  2946   002B2E                     u2471:
  2947   002B2E  0E01               	movlw	1
  2948   002B30  EF9B  F015         	goto	u2480
  2949   002B34                     u2470:
  2950   002B34  0E00               	movlw	0
  2951   002B36                     u2480:
  2952   002B36  6E0E               	movwf	?___fpclassifyf^0,c
  2953   002B38  6A0F               	clrf	(?___fpclassifyf+1)^0,c
  2954   002B3A  EFA3  F015         	goto	l912
  2955   002B3E                     l2216:
  2956   002B3E  0E00               	movlw	0
  2957   002B40  6E0F               	movwf	(?___fpclassifyf+1)^0,c
  2958   002B42  0E04               	movlw	4
  2959   002B44  6E0E               	movwf	?___fpclassifyf^0,c
  2960   002B46                     l912:
  2961   002B46  0012               	return		;funcret
  2962   002B48                     __end_of___fpclassifyf:
  2963                           	callstack 0
  2964                           
  2965 ;; *************** function ___flge *****************
  2966 ;; Defined at:
  2967 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\flge.c"
  2968 ;; Parameters:    Size  Location     Type
  2969 ;;  ff1             4   13[COMRAM] int 
  2970 ;;  ff2             4   17[COMRAM] int 
  2971 ;; Auto vars:     Size  Location     Type
  2972 ;;		None
  2973 ;; Return value:  Size  Location     Type
  2974 ;;		None               void
  2975 ;; Registers used:
  2976 ;;		wreg, status,2, status,0
  2977 ;; Tracked objects:
  2978 ;;		On entry : 0/0
  2979 ;;		On exit  : 0/0
  2980 ;;		Unchanged: 0/0
  2981 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2982 ;;      Params:         8       0       0       0       0       0       0       0       0
  2983 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2984 ;;      Temps:          4       0       0       0       0       0       0       0       0
  2985 ;;      Totals:        12       0       0       0       0       0       0       0       0
  2986 ;;Total ram usage:       12 bytes
  2987 ;; Hardware stack levels used: 1
  2988 ;; Hardware stack levels required when called: 4
  2989 ;; This function calls:
  2990 ;;		Nothing
  2991 ;; This function is called by:
  2992 ;;		_uart_init
  2993 ;;		_fminf
  2994 ;; This function uses a non-reentrant model
  2995 ;;
  2996                           
  2997                           	psect	text7
  2998   002946                     __ptext7:
  2999                           	callstack 0
  3000   002946                     ___flge:
  3001                           	callstack 24
  3002   002946  0E00               	movlw	0
  3003   002948  140E               	andwf	___flge@ff1^0,w,c
  3004   00294A  6E16               	movwf	??___flge^0,c
  3005   00294C  0E00               	movlw	0
  3006   00294E  140F               	andwf	(___flge@ff1+1)^0,w,c
  3007   002950  6E17               	movwf	(??___flge+1)^0,c
  3008   002952  0E80               	movlw	128
  3009   002954  1410               	andwf	(___flge@ff1+2)^0,w,c
  3010   002956  6E18               	movwf	(??___flge+2)^0,c
  3011   002958  0E7F               	movlw	127
  3012   00295A  1411               	andwf	(___flge@ff1+3)^0,w,c
  3013   00295C  6E19               	movwf	(??___flge+3)^0,c
  3014   00295E  5016               	movf	??___flge^0,w,c
  3015   002960  1017               	iorwf	(??___flge+1)^0,w,c
  3016   002962  1018               	iorwf	(??___flge+2)^0,w,c
  3017   002964  1019               	iorwf	(??___flge+3)^0,w,c
  3018   002966  A4D8               	btfss	status,2,c
  3019   002968  EFB8  F014         	goto	u2371
  3020   00296C  EFBA  F014         	goto	u2370
  3021   002970                     u2371:
  3022   002970  EFC2  F014         	goto	l2180
  3023   002974                     u2370:
  3024   002974  0E00               	movlw	0
  3025   002976  6E0E               	movwf	___flge@ff1^0,c
  3026   002978  0E00               	movlw	0
  3027   00297A  6E0F               	movwf	(___flge@ff1+1)^0,c
  3028   00297C  0E00               	movlw	0
  3029   00297E  6E10               	movwf	(___flge@ff1+2)^0,c
  3030   002980  0E00               	movlw	0
  3031   002982  6E11               	movwf	(___flge@ff1+3)^0,c
  3032   002984                     l2180:
  3033   002984  0E00               	movlw	0
  3034   002986  1412               	andwf	___flge@ff2^0,w,c
  3035   002988  6E16               	movwf	??___flge^0,c
  3036   00298A  0E00               	movlw	0
  3037   00298C  1413               	andwf	(___flge@ff2+1)^0,w,c
  3038   00298E  6E17               	movwf	(??___flge+1)^0,c
  3039   002990  0E80               	movlw	128
  3040   002992  1414               	andwf	(___flge@ff2+2)^0,w,c
  3041   002994  6E18               	movwf	(??___flge+2)^0,c
  3042   002996  0E7F               	movlw	127
  3043   002998  1415               	andwf	(___flge@ff2+3)^0,w,c
  3044   00299A  6E19               	movwf	(??___flge+3)^0,c
  3045   00299C  5016               	movf	??___flge^0,w,c
  3046   00299E  1017               	iorwf	(??___flge+1)^0,w,c
  3047   0029A0  1018               	iorwf	(??___flge+2)^0,w,c
  3048   0029A2  1019               	iorwf	(??___flge+3)^0,w,c
  3049   0029A4  A4D8               	btfss	status,2,c
  3050   0029A6  EFD7  F014         	goto	u2381
  3051   0029AA  EFD9  F014         	goto	u2380
  3052   0029AE                     u2381:
  3053   0029AE  EFE1  F014         	goto	l2184
  3054   0029B2                     u2380:
  3055   0029B2  0E00               	movlw	0
  3056   0029B4  6E12               	movwf	___flge@ff2^0,c
  3057   0029B6  0E00               	movlw	0
  3058   0029B8  6E13               	movwf	(___flge@ff2+1)^0,c
  3059   0029BA  0E00               	movlw	0
  3060   0029BC  6E14               	movwf	(___flge@ff2+2)^0,c
  3061   0029BE  0E00               	movlw	0
  3062   0029C0  6E15               	movwf	(___flge@ff2+3)^0,c
  3063   0029C2                     l2184:
  3064   0029C2  AE11               	btfss	(___flge@ff1+3)^0,7,c
  3065   0029C4  EFE6  F014         	goto	u2391
  3066   0029C8  EFE8  F014         	goto	u2390
  3067   0029CC                     u2391:
  3068   0029CC  EFF1  F014         	goto	l2188
  3069   0029D0                     u2390:
  3070   0029D0  6C0E               	negf	___flge@ff1^0,c
  3071   0029D2  1E0F               	comf	(___flge@ff1+1)^0,f,c
  3072   0029D4  B0D8               	btfsc	status,0,c
  3073   0029D6  2A0F               	incf	(___flge@ff1+1)^0,f,c
  3074   0029D8  1E10               	comf	(___flge@ff1+2)^0,f,c
  3075   0029DA  B0D8               	btfsc	status,0,c
  3076   0029DC  2A10               	incf	(___flge@ff1+2)^0,f,c
  3077   0029DE  0E80               	movlw	128
  3078   0029E0  5611               	subfwb	(___flge@ff1+3)^0,f,c
  3079   0029E2                     l2188:
  3080   0029E2  AE15               	btfss	(___flge@ff2+3)^0,7,c
  3081   0029E4  EFF6  F014         	goto	u2401
  3082   0029E8  EFF8  F014         	goto	u2400
  3083   0029EC                     u2401:
  3084   0029EC  EF01  F015         	goto	l473
  3085   0029F0                     u2400:
  3086   0029F0  6C12               	negf	___flge@ff2^0,c
  3087   0029F2  1E13               	comf	(___flge@ff2+1)^0,f,c
  3088   0029F4  B0D8               	btfsc	status,0,c
  3089   0029F6  2A13               	incf	(___flge@ff2+1)^0,f,c
  3090   0029F8  1E14               	comf	(___flge@ff2+2)^0,f,c
  3091   0029FA  B0D8               	btfsc	status,0,c
  3092   0029FC  2A14               	incf	(___flge@ff2+2)^0,f,c
  3093   0029FE  0E80               	movlw	128
  3094   002A00  5615               	subfwb	(___flge@ff2+3)^0,f,c
  3095   002A02                     l473:
  3096   002A02  0E00               	movlw	0
  3097   002A04  1A0E               	xorwf	___flge@ff1^0,f,c
  3098   002A06  0E00               	movlw	0
  3099   002A08  1A0F               	xorwf	(___flge@ff1+1)^0,f,c
  3100   002A0A  0E00               	movlw	0
  3101   002A0C  1A10               	xorwf	(___flge@ff1+2)^0,f,c
  3102   002A0E  0E80               	movlw	128
  3103   002A10  1A11               	xorwf	(___flge@ff1+3)^0,f,c
  3104   002A12  0E00               	movlw	0
  3105   002A14  1A12               	xorwf	___flge@ff2^0,f,c
  3106   002A16  0E00               	movlw	0
  3107   002A18  1A13               	xorwf	(___flge@ff2+1)^0,f,c
  3108   002A1A  0E00               	movlw	0
  3109   002A1C  1A14               	xorwf	(___flge@ff2+2)^0,f,c
  3110   002A1E  0E80               	movlw	128
  3111   002A20  1A15               	xorwf	(___flge@ff2+3)^0,f,c
  3112   002A22  5012               	movf	___flge@ff2^0,w,c
  3113   002A24  5C0E               	subwf	___flge@ff1^0,w,c
  3114   002A26  5013               	movf	(___flge@ff2+1)^0,w,c
  3115   002A28  580F               	subwfb	(___flge@ff1+1)^0,w,c
  3116   002A2A  5014               	movf	(___flge@ff2+2)^0,w,c
  3117   002A2C  5810               	subwfb	(___flge@ff1+2)^0,w,c
  3118   002A2E  5015               	movf	(___flge@ff2+3)^0,w,c
  3119   002A30  5811               	subwfb	(___flge@ff1+3)^0,w,c
  3120   002A32  B0D8               	btfsc	status,0,c
  3121   002A34  EF1E  F015         	goto	u2411
  3122   002A38  EF20  F015         	goto	u2410
  3123   002A3C                     u2411:
  3124   002A3C  EF23  F015         	goto	l2194
  3125   002A40                     u2410:
  3126   002A40  90D8               	bcf	status,0,c
  3127   002A42  EF24  F015         	goto	l478
  3128   002A46                     l2194:
  3129   002A46  80D8               	bsf	status,0,c
  3130   002A48                     l478:
  3131   002A48  0012               	return		;funcret
  3132   002A4A                     __end_of___flge:
  3133                           	callstack 0
  3134                           
  3135 ;; *************** function _fabsf *****************
  3136 ;; Defined at:
  3137 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\fabsf.c"
  3138 ;; Parameters:    Size  Location     Type
  3139 ;;  x               4   16[BANK0 ] float 
  3140 ;; Auto vars:     Size  Location     Type
  3141 ;;  u               4   20[BANK0 ] struct .
  3142 ;; Return value:  Size  Location     Type
  3143 ;;                  4   16[BANK0 ] float 
  3144 ;; Registers used:
  3145 ;;		status,2, status,0
  3146 ;; Tracked objects:
  3147 ;;		On entry : 0/0
  3148 ;;		On exit  : 0/0
  3149 ;;		Unchanged: 0/0
  3150 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3151 ;;      Params:         0       4       0       0       0       0       0       0       0
  3152 ;;      Locals:         0       4       0       0       0       0       0       0       0
  3153 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3154 ;;      Totals:         0       8       0       0       0       0       0       0       0
  3155 ;;Total ram usage:        8 bytes
  3156 ;; Hardware stack levels used: 1
  3157 ;; Hardware stack levels required when called: 4
  3158 ;; This function calls:
  3159 ;;		Nothing
  3160 ;; This function is called by:
  3161 ;;		_uart_init
  3162 ;; This function uses a non-reentrant model
  3163 ;;
  3164                           
  3165                           	psect	text8
  3166   003132                     __ptext8:
  3167                           	callstack 0
  3168   003132                     _fabsf:
  3169                           	callstack 25
  3170   003132  C0C1  F074         	movff	fabsf@F465,fabsf@u
  3171   003136  C0C2  F075         	movff	fabsf@F465+1,fabsf@u+1
  3172   00313A  C0C3  F076         	movff	fabsf@F465+2,fabsf@u+2
  3173   00313E  C0C4  F077         	movff	fabsf@F465+3,fabsf@u+3
  3174   003142  C070  F074         	movff	fabsf@x,fabsf@u
  3175   003146  C071  F075         	movff	fabsf@x+1,fabsf@u+1
  3176   00314A  C072  F076         	movff	fabsf@x+2,fabsf@u+2
  3177   00314E  C073  F077         	movff	fabsf@x+3,fabsf@u+3
  3178   003152  0100               	movlb	0	; () banked
  3179   003154  9F77               	bcf	(fabsf@u+3)& (0+255),7,b
  3180   003156                     
  3181                           ; BSR set to: 0
  3182   003156  C074  F070         	movff	fabsf@u,?_fabsf
  3183   00315A  C075  F071         	movff	fabsf@u+1,?_fabsf+1
  3184   00315E  C076  F072         	movff	fabsf@u+2,?_fabsf+2
  3185   003162  C077  F073         	movff	fabsf@u+3,?_fabsf+3
  3186   003166                     
  3187                           ; BSR set to: 0
  3188   003166  0012               	return		;funcret
  3189   003168                     __end_of_fabsf:
  3190                           	callstack 0
  3191                           
  3192 ;; *************** function ___xxtofl *****************
  3193 ;; Defined at:
  3194 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\xxtofl.c"
  3195 ;; Parameters:    Size  Location     Type
  3196 ;;  sign            1    wreg     unsigned char 
  3197 ;;  val             4   13[COMRAM] long 
  3198 ;; Auto vars:     Size  Location     Type
  3199 ;;  sign            1   21[COMRAM] unsigned char 
  3200 ;;  arg             4   23[COMRAM] unsigned long 
  3201 ;;  exp             1   22[COMRAM] unsigned char 
  3202 ;; Return value:  Size  Location     Type
  3203 ;;                  4   13[COMRAM] unsigned char 
  3204 ;; Registers used:
  3205 ;;		wreg, status,2, status,0
  3206 ;; Tracked objects:
  3207 ;;		On entry : 0/0
  3208 ;;		On exit  : 0/0
  3209 ;;		Unchanged: 0/0
  3210 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3211 ;;      Params:         4       0       0       0       0       0       0       0       0
  3212 ;;      Locals:         6       0       0       0       0       0       0       0       0
  3213 ;;      Temps:          4       0       0       0       0       0       0       0       0
  3214 ;;      Totals:        14       0       0       0       0       0       0       0       0
  3215 ;;Total ram usage:       14 bytes
  3216 ;; Hardware stack levels used: 1
  3217 ;; Hardware stack levels required when called: 4
  3218 ;; This function calls:
  3219 ;;		Nothing
  3220 ;; This function is called by:
  3221 ;;		_uart_init
  3222 ;; This function uses a non-reentrant model
  3223 ;;
  3224                           
  3225                           	psect	text9
  3226   00256C                     __ptext9:
  3227                           	callstack 0
  3228   00256C                     ___xxtofl:
  3229                           	callstack 25
  3230                           
  3231                           ; BSR set to: 0
  3232                           ;incstack = 0
  3233                           ;___xxtofl@sign stored from wreg
  3234   00256C  6E16               	movwf	___xxtofl@sign^0,c
  3235   00256E  5016               	movf	___xxtofl@sign^0,w,c
  3236   002570  B4D8               	btfsc	status,2,c
  3237   002572  EFBD  F012         	goto	u3171
  3238   002576  EFBF  F012         	goto	u3170
  3239   00257A                     u3171:
  3240   00257A  EFE1  F012         	goto	l863
  3241   00257E                     u3170:
  3242   00257E  BE11               	btfsc	(___xxtofl@val+3)^0,7,c
  3243   002580  EFC6  F012         	goto	u3180
  3244   002584  EFC4  F012         	goto	u3181
  3245   002588                     u3181:
  3246   002588  EFE1  F012         	goto	l863
  3247   00258C                     u3180:
  3248   00258C  C00E  F012         	movff	___xxtofl@val,??___xxtofl
  3249   002590  C00F  F013         	movff	___xxtofl@val+1,??___xxtofl+1
  3250   002594  C010  F014         	movff	___xxtofl@val+2,??___xxtofl+2
  3251   002598  C011  F015         	movff	___xxtofl@val+3,??___xxtofl+3
  3252   00259C  1E12               	comf	??___xxtofl^0,f,c
  3253   00259E  1E13               	comf	(??___xxtofl+1)^0,f,c
  3254   0025A0  1E14               	comf	(??___xxtofl+2)^0,f,c
  3255   0025A2  1E15               	comf	(??___xxtofl+3)^0,f,c
  3256   0025A4  2A12               	incf	??___xxtofl^0,f,c
  3257   0025A6  0E00               	movlw	0
  3258   0025A8  2213               	addwfc	(??___xxtofl+1)^0,f,c
  3259   0025AA  2214               	addwfc	(??___xxtofl+2)^0,f,c
  3260   0025AC  2215               	addwfc	(??___xxtofl+3)^0,f,c
  3261   0025AE  C012  F018         	movff	??___xxtofl,___xxtofl@arg
  3262   0025B2  C013  F019         	movff	??___xxtofl+1,___xxtofl@arg+1
  3263   0025B6  C014  F01A         	movff	??___xxtofl+2,___xxtofl@arg+2
  3264   0025BA  C015  F01B         	movff	??___xxtofl+3,___xxtofl@arg+3
  3265   0025BE  EFE9  F012         	goto	l2674
  3266   0025C2                     l863:
  3267   0025C2  C00E  F018         	movff	___xxtofl@val,___xxtofl@arg
  3268   0025C6  C00F  F019         	movff	___xxtofl@val+1,___xxtofl@arg+1
  3269   0025CA  C010  F01A         	movff	___xxtofl@val+2,___xxtofl@arg+2
  3270   0025CE  C011  F01B         	movff	___xxtofl@val+3,___xxtofl@arg+3
  3271   0025D2                     l2674:
  3272   0025D2  500E               	movf	___xxtofl@val^0,w,c
  3273   0025D4  100F               	iorwf	(___xxtofl@val+1)^0,w,c
  3274   0025D6  1010               	iorwf	(___xxtofl@val+2)^0,w,c
  3275   0025D8  1011               	iorwf	(___xxtofl@val+3)^0,w,c
  3276   0025DA  A4D8               	btfss	status,2,c
  3277   0025DC  EFF2  F012         	goto	u3191
  3278   0025E0  EFF4  F012         	goto	u3190
  3279   0025E4                     u3191:
  3280   0025E4  EFFE  F012         	goto	l2680
  3281   0025E8                     u3190:
  3282   0025E8  0E00               	movlw	0
  3283   0025EA  6E0E               	movwf	?___xxtofl^0,c
  3284   0025EC  0E00               	movlw	0
  3285   0025EE  6E0F               	movwf	(?___xxtofl+1)^0,c
  3286   0025F0  0E00               	movlw	0
  3287   0025F2  6E10               	movwf	(?___xxtofl+2)^0,c
  3288   0025F4  0E00               	movlw	0
  3289   0025F6  6E11               	movwf	(?___xxtofl+3)^0,c
  3290   0025F8  EF8F  F013         	goto	l866
  3291   0025FC                     l2680:
  3292   0025FC  0E96               	movlw	150
  3293   0025FE  6E17               	movwf	___xxtofl@exp^0,c
  3294   002600  EF08  F013         	goto	l2684
  3295   002604                     l2682:
  3296   002604  2A17               	incf	___xxtofl@exp^0,f,c
  3297   002606  90D8               	bcf	status,0,c
  3298   002608  321B               	rrcf	(___xxtofl@arg+3)^0,f,c
  3299   00260A  321A               	rrcf	(___xxtofl@arg+2)^0,f,c
  3300   00260C  3219               	rrcf	(___xxtofl@arg+1)^0,f,c
  3301   00260E  3218               	rrcf	___xxtofl@arg^0,f,c
  3302   002610                     l2684:
  3303   002610  0E00               	movlw	0
  3304   002612  1418               	andwf	___xxtofl@arg^0,w,c
  3305   002614  6E12               	movwf	??___xxtofl^0,c
  3306   002616  0E00               	movlw	0
  3307   002618  1419               	andwf	(___xxtofl@arg+1)^0,w,c
  3308   00261A  6E13               	movwf	(??___xxtofl+1)^0,c
  3309   00261C  0E00               	movlw	0
  3310   00261E  141A               	andwf	(___xxtofl@arg+2)^0,w,c
  3311   002620  6E14               	movwf	(??___xxtofl+2)^0,c
  3312   002622  0EFE               	movlw	254
  3313   002624  141B               	andwf	(___xxtofl@arg+3)^0,w,c
  3314   002626  6E15               	movwf	(??___xxtofl+3)^0,c
  3315   002628  5012               	movf	??___xxtofl^0,w,c
  3316   00262A  1013               	iorwf	(??___xxtofl+1)^0,w,c
  3317   00262C  1014               	iorwf	(??___xxtofl+2)^0,w,c
  3318   00262E  1015               	iorwf	(??___xxtofl+3)^0,w,c
  3319   002630  A4D8               	btfss	status,2,c
  3320   002632  EF1D  F013         	goto	u3201
  3321   002636  EF1F  F013         	goto	u3200
  3322   00263A                     u3201:
  3323   00263A  EF02  F013         	goto	l2682
  3324   00263E                     u3200:
  3325   00263E  EF2D  F013         	goto	l870
  3326   002642                     l2686:
  3327   002642  2A17               	incf	___xxtofl@exp^0,f,c
  3328   002644  0E01               	movlw	1
  3329   002646  2618               	addwf	___xxtofl@arg^0,f,c
  3330   002648  0E00               	movlw	0
  3331   00264A  2219               	addwfc	(___xxtofl@arg+1)^0,f,c
  3332   00264C  221A               	addwfc	(___xxtofl@arg+2)^0,f,c
  3333   00264E  221B               	addwfc	(___xxtofl@arg+3)^0,f,c
  3334   002650  90D8               	bcf	status,0,c
  3335   002652  321B               	rrcf	(___xxtofl@arg+3)^0,f,c
  3336   002654  321A               	rrcf	(___xxtofl@arg+2)^0,f,c
  3337   002656  3219               	rrcf	(___xxtofl@arg+1)^0,f,c
  3338   002658  3218               	rrcf	___xxtofl@arg^0,f,c
  3339   00265A                     l870:
  3340   00265A  0E00               	movlw	0
  3341   00265C  1418               	andwf	___xxtofl@arg^0,w,c
  3342   00265E  6E12               	movwf	??___xxtofl^0,c
  3343   002660  0E00               	movlw	0
  3344   002662  1419               	andwf	(___xxtofl@arg+1)^0,w,c
  3345   002664  6E13               	movwf	(??___xxtofl+1)^0,c
  3346   002666  0E00               	movlw	0
  3347   002668  141A               	andwf	(___xxtofl@arg+2)^0,w,c
  3348   00266A  6E14               	movwf	(??___xxtofl+2)^0,c
  3349   00266C  0EFF               	movlw	255
  3350   00266E  141B               	andwf	(___xxtofl@arg+3)^0,w,c
  3351   002670  6E15               	movwf	(??___xxtofl+3)^0,c
  3352   002672  5012               	movf	??___xxtofl^0,w,c
  3353   002674  1013               	iorwf	(??___xxtofl+1)^0,w,c
  3354   002676  1014               	iorwf	(??___xxtofl+2)^0,w,c
  3355   002678  1015               	iorwf	(??___xxtofl+3)^0,w,c
  3356   00267A  A4D8               	btfss	status,2,c
  3357   00267C  EF42  F013         	goto	u3211
  3358   002680  EF44  F013         	goto	u3210
  3359   002684                     u3211:
  3360   002684  EF21  F013         	goto	l2686
  3361   002688                     u3210:
  3362   002688  EF4C  F013         	goto	l2694
  3363   00268C                     l2692:
  3364   00268C  0617               	decf	___xxtofl@exp^0,f,c
  3365   00268E  90D8               	bcf	status,0,c
  3366   002690  3618               	rlcf	___xxtofl@arg^0,f,c
  3367   002692  3619               	rlcf	(___xxtofl@arg+1)^0,f,c
  3368   002694  361A               	rlcf	(___xxtofl@arg+2)^0,f,c
  3369   002696  361B               	rlcf	(___xxtofl@arg+3)^0,f,c
  3370   002698                     l2694:
  3371   002698  BE1A               	btfsc	(___xxtofl@arg+2)^0,7,c
  3372   00269A  EF51  F013         	goto	u3221
  3373   00269E  EF53  F013         	goto	u3220
  3374   0026A2                     u3221:
  3375   0026A2  EF5B  F013         	goto	l877
  3376   0026A6                     u3220:
  3377   0026A6  0E02               	movlw	2
  3378   0026A8  6017               	cpfslt	___xxtofl@exp^0,c
  3379   0026AA  EF59  F013         	goto	u3231
  3380   0026AE  EF5B  F013         	goto	u3230
  3381   0026B2                     u3231:
  3382   0026B2  EF46  F013         	goto	l2692
  3383   0026B6                     u3230:
  3384   0026B6                     l877:
  3385   0026B6  B017               	btfsc	___xxtofl@exp^0,0,c
  3386   0026B8  EF60  F013         	goto	u3241
  3387   0026BC  EF62  F013         	goto	u3240
  3388   0026C0                     u3241:
  3389   0026C0  EF63  F013         	goto	l2700
  3390   0026C4                     u3240:
  3391   0026C4  9E1A               	bcf	(___xxtofl@arg+2)^0,7,c
  3392   0026C6                     l2700:
  3393   0026C6  90D8               	bcf	status,0,c
  3394   0026C8  3217               	rrcf	___xxtofl@exp^0,f,c
  3395   0026CA  C017  F012         	movff	___xxtofl@exp,??___xxtofl
  3396   0026CE  6A13               	clrf	(??___xxtofl+1)^0,c
  3397   0026D0  6A14               	clrf	(??___xxtofl+2)^0,c
  3398   0026D2  6A15               	clrf	(??___xxtofl+3)^0,c
  3399   0026D4  C012  F015         	movff	??___xxtofl,??___xxtofl+3
  3400   0026D8  6A14               	clrf	(??___xxtofl+2)^0,c
  3401   0026DA  6A13               	clrf	(??___xxtofl+1)^0,c
  3402   0026DC  6A12               	clrf	??___xxtofl^0,c
  3403   0026DE  5012               	movf	??___xxtofl^0,w,c
  3404   0026E0  1218               	iorwf	___xxtofl@arg^0,f,c
  3405   0026E2  5013               	movf	(??___xxtofl+1)^0,w,c
  3406   0026E4  1219               	iorwf	(___xxtofl@arg+1)^0,f,c
  3407   0026E6  5014               	movf	(??___xxtofl+2)^0,w,c
  3408   0026E8  121A               	iorwf	(___xxtofl@arg+2)^0,f,c
  3409   0026EA  5015               	movf	(??___xxtofl+3)^0,w,c
  3410   0026EC  121B               	iorwf	(___xxtofl@arg+3)^0,f,c
  3411   0026EE  5016               	movf	___xxtofl@sign^0,w,c
  3412   0026F0  B4D8               	btfsc	status,2,c
  3413   0026F2  EF7D  F013         	goto	u3251
  3414   0026F6  EF7F  F013         	goto	u3250
  3415   0026FA                     u3251:
  3416   0026FA  EF87  F013         	goto	l2710
  3417   0026FE                     u3250:
  3418   0026FE  BE11               	btfsc	(___xxtofl@val+3)^0,7,c
  3419   002700  EF86  F013         	goto	u3260
  3420   002704  EF84  F013         	goto	u3261
  3421   002708                     u3261:
  3422   002708  EF87  F013         	goto	l2710
  3423   00270C                     u3260:
  3424   00270C  8E1B               	bsf	(___xxtofl@arg+3)^0,7,c
  3425   00270E                     l2710:
  3426   00270E  C018  F00E         	movff	___xxtofl@arg,?___xxtofl
  3427   002712  C019  F00F         	movff	___xxtofl@arg+1,?___xxtofl+1
  3428   002716  C01A  F010         	movff	___xxtofl@arg+2,?___xxtofl+2
  3429   00271A  C01B  F011         	movff	___xxtofl@arg+3,?___xxtofl+3
  3430   00271E                     l866:
  3431   00271E  0012               	return		;funcret
  3432   002720                     __end_of___xxtofl:
  3433                           	callstack 0
  3434                           
  3435 ;; *************** function ___fltol *****************
  3436 ;; Defined at:
  3437 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\fltol.c"
  3438 ;; Parameters:    Size  Location     Type
  3439 ;;  f1              4    8[BANK0 ] unsigned char 
  3440 ;; Auto vars:     Size  Location     Type
  3441 ;;  exp1            1   72[COMRAM] unsigned char 
  3442 ;;  sign1           1   71[COMRAM] unsigned char 
  3443 ;; Return value:  Size  Location     Type
  3444 ;;                  4    8[BANK0 ] long 
  3445 ;; Registers used:
  3446 ;;		wreg, status,2, status,0
  3447 ;; Tracked objects:
  3448 ;;		On entry : 0/0
  3449 ;;		On exit  : 0/0
  3450 ;;		Unchanged: 0/0
  3451 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3452 ;;      Params:         0       4       0       0       0       0       0       0       0
  3453 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3454 ;;      Temps:          0       4       0       0       0       0       0       0       0
  3455 ;;      Totals:         2       8       0       0       0       0       0       0       0
  3456 ;;Total ram usage:       10 bytes
  3457 ;; Hardware stack levels used: 1
  3458 ;; Hardware stack levels required when called: 4
  3459 ;; This function calls:
  3460 ;;		Nothing
  3461 ;; This function is called by:
  3462 ;;		_uart_init
  3463 ;; This function uses a non-reentrant model
  3464 ;;
  3465                           
  3466                           	psect	text10
  3467   00283E                     __ptext10:
  3468                           	callstack 0
  3469   00283E                     ___fltol:
  3470                           	callstack 25
  3471   00283E  0100               	movlb	0	; () banked
  3472   002840  356A               	rlcf	(___fltol@f1+2)& (0+255),w,b
  3473   002842  356B               	rlcf	(___fltol@f1+3)& (0+255),w,b
  3474   002844  6E49               	movwf	___fltol@exp1^0,c
  3475   002846  5049               	movf	___fltol@exp1^0,w,c
  3476   002848  A4D8               	btfss	status,2,c
  3477   00284A  EF29  F014         	goto	u3101
  3478   00284E  EF2B  F014         	goto	u3100
  3479   002852                     u3101:
  3480   002852  EF35  F014         	goto	l2630
  3481   002856                     u3100:
  3482   002856                     l2626:
  3483                           
  3484                           ; BSR set to: 0
  3485   002856  0E00               	movlw	0
  3486   002858  6F68               	movwf	?___fltol& (0+255),b
  3487   00285A  0E00               	movlw	0
  3488   00285C  6F69               	movwf	(?___fltol+1)& (0+255),b
  3489   00285E  0E00               	movlw	0
  3490   002860  6F6A               	movwf	(?___fltol+2)& (0+255),b
  3491   002862  0E00               	movlw	0
  3492   002864  6F6B               	movwf	(?___fltol+3)& (0+255),b
  3493   002866  EFA2  F014         	goto	l505
  3494   00286A                     l2630:
  3495                           
  3496                           ; BSR set to: 0
  3497   00286A  C068  F06C         	movff	___fltol@f1,??___fltol
  3498   00286E  C069  F06D         	movff	___fltol@f1+1,??___fltol+1
  3499   002872  C06A  F06E         	movff	___fltol@f1+2,??___fltol+2
  3500   002876  C06B  F06F         	movff	___fltol@f1+3,??___fltol+3
  3501   00287A  0E20               	movlw	32
  3502   00287C  EF45  F014         	goto	u3110
  3503   002880                     u3115:
  3504   002880  90D8               	bcf	status,0,c
  3505   002882  336F               	rrcf	(??___fltol+3)& (0+255),f,b
  3506   002884  336E               	rrcf	(??___fltol+2)& (0+255),f,b
  3507   002886  336D               	rrcf	(??___fltol+1)& (0+255),f,b
  3508   002888  336C               	rrcf	??___fltol& (0+255),f,b
  3509   00288A                     u3110:
  3510   00288A  2EE8               	decfsz	wreg,f,c
  3511   00288C  EF40  F014         	goto	u3115
  3512   002890  516C               	movf	??___fltol& (0+255),w,b
  3513   002892  6E48               	movwf	___fltol@sign1^0,c
  3514   002894                     
  3515                           ; BSR set to: 0
  3516   002894  8F6A               	bsf	(___fltol@f1+2)& (0+255),7,b
  3517   002896                     
  3518                           ; BSR set to: 0
  3519   002896  0EFF               	movlw	255
  3520   002898  1768               	andwf	___fltol@f1& (0+255),f,b
  3521   00289A  0EFF               	movlw	255
  3522   00289C  1769               	andwf	(___fltol@f1+1)& (0+255),f,b
  3523   00289E  0EFF               	movlw	255
  3524   0028A0  176A               	andwf	(___fltol@f1+2)& (0+255),f,b
  3525   0028A2  0E00               	movlw	0
  3526   0028A4  176B               	andwf	(___fltol@f1+3)& (0+255),f,b
  3527   0028A6                     
  3528                           ; BSR set to: 0
  3529   0028A6  0E96               	movlw	150
  3530   0028A8  5E49               	subwf	___fltol@exp1^0,f,c
  3531   0028AA                     
  3532                           ; BSR set to: 0
  3533   0028AA  BE49               	btfsc	___fltol@exp1^0,7,c
  3534   0028AC  EF5C  F014         	goto	u3120
  3535   0028B0  EF5A  F014         	goto	u3121
  3536   0028B4                     u3121:
  3537   0028B4  EF72  F014         	goto	l2650
  3538   0028B8                     u3120:
  3539   0028B8                     
  3540                           ; BSR set to: 0
  3541   0028B8  5049               	movf	___fltol@exp1^0,w,c
  3542   0028BA  0A80               	xorlw	128
  3543   0028BC  0F97               	addlw	151
  3544   0028BE  B0D8               	btfsc	status,0,c
  3545   0028C0  EF64  F014         	goto	u3131
  3546   0028C4  EF66  F014         	goto	u3130
  3547   0028C8                     u3131:
  3548   0028C8  EF68  F014         	goto	l2646
  3549   0028CC                     u3130:
  3550   0028CC  EF2B  F014         	goto	l2626
  3551   0028D0                     l2646:
  3552                           
  3553                           ; BSR set to: 0
  3554   0028D0  90D8               	bcf	status,0,c
  3555   0028D2  336B               	rrcf	(___fltol@f1+3)& (0+255),f,b
  3556   0028D4  336A               	rrcf	(___fltol@f1+2)& (0+255),f,b
  3557   0028D6  3369               	rrcf	(___fltol@f1+1)& (0+255),f,b
  3558   0028D8  3368               	rrcf	___fltol@f1& (0+255),f,b
  3559   0028DA                     
  3560                           ; BSR set to: 0
  3561   0028DA  3E49               	incfsz	___fltol@exp1^0,f,c
  3562   0028DC  EF68  F014         	goto	l2646
  3563   0028E0  EF8A  F014         	goto	l2660
  3564   0028E4                     l2650:
  3565                           
  3566                           ; BSR set to: 0
  3567   0028E4  0E1F               	movlw	31
  3568   0028E6  6449               	cpfsgt	___fltol@exp1^0,c
  3569   0028E8  EF78  F014         	goto	u3141
  3570   0028EC  EF7A  F014         	goto	u3140
  3571   0028F0                     u3141:
  3572   0028F0  EF82  F014         	goto	l2658
  3573   0028F4                     u3140:
  3574   0028F4  EF2B  F014         	goto	l2626
  3575   0028F8                     l2656:
  3576                           
  3577                           ; BSR set to: 0
  3578   0028F8  90D8               	bcf	status,0,c
  3579   0028FA  3768               	rlcf	___fltol@f1& (0+255),f,b
  3580   0028FC  3769               	rlcf	(___fltol@f1+1)& (0+255),f,b
  3581   0028FE  376A               	rlcf	(___fltol@f1+2)& (0+255),f,b
  3582   002900  376B               	rlcf	(___fltol@f1+3)& (0+255),f,b
  3583   002902  0649               	decf	___fltol@exp1^0,f,c
  3584   002904                     l2658:
  3585                           
  3586                           ; BSR set to: 0
  3587   002904  5049               	movf	___fltol@exp1^0,w,c
  3588   002906  A4D8               	btfss	status,2,c
  3589   002908  EF88  F014         	goto	u3151
  3590   00290C  EF8A  F014         	goto	u3150
  3591   002910                     u3151:
  3592   002910  EF7C  F014         	goto	l2656
  3593   002914                     u3150:
  3594   002914                     l2660:
  3595                           
  3596                           ; BSR set to: 0
  3597   002914  5048               	movf	___fltol@sign1^0,w,c
  3598   002916  B4D8               	btfsc	status,2,c
  3599   002918  EF90  F014         	goto	u3161
  3600   00291C  EF92  F014         	goto	u3160
  3601   002920                     u3161:
  3602   002920  EF9A  F014         	goto	l2664
  3603   002924                     u3160:
  3604   002924                     
  3605                           ; BSR set to: 0
  3606   002924  1F6B               	comf	(___fltol@f1+3)& (0+255),f,b
  3607   002926  1F6A               	comf	(___fltol@f1+2)& (0+255),f,b
  3608   002928  1F69               	comf	(___fltol@f1+1)& (0+255),f,b
  3609   00292A  6D68               	negf	___fltol@f1& (0+255),b
  3610   00292C  0E00               	movlw	0
  3611   00292E  2369               	addwfc	(___fltol@f1+1)& (0+255),f,b
  3612   002930  236A               	addwfc	(___fltol@f1+2)& (0+255),f,b
  3613   002932  236B               	addwfc	(___fltol@f1+3)& (0+255),f,b
  3614   002934                     l2664:
  3615                           
  3616                           ; BSR set to: 0
  3617   002934  C068  F068         	movff	___fltol@f1,?___fltol
  3618   002938  C069  F069         	movff	___fltol@f1+1,?___fltol+1
  3619   00293C  C06A  F06A         	movff	___fltol@f1+2,?___fltol+2
  3620   002940  C06B  F06B         	movff	___fltol@f1+3,?___fltol+3
  3621   002944                     l505:
  3622                           
  3623                           ; BSR set to: 0
  3624   002944  0012               	return		;funcret
  3625   002946                     __end_of___fltol:
  3626                           	callstack 0
  3627                           
  3628 ;; *************** function ___flsub *****************
  3629 ;; Defined at:
  3630 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\sprcadd.c"
  3631 ;; Parameters:    Size  Location     Type
  3632 ;;  b               4    8[BANK0 ] long 
  3633 ;;  a               4   12[BANK0 ] long 
  3634 ;; Auto vars:     Size  Location     Type
  3635 ;;		None
  3636 ;; Return value:  Size  Location     Type
  3637 ;;                  4    8[BANK0 ] long 
  3638 ;; Registers used:
  3639 ;;		wreg, status,2, status,0, cstack
  3640 ;; Tracked objects:
  3641 ;;		On entry : 0/0
  3642 ;;		On exit  : 0/0
  3643 ;;		Unchanged: 0/0
  3644 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3645 ;;      Params:         0       8       0       0       0       0       0       0       0
  3646 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3647 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3648 ;;      Totals:         0       8       0       0       0       0       0       0       0
  3649 ;;Total ram usage:        8 bytes
  3650 ;; Hardware stack levels used: 1
  3651 ;; Hardware stack levels required when called: 5
  3652 ;; This function calls:
  3653 ;;		___fladd
  3654 ;; This function is called by:
  3655 ;;		_uart_init
  3656 ;; This function uses a non-reentrant model
  3657 ;;
  3658                           
  3659                           	psect	text11
  3660   003060                     __ptext11:
  3661                           	callstack 0
  3662   003060                     ___flsub:
  3663                           	callstack 24
  3664   003060  0E00               	movlw	0
  3665   003062  0100               	movlb	0	; () banked
  3666   003064  1B6C               	xorwf	___flsub@a& (0+255),f,b
  3667   003066  0E00               	movlw	0
  3668   003068  1B6D               	xorwf	(___flsub@a+1)& (0+255),f,b
  3669   00306A  0E00               	movlw	0
  3670   00306C  1B6E               	xorwf	(___flsub@a+2)& (0+255),f,b
  3671   00306E  0E80               	movlw	128
  3672   003070  1B6F               	xorwf	(___flsub@a+3)& (0+255),f,b
  3673   003072                     
  3674                           ; BSR set to: 0
  3675   003072  C068  F040         	movff	___flsub@b,___fladd@b
  3676   003076  C069  F041         	movff	___flsub@b+1,___fladd@b+1
  3677   00307A  C06A  F042         	movff	___flsub@b+2,___fladd@b+2
  3678   00307E  C06B  F043         	movff	___flsub@b+3,___fladd@b+3
  3679   003082  C06C  F044         	movff	___flsub@a,___fladd@a
  3680   003086  C06D  F045         	movff	___flsub@a+1,___fladd@a+1
  3681   00308A  C06E  F046         	movff	___flsub@a+2,___fladd@a+2
  3682   00308E  C06F  F047         	movff	___flsub@a+3,___fladd@a+3
  3683   003092  EC73  F00C         	call	___fladd	;wreg free
  3684   003096  C040  F068         	movff	?___fladd,?___flsub
  3685   00309A  C041  F069         	movff	?___fladd+1,?___flsub+1
  3686   00309E  C042  F06A         	movff	?___fladd+2,?___flsub+2
  3687   0030A2  C043  F06B         	movff	?___fladd+3,?___flsub+3
  3688   0030A6  0012               	return		;funcret
  3689   0030A8                     __end_of___flsub:
  3690                           	callstack 0
  3691                           
  3692 ;; *************** function ___fladd *****************
  3693 ;; Defined at:
  3694 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\sprcadd.c"
  3695 ;; Parameters:    Size  Location     Type
  3696 ;;  b               4   63[COMRAM] long 
  3697 ;;  a               4   67[COMRAM] long 
  3698 ;; Auto vars:     Size  Location     Type
  3699 ;;  grs             1    7[BANK0 ] unsigned char 
  3700 ;;  bexp            1    6[BANK0 ] unsigned char 
  3701 ;;  aexp            1    5[BANK0 ] unsigned char 
  3702 ;;  signs           1    4[BANK0 ] unsigned char 
  3703 ;; Return value:  Size  Location     Type
  3704 ;;                  4   63[COMRAM] unsigned char 
  3705 ;; Registers used:
  3706 ;;		wreg, status,2, status,0
  3707 ;; Tracked objects:
  3708 ;;		On entry : 0/0
  3709 ;;		On exit  : 0/0
  3710 ;;		Unchanged: 0/0
  3711 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3712 ;;      Params:         8       0       0       0       0       0       0       0       0
  3713 ;;      Locals:         0       4       0       0       0       0       0       0       0
  3714 ;;      Temps:          0       4       0       0       0       0       0       0       0
  3715 ;;      Totals:         8       8       0       0       0       0       0       0       0
  3716 ;;Total ram usage:       16 bytes
  3717 ;; Hardware stack levels used: 1
  3718 ;; Hardware stack levels required when called: 4
  3719 ;; This function calls:
  3720 ;;		Nothing
  3721 ;; This function is called by:
  3722 ;;		_uart_init
  3723 ;;		___flsub
  3724 ;; This function uses a non-reentrant model
  3725 ;;
  3726                           
  3727                           	psect	text12
  3728   0018E6                     __ptext12:
  3729                           	callstack 0
  3730   0018E6                     ___fladd:
  3731                           	callstack 24
  3732   0018E6  5043               	movf	(___fladd@b+3)^0,w,c
  3733   0018E8  0B80               	andlw	128
  3734   0018EA  0100               	movlb	0	; () banked
  3735   0018EC  6F64               	movwf	___fladd@signs& (0+255),b
  3736   0018EE  5043               	movf	(___fladd@b+3)^0,w,c
  3737   0018F0  2443               	addwf	(___fladd@b+3)^0,w,c
  3738   0018F2  6F66               	movwf	___fladd@bexp& (0+255),b
  3739   0018F4                     
  3740                           ; BSR set to: 0
  3741   0018F4  AE42               	btfss	(___fladd@b+2)^0,7,c
  3742   0018F6  EF7F  F00C         	goto	u3761
  3743   0018FA  EF81  F00C         	goto	u3760
  3744   0018FE                     u3761:
  3745   0018FE  EF82  F00C         	goto	l2986
  3746   001902                     u3760:
  3747   001902                     
  3748                           ; BSR set to: 0
  3749   001902  8166               	bsf	___fladd@bexp& (0+255),0,b
  3750   001904                     l2986:
  3751                           
  3752                           ; BSR set to: 0
  3753   001904  5166               	movf	___fladd@bexp& (0+255),w,b
  3754   001906  B4D8               	btfsc	status,2,c
  3755   001908  EF88  F00C         	goto	u3771
  3756   00190C  EF8A  F00C         	goto	u3770
  3757   001910                     u3771:
  3758   001910  EF9F  F00C         	goto	l2996
  3759   001914                     u3770:
  3760   001914                     
  3761                           ; BSR set to: 0
  3762   001914  2966               	incf	___fladd@bexp& (0+255),w,b
  3763   001916  A4D8               	btfss	status,2,c
  3764   001918  EF90  F00C         	goto	u3781
  3765   00191C  EF92  F00C         	goto	u3780
  3766   001920                     u3781:
  3767   001920  EF9A  F00C         	goto	l2992
  3768   001924                     u3780:
  3769   001924                     
  3770                           ; BSR set to: 0
  3771   001924  0E00               	movlw	0
  3772   001926  6E40               	movwf	___fladd@b^0,c
  3773   001928  0E00               	movlw	0
  3774   00192A  6E41               	movwf	(___fladd@b+1)^0,c
  3775   00192C  0E00               	movlw	0
  3776   00192E  6E42               	movwf	(___fladd@b+2)^0,c
  3777   001930  0E00               	movlw	0
  3778   001932  6E43               	movwf	(___fladd@b+3)^0,c
  3779   001934                     l2992:
  3780                           
  3781                           ; BSR set to: 0
  3782   001934  8E42               	bsf	(___fladd@b+2)^0,7,c
  3783   001936                     
  3784                           ; BSR set to: 0
  3785   001936  0E00               	movlw	0
  3786   001938  6E43               	movwf	(___fladd@b+3)^0,c
  3787   00193A  EFA7  F00C         	goto	l2998
  3788   00193E                     l2996:
  3789                           
  3790                           ; BSR set to: 0
  3791   00193E  0E00               	movlw	0
  3792   001940  6E40               	movwf	___fladd@b^0,c
  3793   001942  0E00               	movlw	0
  3794   001944  6E41               	movwf	(___fladd@b+1)^0,c
  3795   001946  0E00               	movlw	0
  3796   001948  6E42               	movwf	(___fladd@b+2)^0,c
  3797   00194A  0E00               	movlw	0
  3798   00194C  6E43               	movwf	(___fladd@b+3)^0,c
  3799   00194E                     l2998:
  3800                           
  3801                           ; BSR set to: 0
  3802   00194E  5047               	movf	(___fladd@a+3)^0,w,c
  3803   001950  0B80               	andlw	128
  3804   001952  6F65               	movwf	___fladd@aexp& (0+255),b
  3805   001954                     
  3806                           ; BSR set to: 0
  3807   001954  5164               	movf	___fladd@signs& (0+255),w,b
  3808   001956  1965               	xorwf	___fladd@aexp& (0+255),w,b
  3809   001958  B4D8               	btfsc	status,2,c
  3810   00195A  EFB1  F00C         	goto	u3791
  3811   00195E  EFB3  F00C         	goto	u3790
  3812   001962                     u3791:
  3813   001962  EFB4  F00C         	goto	l3004
  3814   001966                     u3790:
  3815   001966                     
  3816                           ; BSR set to: 0
  3817   001966  8D64               	bsf	___fladd@signs& (0+255),6,b
  3818   001968                     l3004:
  3819                           
  3820                           ; BSR set to: 0
  3821   001968  5047               	movf	(___fladd@a+3)^0,w,c
  3822   00196A  2447               	addwf	(___fladd@a+3)^0,w,c
  3823   00196C  6F65               	movwf	___fladd@aexp& (0+255),b
  3824   00196E                     
  3825                           ; BSR set to: 0
  3826   00196E  AE46               	btfss	(___fladd@a+2)^0,7,c
  3827   001970  EFBC  F00C         	goto	u3801
  3828   001974  EFBE  F00C         	goto	u3800
  3829   001978                     u3801:
  3830   001978  EFBF  F00C         	goto	l3010
  3831   00197C                     u3800:
  3832   00197C                     
  3833                           ; BSR set to: 0
  3834   00197C  8165               	bsf	___fladd@aexp& (0+255),0,b
  3835   00197E                     l3010:
  3836                           
  3837                           ; BSR set to: 0
  3838   00197E  5165               	movf	___fladd@aexp& (0+255),w,b
  3839   001980  B4D8               	btfsc	status,2,c
  3840   001982  EFC5  F00C         	goto	u3811
  3841   001986  EFC7  F00C         	goto	u3810
  3842   00198A                     u3811:
  3843   00198A  EFDC  F00C         	goto	l3020
  3844   00198E                     u3810:
  3845   00198E                     
  3846                           ; BSR set to: 0
  3847   00198E  2965               	incf	___fladd@aexp& (0+255),w,b
  3848   001990  A4D8               	btfss	status,2,c
  3849   001992  EFCD  F00C         	goto	u3821
  3850   001996  EFCF  F00C         	goto	u3820
  3851   00199A                     u3821:
  3852   00199A  EFD7  F00C         	goto	l3016
  3853   00199E                     u3820:
  3854   00199E                     
  3855                           ; BSR set to: 0
  3856   00199E  0E00               	movlw	0
  3857   0019A0  6E44               	movwf	___fladd@a^0,c
  3858   0019A2  0E00               	movlw	0
  3859   0019A4  6E45               	movwf	(___fladd@a+1)^0,c
  3860   0019A6  0E00               	movlw	0
  3861   0019A8  6E46               	movwf	(___fladd@a+2)^0,c
  3862   0019AA  0E00               	movlw	0
  3863   0019AC  6E47               	movwf	(___fladd@a+3)^0,c
  3864   0019AE                     l3016:
  3865                           
  3866                           ; BSR set to: 0
  3867   0019AE  8E46               	bsf	(___fladd@a+2)^0,7,c
  3868   0019B0                     
  3869                           ; BSR set to: 0
  3870   0019B0  0E00               	movlw	0
  3871   0019B2  6E47               	movwf	(___fladd@a+3)^0,c
  3872   0019B4  EFE4  F00C         	goto	l3022
  3873   0019B8                     l3020:
  3874                           
  3875                           ; BSR set to: 0
  3876   0019B8  0E00               	movlw	0
  3877   0019BA  6E44               	movwf	___fladd@a^0,c
  3878   0019BC  0E00               	movlw	0
  3879   0019BE  6E45               	movwf	(___fladd@a+1)^0,c
  3880   0019C0  0E00               	movlw	0
  3881   0019C2  6E46               	movwf	(___fladd@a+2)^0,c
  3882   0019C4  0E00               	movlw	0
  3883   0019C6  6E47               	movwf	(___fladd@a+3)^0,c
  3884   0019C8                     l3022:
  3885                           
  3886                           ; BSR set to: 0
  3887   0019C8  5166               	movf	___fladd@bexp& (0+255),w,b
  3888   0019CA  5D65               	subwf	___fladd@aexp& (0+255),w,b
  3889   0019CC  B0D8               	btfsc	status,0,c
  3890   0019CE  EFEB  F00C         	goto	u3831
  3891   0019D2  EFED  F00C         	goto	u3830
  3892   0019D6                     u3831:
  3893   0019D6  EF14  F00D         	goto	l3058
  3894   0019DA                     u3830:
  3895   0019DA                     
  3896                           ; BSR set to: 0
  3897   0019DA  AD64               	btfss	___fladd@signs& (0+255),6,b
  3898   0019DC  EFF2  F00C         	goto	u3841
  3899   0019E0  EFF4  F00C         	goto	u3840
  3900   0019E4                     u3841:
  3901   0019E4  EFF6  F00C         	goto	l3028
  3902   0019E8                     u3840:
  3903   0019E8                     
  3904                           ; BSR set to: 0
  3905   0019E8  0E80               	movlw	128
  3906   0019EA  1B64               	xorwf	___fladd@signs& (0+255),f,b
  3907   0019EC                     l3028:
  3908                           
  3909                           ; BSR set to: 0
  3910   0019EC  C066  F067         	movff	___fladd@bexp,___fladd@grs
  3911   0019F0                     
  3912                           ; BSR set to: 0
  3913   0019F0  C065  F066         	movff	___fladd@aexp,___fladd@bexp
  3914   0019F4                     
  3915                           ; BSR set to: 0
  3916   0019F4  C067  F065         	movff	___fladd@grs,___fladd@aexp
  3917   0019F8                     
  3918                           ; BSR set to: 0
  3919   0019F8  C040  F067         	movff	___fladd@b,___fladd@grs
  3920   0019FC                     
  3921                           ; BSR set to: 0
  3922   0019FC  C044  F040         	movff	___fladd@a,___fladd@b
  3923   001A00                     
  3924                           ; BSR set to: 0
  3925   001A00  C067  F044         	movff	___fladd@grs,___fladd@a
  3926   001A04                     
  3927                           ; BSR set to: 0
  3928   001A04  C041  F067         	movff	___fladd@b+1,___fladd@grs
  3929   001A08                     
  3930                           ; BSR set to: 0
  3931   001A08  C045  F041         	movff	___fladd@a+1,___fladd@b+1
  3932   001A0C                     
  3933                           ; BSR set to: 0
  3934   001A0C  C067  F045         	movff	___fladd@grs,___fladd@a+1
  3935   001A10                     
  3936                           ; BSR set to: 0
  3937   001A10  C042  F067         	movff	___fladd@b+2,___fladd@grs
  3938   001A14                     
  3939                           ; BSR set to: 0
  3940   001A14  C046  F042         	movff	___fladd@a+2,___fladd@b+2
  3941   001A18                     
  3942                           ; BSR set to: 0
  3943   001A18  C067  F046         	movff	___fladd@grs,___fladd@a+2
  3944   001A1C                     
  3945                           ; BSR set to: 0
  3946   001A1C  C043  F067         	movff	___fladd@b+3,___fladd@grs
  3947   001A20                     
  3948                           ; BSR set to: 0
  3949   001A20  C047  F043         	movff	___fladd@a+3,___fladd@b+3
  3950   001A24                     
  3951                           ; BSR set to: 0
  3952   001A24  C067  F047         	movff	___fladd@grs,___fladd@a+3
  3953   001A28                     l3058:
  3954                           
  3955                           ; BSR set to: 0
  3956   001A28  0E00               	movlw	0
  3957   001A2A  6F67               	movwf	___fladd@grs& (0+255),b
  3958   001A2C                     
  3959                           ; BSR set to: 0
  3960   001A2C  5166               	movf	___fladd@bexp& (0+255),w,b
  3961   001A2E  C065  F060         	movff	___fladd@aexp,??___fladd
  3962   001A32  6B61               	clrf	(??___fladd+1)& (0+255),b
  3963   001A34  5F60               	subwf	??___fladd& (0+255),f,b
  3964   001A36  0E00               	movlw	0
  3965   001A38  5B61               	subwfb	(??___fladd+1)& (0+255),f,b
  3966   001A3A  BF61               	btfsc	(??___fladd+1)& (0+255),7,b
  3967   001A3C  EF29  F00D         	goto	u3851
  3968   001A40  5161               	movf	(??___fladd+1)& (0+255),w,b
  3969   001A42  E109               	bnz	u3850
  3970   001A44  0E1A               	movlw	26
  3971   001A46  5D60               	subwf	??___fladd& (0+255),w,b
  3972   001A48  A0D8               	btfss	status,0,c
  3973   001A4A  EF29  F00D         	goto	u3851
  3974   001A4E  EF2B  F00D         	goto	u3850
  3975   001A52                     u3851:
  3976   001A52  EF62  F00D         	goto	l737
  3977   001A56                     u3850:
  3978   001A56                     
  3979                           ; BSR set to: 0
  3980   001A56  5040               	movf	___fladd@b^0,w,c
  3981   001A58  1041               	iorwf	(___fladd@b+1)^0,w,c
  3982   001A5A  1042               	iorwf	(___fladd@b+2)^0,w,c
  3983   001A5C  1043               	iorwf	(___fladd@b+3)^0,w,c
  3984   001A5E  A4D8               	btfss	status,2,c
  3985   001A60  EF34  F00D         	goto	u3861
  3986   001A64  EF37  F00D         	goto	u3860
  3987   001A68                     u3861:
  3988   001A68  0E01               	movlw	1
  3989   001A6A  EF38  F00D         	goto	u3870
  3990   001A6E                     u3860:
  3991   001A6E  0E00               	movlw	0
  3992   001A70                     u3870:
  3993   001A70  6F67               	movwf	___fladd@grs& (0+255),b
  3994   001A72                     
  3995                           ; BSR set to: 0
  3996   001A72  0E00               	movlw	0
  3997   001A74  6E40               	movwf	___fladd@b^0,c
  3998   001A76  0E00               	movlw	0
  3999   001A78  6E41               	movwf	(___fladd@b+1)^0,c
  4000   001A7A  0E00               	movlw	0
  4001   001A7C  6E42               	movwf	(___fladd@b+2)^0,c
  4002   001A7E  0E00               	movlw	0
  4003   001A80  6E43               	movwf	(___fladd@b+3)^0,c
  4004   001A82                     
  4005                           ; BSR set to: 0
  4006   001A82  C065  F066         	movff	___fladd@aexp,___fladd@bexp
  4007   001A86  EF6B  F00D         	goto	l736
  4008   001A8A                     l738:
  4009                           
  4010                           ; BSR set to: 0
  4011   001A8A  A167               	btfss	___fladd@grs& (0+255),0,b
  4012   001A8C  EF4A  F00D         	goto	u3881
  4013   001A90  EF4C  F00D         	goto	u3880
  4014   001A94                     u3881:
  4015   001A94  EF52  F00D         	goto	l3070
  4016   001A98                     u3880:
  4017   001A98                     
  4018                           ; BSR set to: 0
  4019   001A98  90D8               	bcf	status,0,c
  4020   001A9A  3167               	rrcf	___fladd@grs& (0+255),w,b
  4021   001A9C  0901               	iorlw	1
  4022   001A9E  6F67               	movwf	___fladd@grs& (0+255),b
  4023   001AA0  EF54  F00D         	goto	l3072
  4024   001AA4                     l3070:
  4025                           
  4026                           ; BSR set to: 0
  4027   001AA4  90D8               	bcf	status,0,c
  4028   001AA6  3367               	rrcf	___fladd@grs& (0+255),f,b
  4029   001AA8                     l3072:
  4030                           
  4031                           ; BSR set to: 0
  4032   001AA8  A040               	btfss	___fladd@b^0,0,c
  4033   001AAA  EF59  F00D         	goto	u3891
  4034   001AAE  EF5B  F00D         	goto	u3890
  4035   001AB2                     u3891:
  4036   001AB2  EF5C  F00D         	goto	l3076
  4037   001AB6                     u3890:
  4038   001AB6                     
  4039                           ; BSR set to: 0
  4040   001AB6  8F67               	bsf	___fladd@grs& (0+255),7,b
  4041   001AB8                     l3076:
  4042                           
  4043                           ; BSR set to: 0
  4044   001AB8  3443               	rlcf	(___fladd@b+3)^0,w,c
  4045   001ABA  3243               	rrcf	(___fladd@b+3)^0,f,c
  4046   001ABC  3242               	rrcf	(___fladd@b+2)^0,f,c
  4047   001ABE  3241               	rrcf	(___fladd@b+1)^0,f,c
  4048   001AC0  3240               	rrcf	___fladd@b^0,f,c
  4049   001AC2                     
  4050                           ; BSR set to: 0
  4051   001AC2  2B66               	incf	___fladd@bexp& (0+255),f,b
  4052   001AC4                     l737:
  4053                           
  4054                           ; BSR set to: 0
  4055   001AC4  5165               	movf	___fladd@aexp& (0+255),w,b
  4056   001AC6  5D66               	subwf	___fladd@bexp& (0+255),w,b
  4057   001AC8  A0D8               	btfss	status,0,c
  4058   001ACA  EF69  F00D         	goto	u3901
  4059   001ACE  EF6B  F00D         	goto	u3900
  4060   001AD2                     u3901:
  4061   001AD2  EF45  F00D         	goto	l738
  4062   001AD6                     u3900:
  4063   001AD6                     l736:
  4064                           
  4065                           ; BSR set to: 0
  4066   001AD6  BD64               	btfsc	___fladd@signs& (0+255),6,b
  4067   001AD8  EF70  F00D         	goto	u3911
  4068   001ADC  EF72  F00D         	goto	u3910
  4069   001AE0                     u3911:
  4070   001AE0  EFB2  F00D         	goto	l3104
  4071   001AE4                     u3910:
  4072   001AE4                     
  4073                           ; BSR set to: 0
  4074   001AE4  5166               	movf	___fladd@bexp& (0+255),w,b
  4075   001AE6  A4D8               	btfss	status,2,c
  4076   001AE8  EF78  F00D         	goto	u3921
  4077   001AEC  EF7A  F00D         	goto	u3920
  4078   001AF0                     u3921:
  4079   001AF0  EF84  F00D         	goto	l3086
  4080   001AF4                     u3920:
  4081   001AF4                     
  4082                           ; BSR set to: 0
  4083   001AF4  0E00               	movlw	0
  4084   001AF6  6E40               	movwf	?___fladd^0,c
  4085   001AF8  0E00               	movlw	0
  4086   001AFA  6E41               	movwf	(?___fladd+1)^0,c
  4087   001AFC  0E00               	movlw	0
  4088   001AFE  6E42               	movwf	(?___fladd+2)^0,c
  4089   001B00  0E00               	movlw	0
  4090   001B02  6E43               	movwf	(?___fladd+3)^0,c
  4091   001B04  EFD3  F00E         	goto	l745
  4092   001B08                     l3086:
  4093                           
  4094                           ; BSR set to: 0
  4095   001B08  5044               	movf	___fladd@a^0,w,c
  4096   001B0A  2640               	addwf	___fladd@b^0,f,c
  4097   001B0C  5045               	movf	(___fladd@a+1)^0,w,c
  4098   001B0E  2241               	addwfc	(___fladd@b+1)^0,f,c
  4099   001B10  5046               	movf	(___fladd@a+2)^0,w,c
  4100   001B12  2242               	addwfc	(___fladd@b+2)^0,f,c
  4101   001B14  5047               	movf	(___fladd@a+3)^0,w,c
  4102   001B16  2243               	addwfc	(___fladd@b+3)^0,f,c
  4103   001B18                     
  4104                           ; BSR set to: 0
  4105   001B18  A043               	btfss	(___fladd@b+3)^0,0,c
  4106   001B1A  EF91  F00D         	goto	u3931
  4107   001B1E  EF93  F00D         	goto	u3930
  4108   001B22                     u3931:
  4109   001B22  EF3F  F00E         	goto	l3140
  4110   001B26                     u3930:
  4111   001B26                     
  4112                           ; BSR set to: 0
  4113   001B26  A167               	btfss	___fladd@grs& (0+255),0,b
  4114   001B28  EF98  F00D         	goto	u3941
  4115   001B2C  EF9A  F00D         	goto	u3940
  4116   001B30                     u3941:
  4117   001B30  EFA0  F00D         	goto	l3094
  4118   001B34                     u3940:
  4119   001B34                     
  4120                           ; BSR set to: 0
  4121   001B34  90D8               	bcf	status,0,c
  4122   001B36  3167               	rrcf	___fladd@grs& (0+255),w,b
  4123   001B38  0901               	iorlw	1
  4124   001B3A  6F67               	movwf	___fladd@grs& (0+255),b
  4125   001B3C  EFA2  F00D         	goto	l3096
  4126   001B40                     l3094:
  4127                           
  4128                           ; BSR set to: 0
  4129   001B40  90D8               	bcf	status,0,c
  4130   001B42  3367               	rrcf	___fladd@grs& (0+255),f,b
  4131   001B44                     l3096:
  4132                           
  4133                           ; BSR set to: 0
  4134   001B44  A040               	btfss	___fladd@b^0,0,c
  4135   001B46  EFA7  F00D         	goto	u3951
  4136   001B4A  EFA9  F00D         	goto	u3950
  4137   001B4E                     u3951:
  4138   001B4E  EFAA  F00D         	goto	l3100
  4139   001B52                     u3950:
  4140   001B52                     
  4141                           ; BSR set to: 0
  4142   001B52  8F67               	bsf	___fladd@grs& (0+255),7,b
  4143   001B54                     l3100:
  4144                           
  4145                           ; BSR set to: 0
  4146   001B54  3443               	rlcf	(___fladd@b+3)^0,w,c
  4147   001B56  3243               	rrcf	(___fladd@b+3)^0,f,c
  4148   001B58  3242               	rrcf	(___fladd@b+2)^0,f,c
  4149   001B5A  3241               	rrcf	(___fladd@b+1)^0,f,c
  4150   001B5C  3240               	rrcf	___fladd@b^0,f,c
  4151   001B5E                     
  4152                           ; BSR set to: 0
  4153   001B5E  2B66               	incf	___fladd@bexp& (0+255),f,b
  4154   001B60  EF3F  F00E         	goto	l3140
  4155   001B64                     l3104:
  4156                           
  4157                           ; BSR set to: 0
  4158   001B64  5044               	movf	___fladd@a^0,w,c
  4159   001B66  5C40               	subwf	___fladd@b^0,w,c
  4160   001B68  5045               	movf	(___fladd@a+1)^0,w,c
  4161   001B6A  5841               	subwfb	(___fladd@b+1)^0,w,c
  4162   001B6C  5046               	movf	(___fladd@a+2)^0,w,c
  4163   001B6E  5842               	subwfb	(___fladd@b+2)^0,w,c
  4164   001B70  5043               	movf	(___fladd@b+3)^0,w,c
  4165   001B72  0A80               	xorlw	128
  4166   001B74  6F60               	movwf	??___fladd& (0+255),b
  4167   001B76  5047               	movf	(___fladd@a+3)^0,w,c
  4168   001B78  0A80               	xorlw	128
  4169   001B7A  5960               	subwfb	??___fladd& (0+255),w,b
  4170   001B7C  B0D8               	btfsc	status,0,c
  4171   001B7E  EFC3  F00D         	goto	u3961
  4172   001B82  EFC5  F00D         	goto	u3960
  4173   001B86                     u3961:
  4174   001B86  EFF0  F00D         	goto	l3114
  4175   001B8A                     u3960:
  4176   001B8A                     
  4177                           ; BSR set to: 0
  4178   001B8A  5040               	movf	___fladd@b^0,w,c
  4179   001B8C  5C44               	subwf	___fladd@a^0,w,c
  4180   001B8E  6F60               	movwf	??___fladd& (0+255),b
  4181   001B90  5041               	movf	(___fladd@b+1)^0,w,c
  4182   001B92  5845               	subwfb	(___fladd@a+1)^0,w,c
  4183   001B94  6F61               	movwf	(??___fladd+1)& (0+255),b
  4184   001B96  5042               	movf	(___fladd@b+2)^0,w,c
  4185   001B98  5846               	subwfb	(___fladd@a+2)^0,w,c
  4186   001B9A  6F62               	movwf	(??___fladd+2)& (0+255),b
  4187   001B9C  5043               	movf	(___fladd@b+3)^0,w,c
  4188   001B9E  5847               	subwfb	(___fladd@a+3)^0,w,c
  4189   001BA0  6F63               	movwf	(??___fladd+3)& (0+255),b
  4190   001BA2  0EFF               	movlw	255
  4191   001BA4  2560               	addwf	??___fladd& (0+255),w,b
  4192   001BA6  6E40               	movwf	___fladd@b^0,c
  4193   001BA8  0EFF               	movlw	255
  4194   001BAA  2161               	addwfc	(??___fladd+1)& (0+255),w,b
  4195   001BAC  6E41               	movwf	(___fladd@b+1)^0,c
  4196   001BAE  0EFF               	movlw	255
  4197   001BB0  2162               	addwfc	(??___fladd+2)& (0+255),w,b
  4198   001BB2  6E42               	movwf	(___fladd@b+2)^0,c
  4199   001BB4  0EFF               	movlw	255
  4200   001BB6  2163               	addwfc	(??___fladd+3)& (0+255),w,b
  4201   001BB8  6E43               	movwf	(___fladd@b+3)^0,c
  4202   001BBA  0E80               	movlw	128
  4203   001BBC  1B64               	xorwf	___fladd@signs& (0+255),f,b
  4204   001BBE                     
  4205                           ; BSR set to: 0
  4206   001BBE  6D67               	negf	___fladd@grs& (0+255),b
  4207   001BC0                     
  4208                           ; BSR set to: 0
  4209   001BC0  5167               	movf	___fladd@grs& (0+255),w,b
  4210   001BC2  A4D8               	btfss	status,2,c
  4211   001BC4  EFE6  F00D         	goto	u3971
  4212   001BC8  EFE8  F00D         	goto	u3970
  4213   001BCC                     u3971:
  4214   001BCC  EFF8  F00D         	goto	l753
  4215   001BD0                     u3970:
  4216   001BD0                     
  4217                           ; BSR set to: 0
  4218   001BD0  0E01               	movlw	1
  4219   001BD2  2640               	addwf	___fladd@b^0,f,c
  4220   001BD4  0E00               	movlw	0
  4221   001BD6  2241               	addwfc	(___fladd@b+1)^0,f,c
  4222   001BD8  2242               	addwfc	(___fladd@b+2)^0,f,c
  4223   001BDA  2243               	addwfc	(___fladd@b+3)^0,f,c
  4224   001BDC  EFF8  F00D         	goto	l753
  4225   001BE0                     l3114:
  4226                           
  4227                           ; BSR set to: 0
  4228   001BE0  5044               	movf	___fladd@a^0,w,c
  4229   001BE2  5E40               	subwf	___fladd@b^0,f,c
  4230   001BE4  5045               	movf	(___fladd@a+1)^0,w,c
  4231   001BE6  5A41               	subwfb	(___fladd@b+1)^0,f,c
  4232   001BE8  5046               	movf	(___fladd@a+2)^0,w,c
  4233   001BEA  5A42               	subwfb	(___fladd@b+2)^0,f,c
  4234   001BEC  5047               	movf	(___fladd@a+3)^0,w,c
  4235   001BEE  5A43               	subwfb	(___fladd@b+3)^0,f,c
  4236   001BF0                     l753:
  4237                           
  4238                           ; BSR set to: 0
  4239   001BF0  5040               	movf	___fladd@b^0,w,c
  4240   001BF2  1041               	iorwf	(___fladd@b+1)^0,w,c
  4241   001BF4  1042               	iorwf	(___fladd@b+2)^0,w,c
  4242   001BF6  1043               	iorwf	(___fladd@b+3)^0,w,c
  4243   001BF8  A4D8               	btfss	status,2,c
  4244   001BFA  EF01  F00E         	goto	u3981
  4245   001BFE  EF03  F00E         	goto	u3980
  4246   001C02                     u3981:
  4247   001C02  EF38  F00E         	goto	l3138
  4248   001C06                     u3980:
  4249   001C06                     
  4250                           ; BSR set to: 0
  4251   001C06  5167               	movf	___fladd@grs& (0+255),w,b
  4252   001C08  A4D8               	btfss	status,2,c
  4253   001C0A  EF09  F00E         	goto	u3991
  4254   001C0E  EF0B  F00E         	goto	u3990
  4255   001C12                     u3991:
  4256   001C12  EF38  F00E         	goto	l3138
  4257   001C16                     u3990:
  4258   001C16                     
  4259                           ; BSR set to: 0
  4260   001C16  0E00               	movlw	0
  4261   001C18  6E40               	movwf	?___fladd^0,c
  4262   001C1A  0E00               	movlw	0
  4263   001C1C  6E41               	movwf	(?___fladd+1)^0,c
  4264   001C1E  0E00               	movlw	0
  4265   001C20  6E42               	movwf	(?___fladd+2)^0,c
  4266   001C22  0E00               	movlw	0
  4267   001C24  6E43               	movwf	(?___fladd+3)^0,c
  4268   001C26  EFD3  F00E         	goto	l745
  4269   001C2A                     l3122:
  4270                           
  4271                           ; BSR set to: 0
  4272   001C2A  90D8               	bcf	status,0,c
  4273   001C2C  3640               	rlcf	___fladd@b^0,f,c
  4274   001C2E  3641               	rlcf	(___fladd@b+1)^0,f,c
  4275   001C30  3642               	rlcf	(___fladd@b+2)^0,f,c
  4276   001C32  3643               	rlcf	(___fladd@b+3)^0,f,c
  4277   001C34                     
  4278                           ; BSR set to: 0
  4279   001C34  AF67               	btfss	___fladd@grs& (0+255),7,b
  4280   001C36  EF1F  F00E         	goto	u4001
  4281   001C3A  EF21  F00E         	goto	u4000
  4282   001C3E                     u4001:
  4283   001C3E  EF22  F00E         	goto	l3128
  4284   001C42                     u4000:
  4285   001C42                     
  4286                           ; BSR set to: 0
  4287   001C42  8040               	bsf	___fladd@b^0,0,c
  4288   001C44                     l3128:
  4289                           
  4290                           ; BSR set to: 0
  4291   001C44  A167               	btfss	___fladd@grs& (0+255),0,b
  4292   001C46  EF27  F00E         	goto	u4011
  4293   001C4A  EF29  F00E         	goto	u4010
  4294   001C4E                     u4011:
  4295   001C4E  EF2D  F00E         	goto	l3132
  4296   001C52                     u4010:
  4297   001C52                     
  4298                           ; BSR set to: 0
  4299   001C52  80D8               	bsf	status,0,c
  4300   001C54  3767               	rlcf	___fladd@grs& (0+255),f,b
  4301   001C56  EF2F  F00E         	goto	l3134
  4302   001C5A                     l3132:
  4303                           
  4304                           ; BSR set to: 0
  4305   001C5A  90D8               	bcf	status,0,c
  4306   001C5C  3767               	rlcf	___fladd@grs& (0+255),f,b
  4307   001C5E                     l3134:
  4308                           
  4309                           ; BSR set to: 0
  4310   001C5E  5166               	movf	___fladd@bexp& (0+255),w,b
  4311   001C60  B4D8               	btfsc	status,2,c
  4312   001C62  EF35  F00E         	goto	u4021
  4313   001C66  EF37  F00E         	goto	u4020
  4314   001C6A                     u4021:
  4315   001C6A  EF38  F00E         	goto	l3138
  4316   001C6E                     u4020:
  4317   001C6E                     
  4318                           ; BSR set to: 0
  4319   001C6E  0766               	decf	___fladd@bexp& (0+255),f,b
  4320   001C70                     l3138:
  4321                           
  4322                           ; BSR set to: 0
  4323   001C70  AE42               	btfss	(___fladd@b+2)^0,7,c
  4324   001C72  EF3D  F00E         	goto	u4031
  4325   001C76  EF3F  F00E         	goto	u4030
  4326   001C7A                     u4031:
  4327   001C7A  EF15  F00E         	goto	l3122
  4328   001C7E                     u4030:
  4329   001C7E                     l3140:
  4330                           
  4331                           ; BSR set to: 0
  4332   001C7E  0E00               	movlw	0
  4333   001C80  6F65               	movwf	___fladd@aexp& (0+255),b
  4334   001C82                     
  4335                           ; BSR set to: 0
  4336   001C82  AF67               	btfss	___fladd@grs& (0+255),7,b
  4337   001C84  EF46  F00E         	goto	u4041
  4338   001C88  EF48  F00E         	goto	u4040
  4339   001C8C                     u4041:
  4340   001C8C  EF60  F00E         	goto	l762
  4341   001C90                     u4040:
  4342   001C90                     
  4343                           ; BSR set to: 0
  4344   001C90  C067  F060         	movff	___fladd@grs,??___fladd
  4345   001C94  0E7F               	movlw	127
  4346   001C96  1760               	andwf	??___fladd& (0+255),f,b
  4347   001C98  B4D8               	btfsc	status,2,c
  4348   001C9A  EF51  F00E         	goto	u4051
  4349   001C9E  EF53  F00E         	goto	u4050
  4350   001CA2                     u4051:
  4351   001CA2  EF57  F00E         	goto	l763
  4352   001CA6                     u4050:
  4353   001CA6                     l3146:
  4354                           
  4355                           ; BSR set to: 0
  4356   001CA6  0E01               	movlw	1
  4357   001CA8  6F65               	movwf	___fladd@aexp& (0+255),b
  4358   001CAA  EF60  F00E         	goto	l762
  4359   001CAE                     l763:
  4360                           
  4361                           ; BSR set to: 0
  4362   001CAE  A040               	btfss	___fladd@b^0,0,c
  4363   001CB0  EF5C  F00E         	goto	u4061
  4364   001CB4  EF5E  F00E         	goto	u4060
  4365   001CB8                     u4061:
  4366   001CB8  EF60  F00E         	goto	l762
  4367   001CBC                     u4060:
  4368   001CBC  EF53  F00E         	goto	l3146
  4369   001CC0                     l762:
  4370                           
  4371                           ; BSR set to: 0
  4372   001CC0  5165               	movf	___fladd@aexp& (0+255),w,b
  4373   001CC2  B4D8               	btfsc	status,2,c
  4374   001CC4  EF66  F00E         	goto	u4071
  4375   001CC8  EF68  F00E         	goto	u4070
  4376   001CCC                     u4071:
  4377   001CCC  EF93  F00E         	goto	l3158
  4378   001CD0                     u4070:
  4379   001CD0                     
  4380                           ; BSR set to: 0
  4381   001CD0  0E01               	movlw	1
  4382   001CD2  2640               	addwf	___fladd@b^0,f,c
  4383   001CD4  0E00               	movlw	0
  4384   001CD6  2241               	addwfc	(___fladd@b+1)^0,f,c
  4385   001CD8  2242               	addwfc	(___fladd@b+2)^0,f,c
  4386   001CDA  2243               	addwfc	(___fladd@b+3)^0,f,c
  4387   001CDC                     
  4388                           ; BSR set to: 0
  4389   001CDC  A043               	btfss	(___fladd@b+3)^0,0,c
  4390   001CDE  EF73  F00E         	goto	u4081
  4391   001CE2  EF75  F00E         	goto	u4080
  4392   001CE6                     u4081:
  4393   001CE6  EF93  F00E         	goto	l3158
  4394   001CEA                     u4080:
  4395   001CEA                     
  4396                           ; BSR set to: 0
  4397   001CEA  C040  F060         	movff	___fladd@b,??___fladd
  4398   001CEE  C041  F061         	movff	___fladd@b+1,??___fladd+1
  4399   001CF2  C042  F062         	movff	___fladd@b+2,??___fladd+2
  4400   001CF6  C043  F063         	movff	___fladd@b+3,??___fladd+3
  4401   001CFA  3563               	rlcf	(??___fladd+3)& (0+255),w,b
  4402   001CFC  3363               	rrcf	(??___fladd+3)& (0+255),f,b
  4403   001CFE  3362               	rrcf	(??___fladd+2)& (0+255),f,b
  4404   001D00  3361               	rrcf	(??___fladd+1)& (0+255),f,b
  4405   001D02  3360               	rrcf	??___fladd& (0+255),f,b
  4406   001D04  C060  F040         	movff	??___fladd,___fladd@b
  4407   001D08  C061  F041         	movff	??___fladd+1,___fladd@b+1
  4408   001D0C  C062  F042         	movff	??___fladd+2,___fladd@b+2
  4409   001D10  C063  F043         	movff	??___fladd+3,___fladd@b+3
  4410   001D14  2966               	incf	___fladd@bexp& (0+255),w,b
  4411   001D16  B4D8               	btfsc	status,2,c
  4412   001D18  EF90  F00E         	goto	u4091
  4413   001D1C  EF92  F00E         	goto	u4090
  4414   001D20                     u4091:
  4415   001D20  EF93  F00E         	goto	l3158
  4416   001D24                     u4090:
  4417   001D24                     
  4418                           ; BSR set to: 0
  4419   001D24  2B66               	incf	___fladd@bexp& (0+255),f,b
  4420   001D26                     l3158:
  4421                           
  4422                           ; BSR set to: 0
  4423   001D26  2966               	incf	___fladd@bexp& (0+255),w,b
  4424   001D28  B4D8               	btfsc	status,2,c
  4425   001D2A  EF99  F00E         	goto	u4101
  4426   001D2E  EF9B  F00E         	goto	u4100
  4427   001D32                     u4101:
  4428   001D32  EFA3  F00E         	goto	l3162
  4429   001D36                     u4100:
  4430   001D36                     
  4431                           ; BSR set to: 0
  4432   001D36  5166               	movf	___fladd@bexp& (0+255),w,b
  4433   001D38  A4D8               	btfss	status,2,c
  4434   001D3A  EFA1  F00E         	goto	u4111
  4435   001D3E  EFA3  F00E         	goto	u4110
  4436   001D42                     u4111:
  4437   001D42  EFB5  F00E         	goto	l3166
  4438   001D46                     u4110:
  4439   001D46                     l3162:
  4440                           
  4441                           ; BSR set to: 0
  4442   001D46  0E00               	movlw	0
  4443   001D48  6E40               	movwf	___fladd@b^0,c
  4444   001D4A  0E00               	movlw	0
  4445   001D4C  6E41               	movwf	(___fladd@b+1)^0,c
  4446   001D4E  0E00               	movlw	0
  4447   001D50  6E42               	movwf	(___fladd@b+2)^0,c
  4448   001D52  0E00               	movlw	0
  4449   001D54  6E43               	movwf	(___fladd@b+3)^0,c
  4450   001D56  5166               	movf	___fladd@bexp& (0+255),w,b
  4451   001D58  A4D8               	btfss	status,2,c
  4452   001D5A  EFB1  F00E         	goto	u4121
  4453   001D5E  EFB3  F00E         	goto	u4120
  4454   001D62                     u4121:
  4455   001D62  EFB5  F00E         	goto	l3166
  4456   001D66                     u4120:
  4457   001D66                     
  4458                           ; BSR set to: 0
  4459   001D66  0E00               	movlw	0
  4460   001D68  6F64               	movwf	___fladd@signs& (0+255),b
  4461   001D6A                     l3166:
  4462                           
  4463                           ; BSR set to: 0
  4464   001D6A  A166               	btfss	___fladd@bexp& (0+255),0,b
  4465   001D6C  EFBA  F00E         	goto	u4131
  4466   001D70  EFBC  F00E         	goto	u4130
  4467   001D74                     u4131:
  4468   001D74  EFBF  F00E         	goto	l3170
  4469   001D78                     u4130:
  4470   001D78                     
  4471                           ; BSR set to: 0
  4472   001D78  8E42               	bsf	(___fladd@b+2)^0,7,c
  4473   001D7A  EFC0  F00E         	goto	l3172
  4474   001D7E                     l3170:
  4475                           
  4476                           ; BSR set to: 0
  4477   001D7E  9E42               	bcf	(___fladd@b+2)^0,7,c
  4478   001D80                     l3172:
  4479                           
  4480                           ; BSR set to: 0
  4481   001D80  90D8               	bcf	status,0,c
  4482   001D82  3166               	rrcf	___fladd@bexp& (0+255),w,b
  4483   001D84  6E43               	movwf	(___fladd@b+3)^0,c
  4484   001D86                     
  4485                           ; BSR set to: 0
  4486   001D86  AF64               	btfss	___fladd@signs& (0+255),7,b
  4487   001D88  EFC8  F00E         	goto	u4141
  4488   001D8C  EFCA  F00E         	goto	u4140
  4489   001D90                     u4141:
  4490   001D90  EFCB  F00E         	goto	l3178
  4491   001D94                     u4140:
  4492   001D94                     
  4493                           ; BSR set to: 0
  4494   001D94  8E43               	bsf	(___fladd@b+3)^0,7,c
  4495   001D96                     l3178:
  4496                           
  4497                           ; BSR set to: 0
  4498   001D96  C040  F040         	movff	___fladd@b,?___fladd
  4499   001D9A  C041  F041         	movff	___fladd@b+1,?___fladd+1
  4500   001D9E  C042  F042         	movff	___fladd@b+2,?___fladd+2
  4501   001DA2  C043  F043         	movff	___fladd@b+3,?___fladd+3
  4502   001DA6                     l745:
  4503                           
  4504                           ; BSR set to: 0
  4505   001DA6  0012               	return		;funcret
  4506   001DA8                     __end_of___fladd:
  4507                           	callstack 0
  4508                           
  4509 ;; *************** function ___flmul *****************
  4510 ;; Defined at:
  4511 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\sprcmul.c"
  4512 ;; Parameters:    Size  Location     Type
  4513 ;;  b               4   13[COMRAM] unsigned char 
  4514 ;;  a               4   17[COMRAM] unsigned char 
  4515 ;; Auto vars:     Size  Location     Type
  4516 ;;  prod            4   32[COMRAM] struct .
  4517 ;;  grs             4   26[COMRAM] unsigned long 
  4518 ;;  temp            2   36[COMRAM] struct .
  4519 ;;  bexp            1   31[COMRAM] unsigned char 
  4520 ;;  aexp            1   30[COMRAM] unsigned char 
  4521 ;;  sign            1   25[COMRAM] unsigned char 
  4522 ;; Return value:  Size  Location     Type
  4523 ;;                  4   13[COMRAM] unsigned char 
  4524 ;; Registers used:
  4525 ;;		wreg, status,2, status,0, prodl, prodh
  4526 ;; Tracked objects:
  4527 ;;		On entry : 0/0
  4528 ;;		On exit  : 0/0
  4529 ;;		Unchanged: 0/0
  4530 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4531 ;;      Params:         8       0       0       0       0       0       0       0       0
  4532 ;;      Locals:        13       0       0       0       0       0       0       0       0
  4533 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4534 ;;      Totals:        25       0       0       0       0       0       0       0       0
  4535 ;;Total ram usage:       25 bytes
  4536 ;; Hardware stack levels used: 1
  4537 ;; Hardware stack levels required when called: 4
  4538 ;; This function calls:
  4539 ;;		Nothing
  4540 ;; This function is called by:
  4541 ;;		_uart_init
  4542 ;; This function uses a non-reentrant model
  4543 ;;
  4544                           
  4545                           	psect	text13
  4546   001DA8                     __ptext13:
  4547                           	callstack 0
  4548   001DA8                     ___flmul:
  4549                           	callstack 25
  4550   001DA8  5011               	movf	(___flmul@b+3)^0,w,c
  4551   001DAA  0B80               	andlw	128
  4552   001DAC  6E1A               	movwf	___flmul@sign^0,c
  4553   001DAE  5011               	movf	(___flmul@b+3)^0,w,c
  4554   001DB0  2411               	addwf	(___flmul@b+3)^0,w,c
  4555   001DB2  6E20               	movwf	___flmul@bexp^0,c
  4556   001DB4  AE10               	btfss	(___flmul@b+2)^0,7,c
  4557   001DB6  EFDF  F00E         	goto	u2881
  4558   001DBA  EFE1  F00E         	goto	u2880
  4559   001DBE                     u2881:
  4560   001DBE  EFE2  F00E         	goto	l2478
  4561   001DC2                     u2880:
  4562   001DC2  8020               	bsf	___flmul@bexp^0,0,c
  4563   001DC4                     l2478:
  4564   001DC4  5020               	movf	___flmul@bexp^0,w,c
  4565   001DC6  B4D8               	btfsc	status,2,c
  4566   001DC8  EFE8  F00E         	goto	u2891
  4567   001DCC  EFEA  F00E         	goto	u2890
  4568   001DD0                     u2891:
  4569   001DD0  EFFD  F00E         	goto	l2486
  4570   001DD4                     u2890:
  4571   001DD4  2820               	incf	___flmul@bexp^0,w,c
  4572   001DD6  A4D8               	btfss	status,2,c
  4573   001DD8  EFF0  F00E         	goto	u2901
  4574   001DDC  EFF2  F00E         	goto	u2900
  4575   001DE0                     u2901:
  4576   001DE0  EFFA  F00E         	goto	l2484
  4577   001DE4                     u2900:
  4578   001DE4  0E00               	movlw	0
  4579   001DE6  6E0E               	movwf	___flmul@b^0,c
  4580   001DE8  0E00               	movlw	0
  4581   001DEA  6E0F               	movwf	(___flmul@b+1)^0,c
  4582   001DEC  0E00               	movlw	0
  4583   001DEE  6E10               	movwf	(___flmul@b+2)^0,c
  4584   001DF0  0E00               	movlw	0
  4585   001DF2  6E11               	movwf	(___flmul@b+3)^0,c
  4586   001DF4                     l2484:
  4587   001DF4  8E10               	bsf	(___flmul@b+2)^0,7,c
  4588   001DF6  EF05  F00F         	goto	l2488
  4589   001DFA                     l2486:
  4590   001DFA  0E00               	movlw	0
  4591   001DFC  6E0E               	movwf	___flmul@b^0,c
  4592   001DFE  0E00               	movlw	0
  4593   001E00  6E0F               	movwf	(___flmul@b+1)^0,c
  4594   001E02  0E00               	movlw	0
  4595   001E04  6E10               	movwf	(___flmul@b+2)^0,c
  4596   001E06  0E00               	movlw	0
  4597   001E08  6E11               	movwf	(___flmul@b+3)^0,c
  4598   001E0A                     l2488:
  4599   001E0A  5015               	movf	(___flmul@a+3)^0,w,c
  4600   001E0C  0B80               	andlw	128
  4601   001E0E  1A1A               	xorwf	___flmul@sign^0,f,c
  4602   001E10  5015               	movf	(___flmul@a+3)^0,w,c
  4603   001E12  2415               	addwf	(___flmul@a+3)^0,w,c
  4604   001E14  6E1F               	movwf	___flmul@aexp^0,c
  4605   001E16  AE14               	btfss	(___flmul@a+2)^0,7,c
  4606   001E18  EF10  F00F         	goto	u2911
  4607   001E1C  EF12  F00F         	goto	u2910
  4608   001E20                     u2911:
  4609   001E20  EF13  F00F         	goto	l2496
  4610   001E24                     u2910:
  4611   001E24  801F               	bsf	___flmul@aexp^0,0,c
  4612   001E26                     l2496:
  4613   001E26  501F               	movf	___flmul@aexp^0,w,c
  4614   001E28  B4D8               	btfsc	status,2,c
  4615   001E2A  EF19  F00F         	goto	u2921
  4616   001E2E  EF1B  F00F         	goto	u2920
  4617   001E32                     u2921:
  4618   001E32  EF2E  F00F         	goto	l2504
  4619   001E36                     u2920:
  4620   001E36  281F               	incf	___flmul@aexp^0,w,c
  4621   001E38  A4D8               	btfss	status,2,c
  4622   001E3A  EF21  F00F         	goto	u2931
  4623   001E3E  EF23  F00F         	goto	u2930
  4624   001E42                     u2931:
  4625   001E42  EF2B  F00F         	goto	l2502
  4626   001E46                     u2930:
  4627   001E46  0E00               	movlw	0
  4628   001E48  6E12               	movwf	___flmul@a^0,c
  4629   001E4A  0E00               	movlw	0
  4630   001E4C  6E13               	movwf	(___flmul@a+1)^0,c
  4631   001E4E  0E00               	movlw	0
  4632   001E50  6E14               	movwf	(___flmul@a+2)^0,c
  4633   001E52  0E00               	movlw	0
  4634   001E54  6E15               	movwf	(___flmul@a+3)^0,c
  4635   001E56                     l2502:
  4636   001E56  8E14               	bsf	(___flmul@a+2)^0,7,c
  4637   001E58  EF36  F00F         	goto	l822
  4638   001E5C                     l2504:
  4639   001E5C  0E00               	movlw	0
  4640   001E5E  6E12               	movwf	___flmul@a^0,c
  4641   001E60  0E00               	movlw	0
  4642   001E62  6E13               	movwf	(___flmul@a+1)^0,c
  4643   001E64  0E00               	movlw	0
  4644   001E66  6E14               	movwf	(___flmul@a+2)^0,c
  4645   001E68  0E00               	movlw	0
  4646   001E6A  6E15               	movwf	(___flmul@a+3)^0,c
  4647   001E6C                     l822:
  4648   001E6C  501F               	movf	___flmul@aexp^0,w,c
  4649   001E6E  B4D8               	btfsc	status,2,c
  4650   001E70  EF3C  F00F         	goto	u2941
  4651   001E74  EF3E  F00F         	goto	u2940
  4652   001E78                     u2941:
  4653   001E78  EF46  F00F         	goto	l2508
  4654   001E7C                     u2940:
  4655   001E7C  5020               	movf	___flmul@bexp^0,w,c
  4656   001E7E  A4D8               	btfss	status,2,c
  4657   001E80  EF44  F00F         	goto	u2951
  4658   001E84  EF46  F00F         	goto	u2950
  4659   001E88                     u2951:
  4660   001E88  EF50  F00F         	goto	l2512
  4661   001E8C                     u2950:
  4662   001E8C                     l2508:
  4663   001E8C  0E00               	movlw	0
  4664   001E8E  6E0E               	movwf	?___flmul^0,c
  4665   001E90  0E00               	movlw	0
  4666   001E92  6E0F               	movwf	(?___flmul+1)^0,c
  4667   001E94  0E00               	movlw	0
  4668   001E96  6E10               	movwf	(?___flmul+2)^0,c
  4669   001E98  0E00               	movlw	0
  4670   001E9A  6E11               	movwf	(?___flmul+3)^0,c
  4671   001E9C  EFE8  F010         	goto	l826
  4672   001EA0                     l2512:
  4673   001EA0  5014               	movf	(___flmul@a+2)^0,w,c
  4674   001EA2  020E               	mulwf	___flmul@b^0,c
  4675   001EA4  CFF3 F025          	movff	prodl,___flmul@temp
  4676   001EA8  CFF4 F026          	movff	prodh,___flmul@temp+1
  4677   001EAC  5025               	movf	___flmul@temp^0,w,c
  4678   001EAE  6E1B               	movwf	___flmul@grs^0,c
  4679   001EB0  6A1C               	clrf	(___flmul@grs+1)^0,c
  4680   001EB2  6A1D               	clrf	(___flmul@grs+2)^0,c
  4681   001EB4  6A1E               	clrf	(___flmul@grs+3)^0,c
  4682   001EB6  5026               	movf	(___flmul@temp+1)^0,w,c
  4683   001EB8  6E21               	movwf	___flmul@prod^0,c
  4684   001EBA  6A22               	clrf	(___flmul@prod+1)^0,c
  4685   001EBC  6A23               	clrf	(___flmul@prod+2)^0,c
  4686   001EBE  6A24               	clrf	(___flmul@prod+3)^0,c
  4687   001EC0  5013               	movf	(___flmul@a+1)^0,w,c
  4688   001EC2  020F               	mulwf	(___flmul@b+1)^0,c
  4689   001EC4  CFF3 F025          	movff	prodl,___flmul@temp
  4690   001EC8  CFF4 F026          	movff	prodh,___flmul@temp+1
  4691   001ECC  5025               	movf	___flmul@temp^0,w,c
  4692   001ECE  261B               	addwf	___flmul@grs^0,f,c
  4693   001ED0  0E00               	movlw	0
  4694   001ED2  221C               	addwfc	(___flmul@grs+1)^0,f,c
  4695   001ED4  221D               	addwfc	(___flmul@grs+2)^0,f,c
  4696   001ED6  221E               	addwfc	(___flmul@grs+3)^0,f,c
  4697   001ED8  5026               	movf	(___flmul@temp+1)^0,w,c
  4698   001EDA  2621               	addwf	___flmul@prod^0,f,c
  4699   001EDC  0E00               	movlw	0
  4700   001EDE  2222               	addwfc	(___flmul@prod+1)^0,f,c
  4701   001EE0  2223               	addwfc	(___flmul@prod+2)^0,f,c
  4702   001EE2  2224               	addwfc	(___flmul@prod+3)^0,f,c
  4703   001EE4  5012               	movf	___flmul@a^0,w,c
  4704   001EE6  0210               	mulwf	(___flmul@b+2)^0,c
  4705   001EE8  CFF3 F025          	movff	prodl,___flmul@temp
  4706   001EEC  CFF4 F026          	movff	prodh,___flmul@temp+1
  4707   001EF0  5025               	movf	___flmul@temp^0,w,c
  4708   001EF2  261B               	addwf	___flmul@grs^0,f,c
  4709   001EF4  0E00               	movlw	0
  4710   001EF6  221C               	addwfc	(___flmul@grs+1)^0,f,c
  4711   001EF8  221D               	addwfc	(___flmul@grs+2)^0,f,c
  4712   001EFA  221E               	addwfc	(___flmul@grs+3)^0,f,c
  4713   001EFC  5026               	movf	(___flmul@temp+1)^0,w,c
  4714   001EFE  2621               	addwf	___flmul@prod^0,f,c
  4715   001F00  0E00               	movlw	0
  4716   001F02  2222               	addwfc	(___flmul@prod+1)^0,f,c
  4717   001F04  2223               	addwfc	(___flmul@prod+2)^0,f,c
  4718   001F06  2224               	addwfc	(___flmul@prod+3)^0,f,c
  4719   001F08  C01D  F01E         	movff	___flmul@grs+2,___flmul@grs+3
  4720   001F0C  C01C  F01D         	movff	___flmul@grs+1,___flmul@grs+2
  4721   001F10  C01B  F01C         	movff	___flmul@grs,___flmul@grs+1
  4722   001F14  6A1B               	clrf	___flmul@grs^0,c
  4723   001F16  5012               	movf	___flmul@a^0,w,c
  4724   001F18  020F               	mulwf	(___flmul@b+1)^0,c
  4725   001F1A  CFF3 F025          	movff	prodl,___flmul@temp
  4726   001F1E  CFF4 F026          	movff	prodh,___flmul@temp+1
  4727   001F22  5025               	movf	___flmul@temp^0,w,c
  4728   001F24  261B               	addwf	___flmul@grs^0,f,c
  4729   001F26  5026               	movf	(___flmul@temp+1)^0,w,c
  4730   001F28  221C               	addwfc	(___flmul@grs+1)^0,f,c
  4731   001F2A  0E00               	movlw	0
  4732   001F2C  221D               	addwfc	(___flmul@grs+2)^0,f,c
  4733   001F2E  0E00               	movlw	0
  4734   001F30  221E               	addwfc	(___flmul@grs+3)^0,f,c
  4735   001F32  5013               	movf	(___flmul@a+1)^0,w,c
  4736   001F34  020E               	mulwf	___flmul@b^0,c
  4737   001F36  CFF3 F025          	movff	prodl,___flmul@temp
  4738   001F3A  CFF4 F026          	movff	prodh,___flmul@temp+1
  4739   001F3E  5025               	movf	___flmul@temp^0,w,c
  4740   001F40  261B               	addwf	___flmul@grs^0,f,c
  4741   001F42  5026               	movf	(___flmul@temp+1)^0,w,c
  4742   001F44  221C               	addwfc	(___flmul@grs+1)^0,f,c
  4743   001F46  0E00               	movlw	0
  4744   001F48  221D               	addwfc	(___flmul@grs+2)^0,f,c
  4745   001F4A  0E00               	movlw	0
  4746   001F4C  221E               	addwfc	(___flmul@grs+3)^0,f,c
  4747   001F4E  C01D  F01E         	movff	___flmul@grs+2,___flmul@grs+3
  4748   001F52  C01C  F01D         	movff	___flmul@grs+1,___flmul@grs+2
  4749   001F56  C01B  F01C         	movff	___flmul@grs,___flmul@grs+1
  4750   001F5A  6A1B               	clrf	___flmul@grs^0,c
  4751   001F5C  5012               	movf	___flmul@a^0,w,c
  4752   001F5E  020E               	mulwf	___flmul@b^0,c
  4753   001F60  CFF3 F025          	movff	prodl,___flmul@temp
  4754   001F64  CFF4 F026          	movff	prodh,___flmul@temp+1
  4755   001F68  5025               	movf	___flmul@temp^0,w,c
  4756   001F6A  261B               	addwf	___flmul@grs^0,f,c
  4757   001F6C  5026               	movf	(___flmul@temp+1)^0,w,c
  4758   001F6E  221C               	addwfc	(___flmul@grs+1)^0,f,c
  4759   001F70  0E00               	movlw	0
  4760   001F72  221D               	addwfc	(___flmul@grs+2)^0,f,c
  4761   001F74  0E00               	movlw	0
  4762   001F76  221E               	addwfc	(___flmul@grs+3)^0,f,c
  4763   001F78  5014               	movf	(___flmul@a+2)^0,w,c
  4764   001F7A  020F               	mulwf	(___flmul@b+1)^0,c
  4765   001F7C  CFF3 F025          	movff	prodl,___flmul@temp
  4766   001F80  CFF4 F026          	movff	prodh,___flmul@temp+1
  4767   001F84  5025               	movf	___flmul@temp^0,w,c
  4768   001F86  2621               	addwf	___flmul@prod^0,f,c
  4769   001F88  5026               	movf	(___flmul@temp+1)^0,w,c
  4770   001F8A  2222               	addwfc	(___flmul@prod+1)^0,f,c
  4771   001F8C  0E00               	movlw	0
  4772   001F8E  2223               	addwfc	(___flmul@prod+2)^0,f,c
  4773   001F90  0E00               	movlw	0
  4774   001F92  2224               	addwfc	(___flmul@prod+3)^0,f,c
  4775   001F94  5013               	movf	(___flmul@a+1)^0,w,c
  4776   001F96  0210               	mulwf	(___flmul@b+2)^0,c
  4777   001F98  CFF3 F025          	movff	prodl,___flmul@temp
  4778   001F9C  CFF4 F026          	movff	prodh,___flmul@temp+1
  4779   001FA0  5025               	movf	___flmul@temp^0,w,c
  4780   001FA2  2621               	addwf	___flmul@prod^0,f,c
  4781   001FA4  5026               	movf	(___flmul@temp+1)^0,w,c
  4782   001FA6  2222               	addwfc	(___flmul@prod+1)^0,f,c
  4783   001FA8  0E00               	movlw	0
  4784   001FAA  2223               	addwfc	(___flmul@prod+2)^0,f,c
  4785   001FAC  0E00               	movlw	0
  4786   001FAE  2224               	addwfc	(___flmul@prod+3)^0,f,c
  4787   001FB0  5014               	movf	(___flmul@a+2)^0,w,c
  4788   001FB2  0210               	mulwf	(___flmul@b+2)^0,c
  4789   001FB4  CFF3 F025          	movff	prodl,___flmul@temp
  4790   001FB8  CFF4 F026          	movff	prodh,___flmul@temp+1
  4791   001FBC  5025               	movf	___flmul@temp^0,w,c
  4792   001FBE  6E16               	movwf	??___flmul^0,c
  4793   001FC0  5026               	movf	(___flmul@temp+1)^0,w,c
  4794   001FC2  6E17               	movwf	(??___flmul+1)^0,c
  4795   001FC4  6A18               	clrf	(??___flmul+2)^0,c
  4796   001FC6  6A19               	clrf	(??___flmul+3)^0,c
  4797   001FC8  C018  F019         	movff	??___flmul+2,??___flmul+3
  4798   001FCC  C017  F018         	movff	??___flmul+1,??___flmul+2
  4799   001FD0  C016  F017         	movff	??___flmul,??___flmul+1
  4800   001FD4  6A16               	clrf	??___flmul^0,c
  4801   001FD6  5016               	movf	??___flmul^0,w,c
  4802   001FD8  2621               	addwf	___flmul@prod^0,f,c
  4803   001FDA  5017               	movf	(??___flmul+1)^0,w,c
  4804   001FDC  2222               	addwfc	(___flmul@prod+1)^0,f,c
  4805   001FDE  5018               	movf	(??___flmul+2)^0,w,c
  4806   001FE0  2223               	addwfc	(___flmul@prod+2)^0,f,c
  4807   001FE2  5019               	movf	(??___flmul+3)^0,w,c
  4808   001FE4  2224               	addwfc	(___flmul@prod+3)^0,f,c
  4809   001FE6  C01B  F016         	movff	___flmul@grs,??___flmul
  4810   001FEA  C01C  F017         	movff	___flmul@grs+1,??___flmul+1
  4811   001FEE  C01D  F018         	movff	___flmul@grs+2,??___flmul+2
  4812   001FF2  C01E  F019         	movff	___flmul@grs+3,??___flmul+3
  4813   001FF6  0E19               	movlw	25
  4814   001FF8  EF03  F010         	goto	u2960
  4815   001FFC                     u2965:
  4816   001FFC  90D8               	bcf	status,0,c
  4817   001FFE  3219               	rrcf	(??___flmul+3)^0,f,c
  4818   002000  3218               	rrcf	(??___flmul+2)^0,f,c
  4819   002002  3217               	rrcf	(??___flmul+1)^0,f,c
  4820   002004  3216               	rrcf	??___flmul^0,f,c
  4821   002006                     u2960:
  4822   002006  2EE8               	decfsz	wreg,f,c
  4823   002008  EFFE  F00F         	goto	u2965
  4824   00200C  5016               	movf	??___flmul^0,w,c
  4825   00200E  2621               	addwf	___flmul@prod^0,f,c
  4826   002010  5017               	movf	(??___flmul+1)^0,w,c
  4827   002012  2222               	addwfc	(___flmul@prod+1)^0,f,c
  4828   002014  5018               	movf	(??___flmul+2)^0,w,c
  4829   002016  2223               	addwfc	(___flmul@prod+2)^0,f,c
  4830   002018  5019               	movf	(??___flmul+3)^0,w,c
  4831   00201A  2224               	addwfc	(___flmul@prod+3)^0,f,c
  4832   00201C  C01D  F01E         	movff	___flmul@grs+2,___flmul@grs+3
  4833   002020  C01C  F01D         	movff	___flmul@grs+1,___flmul@grs+2
  4834   002024  C01B  F01C         	movff	___flmul@grs,___flmul@grs+1
  4835   002028  6A1B               	clrf	___flmul@grs^0,c
  4836   00202A  501F               	movf	___flmul@aexp^0,w,c
  4837   00202C  C020  F016         	movff	___flmul@bexp,??___flmul
  4838   002030  6A17               	clrf	(??___flmul+1)^0,c
  4839   002032  2616               	addwf	??___flmul^0,f,c
  4840   002034  0E00               	movlw	0
  4841   002036  2217               	addwfc	(??___flmul+1)^0,f,c
  4842   002038  0E82               	movlw	130
  4843   00203A  2416               	addwf	??___flmul^0,w,c
  4844   00203C  6E25               	movwf	___flmul@temp^0,c
  4845   00203E  0EFF               	movlw	255
  4846   002040  2017               	addwfc	(??___flmul+1)^0,w,c
  4847   002042  6E26               	movwf	(___flmul@temp+1)^0,c
  4848   002044  EF39  F010         	goto	l2560
  4849   002048                     l2554:
  4850   002048  90D8               	bcf	status,0,c
  4851   00204A  3621               	rlcf	___flmul@prod^0,f,c
  4852   00204C  3622               	rlcf	(___flmul@prod+1)^0,f,c
  4853   00204E  3623               	rlcf	(___flmul@prod+2)^0,f,c
  4854   002050  3624               	rlcf	(___flmul@prod+3)^0,f,c
  4855   002052  AE1E               	btfss	(___flmul@grs+3)^0,7,c
  4856   002054  EF2E  F010         	goto	u2971
  4857   002058  EF30  F010         	goto	u2970
  4858   00205C                     u2971:
  4859   00205C  EF31  F010         	goto	l829
  4860   002060                     u2970:
  4861   002060  8021               	bsf	___flmul@prod^0,0,c
  4862   002062                     l829:
  4863   002062  90D8               	bcf	status,0,c
  4864   002064  361B               	rlcf	___flmul@grs^0,f,c
  4865   002066  361C               	rlcf	(___flmul@grs+1)^0,f,c
  4866   002068  361D               	rlcf	(___flmul@grs+2)^0,f,c
  4867   00206A  361E               	rlcf	(___flmul@grs+3)^0,f,c
  4868   00206C  0625               	decf	___flmul@temp^0,f,c
  4869   00206E  A0D8               	btfss	status,0,c
  4870   002070  0626               	decf	(___flmul@temp+1)^0,f,c
  4871   002072                     l2560:
  4872   002072  AE23               	btfss	(___flmul@prod+2)^0,7,c
  4873   002074  EF3E  F010         	goto	u2981
  4874   002078  EF40  F010         	goto	u2980
  4875   00207C                     u2981:
  4876   00207C  EF24  F010         	goto	l2554
  4877   002080                     u2980:
  4878   002080  0E00               	movlw	0
  4879   002082  6E1F               	movwf	___flmul@aexp^0,c
  4880   002084  AE1E               	btfss	(___flmul@grs+3)^0,7,c
  4881   002086  EF47  F010         	goto	u2991
  4882   00208A  EF49  F010         	goto	u2990
  4883   00208E                     u2991:
  4884   00208E  EF6D  F010         	goto	l831
  4885   002092                     u2990:
  4886   002092  0EFF               	movlw	255
  4887   002094  141B               	andwf	___flmul@grs^0,w,c
  4888   002096  6E16               	movwf	??___flmul^0,c
  4889   002098  0EFF               	movlw	255
  4890   00209A  141C               	andwf	(___flmul@grs+1)^0,w,c
  4891   00209C  6E17               	movwf	(??___flmul+1)^0,c
  4892   00209E  0EFF               	movlw	255
  4893   0020A0  141D               	andwf	(___flmul@grs+2)^0,w,c
  4894   0020A2  6E18               	movwf	(??___flmul+2)^0,c
  4895   0020A4  0E7F               	movlw	127
  4896   0020A6  141E               	andwf	(___flmul@grs+3)^0,w,c
  4897   0020A8  6E19               	movwf	(??___flmul+3)^0,c
  4898   0020AA  5016               	movf	??___flmul^0,w,c
  4899   0020AC  1017               	iorwf	(??___flmul+1)^0,w,c
  4900   0020AE  1018               	iorwf	(??___flmul+2)^0,w,c
  4901   0020B0  1019               	iorwf	(??___flmul+3)^0,w,c
  4902   0020B2  B4D8               	btfsc	status,2,c
  4903   0020B4  EF5E  F010         	goto	u3001
  4904   0020B8  EF60  F010         	goto	u3000
  4905   0020BC                     u3001:
  4906   0020BC  EF64  F010         	goto	l832
  4907   0020C0                     u3000:
  4908   0020C0                     l2568:
  4909   0020C0  0E01               	movlw	1
  4910   0020C2  6E1F               	movwf	___flmul@aexp^0,c
  4911   0020C4  EF6D  F010         	goto	l831
  4912   0020C8                     l832:
  4913   0020C8  A021               	btfss	___flmul@prod^0,0,c
  4914   0020CA  EF69  F010         	goto	u3011
  4915   0020CE  EF6B  F010         	goto	u3010
  4916   0020D2                     u3011:
  4917   0020D2  EF6D  F010         	goto	l831
  4918   0020D6                     u3010:
  4919   0020D6  EF60  F010         	goto	l2568
  4920   0020DA                     l831:
  4921   0020DA  501F               	movf	___flmul@aexp^0,w,c
  4922   0020DC  B4D8               	btfsc	status,2,c
  4923   0020DE  EF73  F010         	goto	u3021
  4924   0020E2  EF75  F010         	goto	u3020
  4925   0020E6                     u3021:
  4926   0020E6  EF99  F010         	goto	l2580
  4927   0020EA                     u3020:
  4928   0020EA  0E01               	movlw	1
  4929   0020EC  2621               	addwf	___flmul@prod^0,f,c
  4930   0020EE  0E00               	movlw	0
  4931   0020F0  2222               	addwfc	(___flmul@prod+1)^0,f,c
  4932   0020F2  2223               	addwfc	(___flmul@prod+2)^0,f,c
  4933   0020F4  2224               	addwfc	(___flmul@prod+3)^0,f,c
  4934   0020F6  A024               	btfss	(___flmul@prod+3)^0,0,c
  4935   0020F8  EF80  F010         	goto	u3031
  4936   0020FC  EF82  F010         	goto	u3030
  4937   002100                     u3031:
  4938   002100  EF99  F010         	goto	l2580
  4939   002104                     u3030:
  4940   002104  C021  F016         	movff	___flmul@prod,??___flmul
  4941   002108  C022  F017         	movff	___flmul@prod+1,??___flmul+1
  4942   00210C  C023  F018         	movff	___flmul@prod+2,??___flmul+2
  4943   002110  C024  F019         	movff	___flmul@prod+3,??___flmul+3
  4944   002114  3419               	rlcf	(??___flmul+3)^0,w,c
  4945   002116  3219               	rrcf	(??___flmul+3)^0,f,c
  4946   002118  3218               	rrcf	(??___flmul+2)^0,f,c
  4947   00211A  3217               	rrcf	(??___flmul+1)^0,f,c
  4948   00211C  3216               	rrcf	??___flmul^0,f,c
  4949   00211E  C016  F021         	movff	??___flmul,___flmul@prod
  4950   002122  C017  F022         	movff	??___flmul+1,___flmul@prod+1
  4951   002126  C018  F023         	movff	??___flmul+2,___flmul@prod+2
  4952   00212A  C019  F024         	movff	??___flmul+3,___flmul@prod+3
  4953   00212E  4A25               	infsnz	___flmul@temp^0,f,c
  4954   002130  2A26               	incf	(___flmul@temp+1)^0,f,c
  4955   002132                     l2580:
  4956   002132  BE26               	btfsc	(___flmul@temp+1)^0,7,c
  4957   002134  EFA4  F010         	goto	u3041
  4958   002138  5026               	movf	(___flmul@temp+1)^0,w,c
  4959   00213A  E108               	bnz	u3040
  4960   00213C  2825               	incf	___flmul@temp^0,w,c
  4961   00213E  A0D8               	btfss	status,0,c
  4962   002140  EFA4  F010         	goto	u3041
  4963   002144  EFA6  F010         	goto	u3040
  4964   002148                     u3041:
  4965   002148  EFB0  F010         	goto	l2584
  4966   00214C                     u3040:
  4967   00214C  0E00               	movlw	0
  4968   00214E  6E21               	movwf	___flmul@prod^0,c
  4969   002150  0E00               	movlw	0
  4970   002152  6E22               	movwf	(___flmul@prod+1)^0,c
  4971   002154  0E80               	movlw	128
  4972   002156  6E23               	movwf	(___flmul@prod+2)^0,c
  4973   002158  0E7F               	movlw	127
  4974   00215A  6E24               	movwf	(___flmul@prod+3)^0,c
  4975   00215C  EFDE  F010         	goto	l2596
  4976   002160                     l2584:
  4977   002160  BE26               	btfsc	(___flmul@temp+1)^0,7,c
  4978   002162  EFBD  F010         	goto	u3050
  4979   002166  5026               	movf	(___flmul@temp+1)^0,w,c
  4980   002168  E106               	bnz	u3051
  4981   00216A  0425               	decf	___flmul@temp^0,w,c
  4982   00216C  B0D8               	btfsc	status,0,c
  4983   00216E  EFBB  F010         	goto	u3051
  4984   002172  EFBD  F010         	goto	u3050
  4985   002176                     u3051:
  4986   002176  EFC9  F010         	goto	l839
  4987   00217A                     u3050:
  4988   00217A  0E00               	movlw	0
  4989   00217C  6E21               	movwf	___flmul@prod^0,c
  4990   00217E  0E00               	movlw	0
  4991   002180  6E22               	movwf	(___flmul@prod+1)^0,c
  4992   002182  0E00               	movlw	0
  4993   002184  6E23               	movwf	(___flmul@prod+2)^0,c
  4994   002186  0E00               	movlw	0
  4995   002188  6E24               	movwf	(___flmul@prod+3)^0,c
  4996   00218A  0E00               	movlw	0
  4997   00218C  6E1A               	movwf	___flmul@sign^0,c
  4998   00218E  EFDE  F010         	goto	l2596
  4999   002192                     l839:
  5000   002192  C025  F020         	movff	___flmul@temp,___flmul@bexp
  5001   002196  0EFF               	movlw	255
  5002   002198  1621               	andwf	___flmul@prod^0,f,c
  5003   00219A  0EFF               	movlw	255
  5004   00219C  1622               	andwf	(___flmul@prod+1)^0,f,c
  5005   00219E  0E7F               	movlw	127
  5006   0021A0  1623               	andwf	(___flmul@prod+2)^0,f,c
  5007   0021A2  0E00               	movlw	0
  5008   0021A4  1624               	andwf	(___flmul@prod+3)^0,f,c
  5009   0021A6  A020               	btfss	___flmul@bexp^0,0,c
  5010   0021A8  EFD8  F010         	goto	u3061
  5011   0021AC  EFDA  F010         	goto	u3060
  5012   0021B0                     u3061:
  5013   0021B0  EFDB  F010         	goto	l2594
  5014   0021B4                     u3060:
  5015   0021B4  8E23               	bsf	(___flmul@prod+2)^0,7,c
  5016   0021B6                     l2594:
  5017   0021B6  90D8               	bcf	status,0,c
  5018   0021B8  3020               	rrcf	___flmul@bexp^0,w,c
  5019   0021BA  6E24               	movwf	(___flmul@prod+3)^0,c
  5020   0021BC                     l2596:
  5021   0021BC  501A               	movf	___flmul@sign^0,w,c
  5022   0021BE  1224               	iorwf	(___flmul@prod+3)^0,f,c
  5023   0021C0  C021  F00E         	movff	___flmul@prod,?___flmul
  5024   0021C4  C022  F00F         	movff	___flmul@prod+1,?___flmul+1
  5025   0021C8  C023  F010         	movff	___flmul@prod+2,?___flmul+2
  5026   0021CC  C024  F011         	movff	___flmul@prod+3,?___flmul+3
  5027   0021D0                     l826:
  5028   0021D0  0012               	return		;funcret
  5029   0021D2                     __end_of___flmul:
  5030                           	callstack 0
  5031                           
  5032 ;; *************** function ___fleq *****************
  5033 ;; Defined at:
  5034 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\fleq.c"
  5035 ;; Parameters:    Size  Location     Type
  5036 ;;  ff1             4   13[COMRAM] unsigned char 
  5037 ;;  ff2             4   17[COMRAM] unsigned char 
  5038 ;; Auto vars:     Size  Location     Type
  5039 ;;		None
  5040 ;; Return value:  Size  Location     Type
  5041 ;;		None               void
  5042 ;; Registers used:
  5043 ;;		wreg, status,2, status,0
  5044 ;; Tracked objects:
  5045 ;;		On entry : 0/0
  5046 ;;		On exit  : 0/0
  5047 ;;		Unchanged: 0/0
  5048 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5049 ;;      Params:         8       0       0       0       0       0       0       0       0
  5050 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5051 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5052 ;;      Totals:        12       0       0       0       0       0       0       0       0
  5053 ;;Total ram usage:       12 bytes
  5054 ;; Hardware stack levels used: 1
  5055 ;; Hardware stack levels required when called: 4
  5056 ;; This function calls:
  5057 ;;		Nothing
  5058 ;; This function is called by:
  5059 ;;		_uart_init
  5060 ;; This function uses a non-reentrant model
  5061 ;;
  5062                           
  5063                           	psect	text14
  5064   002B48                     __ptext14:
  5065                           	callstack 0
  5066   002B48                     ___fleq:
  5067                           	callstack 25
  5068   002B48  0E00               	movlw	0
  5069   002B4A  140E               	andwf	___fleq@ff1^0,w,c
  5070   002B4C  6E16               	movwf	??___fleq^0,c
  5071   002B4E  0E00               	movlw	0
  5072   002B50  140F               	andwf	(___fleq@ff1+1)^0,w,c
  5073   002B52  6E17               	movwf	(??___fleq+1)^0,c
  5074   002B54  0E80               	movlw	128
  5075   002B56  1410               	andwf	(___fleq@ff1+2)^0,w,c
  5076   002B58  6E18               	movwf	(??___fleq+2)^0,c
  5077   002B5A  0E7F               	movlw	127
  5078   002B5C  1411               	andwf	(___fleq@ff1+3)^0,w,c
  5079   002B5E  6E19               	movwf	(??___fleq+3)^0,c
  5080   002B60  5016               	movf	??___fleq^0,w,c
  5081   002B62  1017               	iorwf	(??___fleq+1)^0,w,c
  5082   002B64  1018               	iorwf	(??___fleq+2)^0,w,c
  5083   002B66  1019               	iorwf	(??___fleq+3)^0,w,c
  5084   002B68  A4D8               	btfss	status,2,c
  5085   002B6A  EFB9  F015         	goto	u3071
  5086   002B6E  EFBB  F015         	goto	u3070
  5087   002B72                     u3071:
  5088   002B72  EFC3  F015         	goto	l2612
  5089   002B76                     u3070:
  5090   002B76  0E00               	movlw	0
  5091   002B78  6E0E               	movwf	___fleq@ff1^0,c
  5092   002B7A  0E00               	movlw	0
  5093   002B7C  6E0F               	movwf	(___fleq@ff1+1)^0,c
  5094   002B7E  0E00               	movlw	0
  5095   002B80  6E10               	movwf	(___fleq@ff1+2)^0,c
  5096   002B82  0E00               	movlw	0
  5097   002B84  6E11               	movwf	(___fleq@ff1+3)^0,c
  5098   002B86                     l2612:
  5099   002B86  0E00               	movlw	0
  5100   002B88  1412               	andwf	___fleq@ff2^0,w,c
  5101   002B8A  6E16               	movwf	??___fleq^0,c
  5102   002B8C  0E00               	movlw	0
  5103   002B8E  1413               	andwf	(___fleq@ff2+1)^0,w,c
  5104   002B90  6E17               	movwf	(??___fleq+1)^0,c
  5105   002B92  0E80               	movlw	128
  5106   002B94  1414               	andwf	(___fleq@ff2+2)^0,w,c
  5107   002B96  6E18               	movwf	(??___fleq+2)^0,c
  5108   002B98  0E7F               	movlw	127
  5109   002B9A  1415               	andwf	(___fleq@ff2+3)^0,w,c
  5110   002B9C  6E19               	movwf	(??___fleq+3)^0,c
  5111   002B9E  5016               	movf	??___fleq^0,w,c
  5112   002BA0  1017               	iorwf	(??___fleq+1)^0,w,c
  5113   002BA2  1018               	iorwf	(??___fleq+2)^0,w,c
  5114   002BA4  1019               	iorwf	(??___fleq+3)^0,w,c
  5115   002BA6  A4D8               	btfss	status,2,c
  5116   002BA8  EFD8  F015         	goto	u3081
  5117   002BAC  EFDA  F015         	goto	u3080
  5118   002BB0                     u3081:
  5119   002BB0  EFE2  F015         	goto	l2616
  5120   002BB4                     u3080:
  5121   002BB4  0E00               	movlw	0
  5122   002BB6  6E12               	movwf	___fleq@ff2^0,c
  5123   002BB8  0E00               	movlw	0
  5124   002BBA  6E13               	movwf	(___fleq@ff2+1)^0,c
  5125   002BBC  0E00               	movlw	0
  5126   002BBE  6E14               	movwf	(___fleq@ff2+2)^0,c
  5127   002BC0  0E00               	movlw	0
  5128   002BC2  6E15               	movwf	(___fleq@ff2+3)^0,c
  5129   002BC4                     l2616:
  5130   002BC4  5012               	movf	___fleq@ff2^0,w,c
  5131   002BC6  180E               	xorwf	___fleq@ff1^0,w,c
  5132   002BC8  E10F               	bnz	u3090
  5133   002BCA  5013               	movf	(___fleq@ff2+1)^0,w,c
  5134   002BCC  180F               	xorwf	(___fleq@ff1+1)^0,w,c
  5135   002BCE  E10C               	bnz	u3090
  5136   002BD0  5014               	movf	(___fleq@ff2+2)^0,w,c
  5137   002BD2  1810               	xorwf	(___fleq@ff1+2)^0,w,c
  5138   002BD4  E109               	bnz	u3090
  5139   002BD6  5015               	movf	(___fleq@ff2+3)^0,w,c
  5140   002BD8  1811               	xorwf	(___fleq@ff1+3)^0,w,c
  5141   002BDA  B4D8               	btfsc	status,2,c
  5142   002BDC  EFF2  F015         	goto	u3091
  5143   002BE0  EFF4  F015         	goto	u3090
  5144   002BE4                     u3091:
  5145   002BE4  EFF7  F015         	goto	l2620
  5146   002BE8                     u3090:
  5147   002BE8  90D8               	bcf	status,0,c
  5148   002BEA  EFF8  F015         	goto	l467
  5149   002BEE                     l2620:
  5150   002BEE  80D8               	bsf	status,0,c
  5151   002BF0                     l467:
  5152   002BF0  0012               	return		;funcret
  5153   002BF2                     __end_of___fleq:
  5154                           	callstack 0
  5155                           
  5156 ;; *************** function ___fldiv *****************
  5157 ;; Defined at:
  5158 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\sprcdiv.c"
  5159 ;; Parameters:    Size  Location     Type
  5160 ;;  b               4   38[COMRAM] unsigned char 
  5161 ;;  a               4   42[COMRAM] unsigned char 
  5162 ;; Auto vars:     Size  Location     Type
  5163 ;;  grs             4   57[COMRAM] unsigned long 
  5164 ;;  rem             4   50[COMRAM] unsigned long 
  5165 ;;  new_exp         2   55[COMRAM] short 
  5166 ;;  aexp            1   62[COMRAM] unsigned char 
  5167 ;;  bexp            1   61[COMRAM] unsigned char 
  5168 ;;  sign            1   54[COMRAM] unsigned char 
  5169 ;; Return value:  Size  Location     Type
  5170 ;;                  4   38[COMRAM] unsigned char 
  5171 ;; Registers used:
  5172 ;;		wreg, status,2, status,0
  5173 ;; Tracked objects:
  5174 ;;		On entry : 0/0
  5175 ;;		On exit  : 0/0
  5176 ;;		Unchanged: 0/0
  5177 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5178 ;;      Params:         8       0       0       0       0       0       0       0       0
  5179 ;;      Locals:        13       0       0       0       0       0       0       0       0
  5180 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5181 ;;      Totals:        25       0       0       0       0       0       0       0       0
  5182 ;;Total ram usage:       25 bytes
  5183 ;; Hardware stack levels used: 1
  5184 ;; Hardware stack levels required when called: 4
  5185 ;; This function calls:
  5186 ;;		Nothing
  5187 ;; This function is called by:
  5188 ;;		_uart_init
  5189 ;; This function uses a non-reentrant model
  5190 ;;
  5191                           
  5192                           	psect	text15
  5193   0021D2                     __ptext15:
  5194                           	callstack 0
  5195   0021D2                     ___fldiv:
  5196                           	callstack 25
  5197   0021D2  502A               	movf	(___fldiv@b+3)^0,w,c
  5198   0021D4  0B80               	andlw	128
  5199   0021D6  6E37               	movwf	___fldiv@sign^0,c
  5200   0021D8  502A               	movf	(___fldiv@b+3)^0,w,c
  5201   0021DA  242A               	addwf	(___fldiv@b+3)^0,w,c
  5202   0021DC  6E3E               	movwf	___fldiv@bexp^0,c
  5203   0021DE  AE29               	btfss	(___fldiv@b+2)^0,7,c
  5204   0021E0  EFF4  F010         	goto	u2651
  5205   0021E4  EFF6  F010         	goto	u2650
  5206   0021E8                     u2651:
  5207   0021E8  EFF7  F010         	goto	l2340
  5208   0021EC                     u2650:
  5209   0021EC  803E               	bsf	___fldiv@bexp^0,0,c
  5210   0021EE                     l2340:
  5211   0021EE  503E               	movf	___fldiv@bexp^0,w,c
  5212   0021F0  B4D8               	btfsc	status,2,c
  5213   0021F2  EFFD  F010         	goto	u2661
  5214   0021F6  EFFF  F010         	goto	u2660
  5215   0021FA                     u2661:
  5216   0021FA  EF14  F011         	goto	l2350
  5217   0021FE                     u2660:
  5218   0021FE  283E               	incf	___fldiv@bexp^0,w,c
  5219   002200  A4D8               	btfss	status,2,c
  5220   002202  EF05  F011         	goto	u2671
  5221   002206  EF07  F011         	goto	u2670
  5222   00220A                     u2671:
  5223   00220A  EF0F  F011         	goto	l2346
  5224   00220E                     u2670:
  5225   00220E  0E00               	movlw	0
  5226   002210  6E27               	movwf	___fldiv@b^0,c
  5227   002212  0E00               	movlw	0
  5228   002214  6E28               	movwf	(___fldiv@b+1)^0,c
  5229   002216  0E00               	movlw	0
  5230   002218  6E29               	movwf	(___fldiv@b+2)^0,c
  5231   00221A  0E00               	movlw	0
  5232   00221C  6E2A               	movwf	(___fldiv@b+3)^0,c
  5233   00221E                     l2346:
  5234   00221E  8E29               	bsf	(___fldiv@b+2)^0,7,c
  5235   002220  0E00               	movlw	0
  5236   002222  6E2A               	movwf	(___fldiv@b+3)^0,c
  5237   002224  EF1C  F011         	goto	l2352
  5238   002228                     l2350:
  5239   002228  0E00               	movlw	0
  5240   00222A  6E27               	movwf	___fldiv@b^0,c
  5241   00222C  0E00               	movlw	0
  5242   00222E  6E28               	movwf	(___fldiv@b+1)^0,c
  5243   002230  0E00               	movlw	0
  5244   002232  6E29               	movwf	(___fldiv@b+2)^0,c
  5245   002234  0E00               	movlw	0
  5246   002236  6E2A               	movwf	(___fldiv@b+3)^0,c
  5247   002238                     l2352:
  5248   002238  502E               	movf	(___fldiv@a+3)^0,w,c
  5249   00223A  0B80               	andlw	128
  5250   00223C  1A37               	xorwf	___fldiv@sign^0,f,c
  5251   00223E  502E               	movf	(___fldiv@a+3)^0,w,c
  5252   002240  242E               	addwf	(___fldiv@a+3)^0,w,c
  5253   002242  6E3F               	movwf	___fldiv@aexp^0,c
  5254   002244  AE2D               	btfss	(___fldiv@a+2)^0,7,c
  5255   002246  EF27  F011         	goto	u2681
  5256   00224A  EF29  F011         	goto	u2680
  5257   00224E                     u2681:
  5258   00224E  EF2A  F011         	goto	l2360
  5259   002252                     u2680:
  5260   002252  803F               	bsf	___fldiv@aexp^0,0,c
  5261   002254                     l2360:
  5262   002254  503F               	movf	___fldiv@aexp^0,w,c
  5263   002256  B4D8               	btfsc	status,2,c
  5264   002258  EF30  F011         	goto	u2691
  5265   00225C  EF32  F011         	goto	u2690
  5266   002260                     u2691:
  5267   002260  EF47  F011         	goto	l2370
  5268   002264                     u2690:
  5269   002264  283F               	incf	___fldiv@aexp^0,w,c
  5270   002266  A4D8               	btfss	status,2,c
  5271   002268  EF38  F011         	goto	u2701
  5272   00226C  EF3A  F011         	goto	u2700
  5273   002270                     u2701:
  5274   002270  EF42  F011         	goto	l2366
  5275   002274                     u2700:
  5276   002274  0E00               	movlw	0
  5277   002276  6E2B               	movwf	___fldiv@a^0,c
  5278   002278  0E00               	movlw	0
  5279   00227A  6E2C               	movwf	(___fldiv@a+1)^0,c
  5280   00227C  0E00               	movlw	0
  5281   00227E  6E2D               	movwf	(___fldiv@a+2)^0,c
  5282   002280  0E00               	movlw	0
  5283   002282  6E2E               	movwf	(___fldiv@a+3)^0,c
  5284   002284                     l2366:
  5285   002284  8E2D               	bsf	(___fldiv@a+2)^0,7,c
  5286   002286  0E00               	movlw	0
  5287   002288  6E2E               	movwf	(___fldiv@a+3)^0,c
  5288   00228A  EF4F  F011         	goto	l2372
  5289   00228E                     l2370:
  5290   00228E  0E00               	movlw	0
  5291   002290  6E2B               	movwf	___fldiv@a^0,c
  5292   002292  0E00               	movlw	0
  5293   002294  6E2C               	movwf	(___fldiv@a+1)^0,c
  5294   002296  0E00               	movlw	0
  5295   002298  6E2D               	movwf	(___fldiv@a+2)^0,c
  5296   00229A  0E00               	movlw	0
  5297   00229C  6E2E               	movwf	(___fldiv@a+3)^0,c
  5298   00229E                     l2372:
  5299   00229E  502B               	movf	___fldiv@a^0,w,c
  5300   0022A0  102C               	iorwf	(___fldiv@a+1)^0,w,c
  5301   0022A2  102D               	iorwf	(___fldiv@a+2)^0,w,c
  5302   0022A4  102E               	iorwf	(___fldiv@a+3)^0,w,c
  5303   0022A6  A4D8               	btfss	status,2,c
  5304   0022A8  EF58  F011         	goto	u2711
  5305   0022AC  EF5A  F011         	goto	u2710
  5306   0022B0                     u2711:
  5307   0022B0  EF72  F011         	goto	l2384
  5308   0022B4                     u2710:
  5309   0022B4  0E00               	movlw	0
  5310   0022B6  6E27               	movwf	___fldiv@b^0,c
  5311   0022B8  0E00               	movlw	0
  5312   0022BA  6E28               	movwf	(___fldiv@b+1)^0,c
  5313   0022BC  0E00               	movlw	0
  5314   0022BE  6E29               	movwf	(___fldiv@b+2)^0,c
  5315   0022C0  0E00               	movlw	0
  5316   0022C2  6E2A               	movwf	(___fldiv@b+3)^0,c
  5317   0022C4  0E80               	movlw	128
  5318   0022C6  1229               	iorwf	(___fldiv@b+2)^0,f,c
  5319   0022C8  0E7F               	movlw	127
  5320   0022CA  122A               	iorwf	(___fldiv@b+3)^0,f,c
  5321   0022CC                     l2378:
  5322   0022CC  5037               	movf	___fldiv@sign^0,w,c
  5323   0022CE  122A               	iorwf	(___fldiv@b+3)^0,f,c
  5324   0022D0  C027  F027         	movff	___fldiv@b,?___fldiv
  5325   0022D4  C028  F028         	movff	___fldiv@b+1,?___fldiv+1
  5326   0022D8  C029  F029         	movff	___fldiv@b+2,?___fldiv+2
  5327   0022DC  C02A  F02A         	movff	___fldiv@b+3,?___fldiv+3
  5328   0022E0  EFB5  F012         	goto	l790
  5329   0022E4                     l2384:
  5330   0022E4  503E               	movf	___fldiv@bexp^0,w,c
  5331   0022E6  A4D8               	btfss	status,2,c
  5332   0022E8  EF78  F011         	goto	u2721
  5333   0022EC  EF7A  F011         	goto	u2720
  5334   0022F0                     u2721:
  5335   0022F0  EF84  F011         	goto	l2392
  5336   0022F4                     u2720:
  5337   0022F4  0E00               	movlw	0
  5338   0022F6  6E27               	movwf	?___fldiv^0,c
  5339   0022F8  0E00               	movlw	0
  5340   0022FA  6E28               	movwf	(?___fldiv+1)^0,c
  5341   0022FC  0E00               	movlw	0
  5342   0022FE  6E29               	movwf	(?___fldiv+2)^0,c
  5343   002300  0E00               	movlw	0
  5344   002302  6E2A               	movwf	(?___fldiv+3)^0,c
  5345   002304  EFB5  F012         	goto	l790
  5346   002308                     l2392:
  5347   002308  503F               	movf	___fldiv@aexp^0,w,c
  5348   00230A  C03E  F02F         	movff	___fldiv@bexp,??___fldiv
  5349   00230E  6A30               	clrf	(??___fldiv+1)^0,c
  5350   002310  5E2F               	subwf	??___fldiv^0,f,c
  5351   002312  0E00               	movlw	0
  5352   002314  5A30               	subwfb	(??___fldiv+1)^0,f,c
  5353   002316  0E7F               	movlw	127
  5354   002318  242F               	addwf	??___fldiv^0,w,c
  5355   00231A  6E38               	movwf	___fldiv@new_exp^0,c
  5356   00231C  0E00               	movlw	0
  5357   00231E  2030               	addwfc	(??___fldiv+1)^0,w,c
  5358   002320  6E39               	movwf	(___fldiv@new_exp+1)^0,c
  5359   002322  C027  F033         	movff	___fldiv@b,___fldiv@rem
  5360   002326  C028  F034         	movff	___fldiv@b+1,___fldiv@rem+1
  5361   00232A  C029  F035         	movff	___fldiv@b+2,___fldiv@rem+2
  5362   00232E  C02A  F036         	movff	___fldiv@b+3,___fldiv@rem+3
  5363   002332  0E00               	movlw	0
  5364   002334  6E27               	movwf	___fldiv@b^0,c
  5365   002336  0E00               	movlw	0
  5366   002338  6E28               	movwf	(___fldiv@b+1)^0,c
  5367   00233A  0E00               	movlw	0
  5368   00233C  6E29               	movwf	(___fldiv@b+2)^0,c
  5369   00233E  0E00               	movlw	0
  5370   002340  6E2A               	movwf	(___fldiv@b+3)^0,c
  5371   002342  0E00               	movlw	0
  5372   002344  6E3A               	movwf	___fldiv@grs^0,c
  5373   002346  0E00               	movlw	0
  5374   002348  6E3B               	movwf	(___fldiv@grs+1)^0,c
  5375   00234A  0E00               	movlw	0
  5376   00234C  6E3C               	movwf	(___fldiv@grs+2)^0,c
  5377   00234E  0E00               	movlw	0
  5378   002350  6E3D               	movwf	(___fldiv@grs+3)^0,c
  5379   002352  0E00               	movlw	0
  5380   002354  6E3F               	movwf	___fldiv@aexp^0,c
  5381   002356  EFE5  F011         	goto	l792
  5382   00235A                     l2402:
  5383   00235A  503F               	movf	___fldiv@aexp^0,w,c
  5384   00235C  B4D8               	btfsc	status,2,c
  5385   00235E  EFB3  F011         	goto	u2731
  5386   002362  EFB5  F011         	goto	u2730
  5387   002366                     u2731:
  5388   002366  EFCC  F011         	goto	l2410
  5389   00236A                     u2730:
  5390   00236A  90D8               	bcf	status,0,c
  5391   00236C  3633               	rlcf	___fldiv@rem^0,f,c
  5392   00236E  3634               	rlcf	(___fldiv@rem+1)^0,f,c
  5393   002370  3635               	rlcf	(___fldiv@rem+2)^0,f,c
  5394   002372  3636               	rlcf	(___fldiv@rem+3)^0,f,c
  5395   002374  90D8               	bcf	status,0,c
  5396   002376  3627               	rlcf	___fldiv@b^0,f,c
  5397   002378  3628               	rlcf	(___fldiv@b+1)^0,f,c
  5398   00237A  3629               	rlcf	(___fldiv@b+2)^0,f,c
  5399   00237C  362A               	rlcf	(___fldiv@b+3)^0,f,c
  5400   00237E  AE3D               	btfss	(___fldiv@grs+3)^0,7,c
  5401   002380  EFC4  F011         	goto	u2741
  5402   002384  EFC6  F011         	goto	u2740
  5403   002388                     u2741:
  5404   002388  EFC7  F011         	goto	l795
  5405   00238C                     u2740:
  5406   00238C  8027               	bsf	___fldiv@b^0,0,c
  5407   00238E                     l795:
  5408   00238E  90D8               	bcf	status,0,c
  5409   002390  363A               	rlcf	___fldiv@grs^0,f,c
  5410   002392  363B               	rlcf	(___fldiv@grs+1)^0,f,c
  5411   002394  363C               	rlcf	(___fldiv@grs+2)^0,f,c
  5412   002396  363D               	rlcf	(___fldiv@grs+3)^0,f,c
  5413   002398                     l2410:
  5414   002398  502B               	movf	___fldiv@a^0,w,c
  5415   00239A  5C33               	subwf	___fldiv@rem^0,w,c
  5416   00239C  502C               	movf	(___fldiv@a+1)^0,w,c
  5417   00239E  5834               	subwfb	(___fldiv@rem+1)^0,w,c
  5418   0023A0  502D               	movf	(___fldiv@a+2)^0,w,c
  5419   0023A2  5835               	subwfb	(___fldiv@rem+2)^0,w,c
  5420   0023A4  502E               	movf	(___fldiv@a+3)^0,w,c
  5421   0023A6  5836               	subwfb	(___fldiv@rem+3)^0,w,c
  5422   0023A8  A0D8               	btfss	status,0,c
  5423   0023AA  EFD9  F011         	goto	u2751
  5424   0023AE  EFDB  F011         	goto	u2750
  5425   0023B2                     u2751:
  5426   0023B2  EFE4  F011         	goto	l2416
  5427   0023B6                     u2750:
  5428   0023B6  8C3D               	bsf	(___fldiv@grs+3)^0,6,c
  5429   0023B8  502B               	movf	___fldiv@a^0,w,c
  5430   0023BA  5E33               	subwf	___fldiv@rem^0,f,c
  5431   0023BC  502C               	movf	(___fldiv@a+1)^0,w,c
  5432   0023BE  5A34               	subwfb	(___fldiv@rem+1)^0,f,c
  5433   0023C0  502D               	movf	(___fldiv@a+2)^0,w,c
  5434   0023C2  5A35               	subwfb	(___fldiv@rem+2)^0,f,c
  5435   0023C4  502E               	movf	(___fldiv@a+3)^0,w,c
  5436   0023C6  5A36               	subwfb	(___fldiv@rem+3)^0,f,c
  5437   0023C8                     l2416:
  5438   0023C8  2A3F               	incf	___fldiv@aexp^0,f,c
  5439   0023CA                     l792:
  5440   0023CA  0E19               	movlw	25
  5441   0023CC  643F               	cpfsgt	___fldiv@aexp^0,c
  5442   0023CE  EFEB  F011         	goto	u2761
  5443   0023D2  EFED  F011         	goto	u2760
  5444   0023D6                     u2761:
  5445   0023D6  EFAD  F011         	goto	l2402
  5446   0023DA                     u2760:
  5447   0023DA  5033               	movf	___fldiv@rem^0,w,c
  5448   0023DC  1034               	iorwf	(___fldiv@rem+1)^0,w,c
  5449   0023DE  1035               	iorwf	(___fldiv@rem+2)^0,w,c
  5450   0023E0  1036               	iorwf	(___fldiv@rem+3)^0,w,c
  5451   0023E2  B4D8               	btfsc	status,2,c
  5452   0023E4  EFF6  F011         	goto	u2771
  5453   0023E8  EFF8  F011         	goto	u2770
  5454   0023EC                     u2771:
  5455   0023EC  EF10  F012         	goto	l2428
  5456   0023F0                     u2770:
  5457   0023F0  803A               	bsf	___fldiv@grs^0,0,c
  5458   0023F2  EF10  F012         	goto	l2428
  5459   0023F6                     l2422:
  5460   0023F6  90D8               	bcf	status,0,c
  5461   0023F8  3627               	rlcf	___fldiv@b^0,f,c
  5462   0023FA  3628               	rlcf	(___fldiv@b+1)^0,f,c
  5463   0023FC  3629               	rlcf	(___fldiv@b+2)^0,f,c
  5464   0023FE  362A               	rlcf	(___fldiv@b+3)^0,f,c
  5465   002400  AE3D               	btfss	(___fldiv@grs+3)^0,7,c
  5466   002402  EF05  F012         	goto	u2781
  5467   002406  EF07  F012         	goto	u2780
  5468   00240A                     u2781:
  5469   00240A  EF08  F012         	goto	l801
  5470   00240E                     u2780:
  5471   00240E  8027               	bsf	___fldiv@b^0,0,c
  5472   002410                     l801:
  5473   002410  90D8               	bcf	status,0,c
  5474   002412  363A               	rlcf	___fldiv@grs^0,f,c
  5475   002414  363B               	rlcf	(___fldiv@grs+1)^0,f,c
  5476   002416  363C               	rlcf	(___fldiv@grs+2)^0,f,c
  5477   002418  363D               	rlcf	(___fldiv@grs+3)^0,f,c
  5478   00241A  0638               	decf	___fldiv@new_exp^0,f,c
  5479   00241C  A0D8               	btfss	status,0,c
  5480   00241E  0639               	decf	(___fldiv@new_exp+1)^0,f,c
  5481   002420                     l2428:
  5482   002420  AE29               	btfss	(___fldiv@b+2)^0,7,c
  5483   002422  EF15  F012         	goto	u2791
  5484   002426  EF17  F012         	goto	u2790
  5485   00242A                     u2791:
  5486   00242A  EFFB  F011         	goto	l2422
  5487   00242E                     u2790:
  5488   00242E  0E00               	movlw	0
  5489   002430  6E3F               	movwf	___fldiv@aexp^0,c
  5490   002432  AE3D               	btfss	(___fldiv@grs+3)^0,7,c
  5491   002434  EF1E  F012         	goto	u2801
  5492   002438  EF20  F012         	goto	u2800
  5493   00243C                     u2801:
  5494   00243C  EF44  F012         	goto	l803
  5495   002440                     u2800:
  5496   002440  0EFF               	movlw	255
  5497   002442  143A               	andwf	___fldiv@grs^0,w,c
  5498   002444  6E2F               	movwf	??___fldiv^0,c
  5499   002446  0EFF               	movlw	255
  5500   002448  143B               	andwf	(___fldiv@grs+1)^0,w,c
  5501   00244A  6E30               	movwf	(??___fldiv+1)^0,c
  5502   00244C  0EFF               	movlw	255
  5503   00244E  143C               	andwf	(___fldiv@grs+2)^0,w,c
  5504   002450  6E31               	movwf	(??___fldiv+2)^0,c
  5505   002452  0E7F               	movlw	127
  5506   002454  143D               	andwf	(___fldiv@grs+3)^0,w,c
  5507   002456  6E32               	movwf	(??___fldiv+3)^0,c
  5508   002458  502F               	movf	??___fldiv^0,w,c
  5509   00245A  1030               	iorwf	(??___fldiv+1)^0,w,c
  5510   00245C  1031               	iorwf	(??___fldiv+2)^0,w,c
  5511   00245E  1032               	iorwf	(??___fldiv+3)^0,w,c
  5512   002460  B4D8               	btfsc	status,2,c
  5513   002462  EF35  F012         	goto	u2811
  5514   002466  EF37  F012         	goto	u2810
  5515   00246A                     u2811:
  5516   00246A  EF3B  F012         	goto	l804
  5517   00246E                     u2810:
  5518   00246E                     l2436:
  5519   00246E  0E01               	movlw	1
  5520   002470  6E3F               	movwf	___fldiv@aexp^0,c
  5521   002472  EF44  F012         	goto	l803
  5522   002476                     l804:
  5523   002476  A027               	btfss	___fldiv@b^0,0,c
  5524   002478  EF40  F012         	goto	u2821
  5525   00247C  EF42  F012         	goto	u2820
  5526   002480                     u2821:
  5527   002480  EF44  F012         	goto	l803
  5528   002484                     u2820:
  5529   002484  EF37  F012         	goto	l2436
  5530   002488                     l803:
  5531   002488  503F               	movf	___fldiv@aexp^0,w,c
  5532   00248A  B4D8               	btfsc	status,2,c
  5533   00248C  EF4A  F012         	goto	u2831
  5534   002490  EF4C  F012         	goto	u2830
  5535   002494                     u2831:
  5536   002494  EF70  F012         	goto	l2448
  5537   002498                     u2830:
  5538   002498  0E01               	movlw	1
  5539   00249A  2627               	addwf	___fldiv@b^0,f,c
  5540   00249C  0E00               	movlw	0
  5541   00249E  2228               	addwfc	(___fldiv@b+1)^0,f,c
  5542   0024A0  2229               	addwfc	(___fldiv@b+2)^0,f,c
  5543   0024A2  222A               	addwfc	(___fldiv@b+3)^0,f,c
  5544   0024A4  A02A               	btfss	(___fldiv@b+3)^0,0,c
  5545   0024A6  EF57  F012         	goto	u2841
  5546   0024AA  EF59  F012         	goto	u2840
  5547   0024AE                     u2841:
  5548   0024AE  EF70  F012         	goto	l2448
  5549   0024B2                     u2840:
  5550   0024B2  C027  F02F         	movff	___fldiv@b,??___fldiv
  5551   0024B6  C028  F030         	movff	___fldiv@b+1,??___fldiv+1
  5552   0024BA  C029  F031         	movff	___fldiv@b+2,??___fldiv+2
  5553   0024BE  C02A  F032         	movff	___fldiv@b+3,??___fldiv+3
  5554   0024C2  3432               	rlcf	(??___fldiv+3)^0,w,c
  5555   0024C4  3232               	rrcf	(??___fldiv+3)^0,f,c
  5556   0024C6  3231               	rrcf	(??___fldiv+2)^0,f,c
  5557   0024C8  3230               	rrcf	(??___fldiv+1)^0,f,c
  5558   0024CA  322F               	rrcf	??___fldiv^0,f,c
  5559   0024CC  C02F  F027         	movff	??___fldiv,___fldiv@b
  5560   0024D0  C030  F028         	movff	??___fldiv+1,___fldiv@b+1
  5561   0024D4  C031  F029         	movff	??___fldiv+2,___fldiv@b+2
  5562   0024D8  C032  F02A         	movff	??___fldiv+3,___fldiv@b+3
  5563   0024DC  4A38               	infsnz	___fldiv@new_exp^0,f,c
  5564   0024DE  2A39               	incf	(___fldiv@new_exp+1)^0,f,c
  5565   0024E0                     l2448:
  5566   0024E0  BE39               	btfsc	(___fldiv@new_exp+1)^0,7,c
  5567   0024E2  EF7B  F012         	goto	u2851
  5568   0024E6  5039               	movf	(___fldiv@new_exp+1)^0,w,c
  5569   0024E8  E108               	bnz	u2850
  5570   0024EA  2838               	incf	___fldiv@new_exp^0,w,c
  5571   0024EC  A0D8               	btfss	status,0,c
  5572   0024EE  EF7B  F012         	goto	u2851
  5573   0024F2  EF7D  F012         	goto	u2850
  5574   0024F6                     u2851:
  5575   0024F6  EF88  F012         	goto	l2452
  5576   0024FA                     u2850:
  5577   0024FA  0E00               	movlw	0
  5578   0024FC  6E39               	movwf	(___fldiv@new_exp+1)^0,c
  5579   0024FE  6838               	setf	___fldiv@new_exp^0,c
  5580   002500  0E00               	movlw	0
  5581   002502  6E27               	movwf	___fldiv@b^0,c
  5582   002504  0E00               	movlw	0
  5583   002506  6E28               	movwf	(___fldiv@b+1)^0,c
  5584   002508  0E00               	movlw	0
  5585   00250A  6E29               	movwf	(___fldiv@b+2)^0,c
  5586   00250C  0E00               	movlw	0
  5587   00250E  6E2A               	movwf	(___fldiv@b+3)^0,c
  5588   002510                     l2452:
  5589   002510  BE39               	btfsc	(___fldiv@new_exp+1)^0,7,c
  5590   002512  EF95  F012         	goto	u2860
  5591   002516  5039               	movf	(___fldiv@new_exp+1)^0,w,c
  5592   002518  E106               	bnz	u2861
  5593   00251A  0438               	decf	___fldiv@new_exp^0,w,c
  5594   00251C  B0D8               	btfsc	status,0,c
  5595   00251E  EF93  F012         	goto	u2861
  5596   002522  EF95  F012         	goto	u2860
  5597   002526                     u2861:
  5598   002526  EFA3  F012         	goto	l2456
  5599   00252A                     u2860:
  5600   00252A  0E00               	movlw	0
  5601   00252C  6E39               	movwf	(___fldiv@new_exp+1)^0,c
  5602   00252E  0E00               	movlw	0
  5603   002530  6E38               	movwf	___fldiv@new_exp^0,c
  5604   002532  0E00               	movlw	0
  5605   002534  6E27               	movwf	___fldiv@b^0,c
  5606   002536  0E00               	movlw	0
  5607   002538  6E28               	movwf	(___fldiv@b+1)^0,c
  5608   00253A  0E00               	movlw	0
  5609   00253C  6E29               	movwf	(___fldiv@b+2)^0,c
  5610   00253E  0E00               	movlw	0
  5611   002540  6E2A               	movwf	(___fldiv@b+3)^0,c
  5612   002542  0E00               	movlw	0
  5613   002544  6E37               	movwf	___fldiv@sign^0,c
  5614   002546                     l2456:
  5615   002546  C038  F03E         	movff	___fldiv@new_exp,___fldiv@bexp
  5616   00254A  A03E               	btfss	___fldiv@bexp^0,0,c
  5617   00254C  EFAA  F012         	goto	u2871
  5618   002550  EFAC  F012         	goto	u2870
  5619   002554                     u2871:
  5620   002554  EFAF  F012         	goto	l2462
  5621   002558                     u2870:
  5622   002558  8E29               	bsf	(___fldiv@b+2)^0,7,c
  5623   00255A  EFB0  F012         	goto	l2464
  5624   00255E                     l2462:
  5625   00255E  9E29               	bcf	(___fldiv@b+2)^0,7,c
  5626   002560                     l2464:
  5627   002560  90D8               	bcf	status,0,c
  5628   002562  303E               	rrcf	___fldiv@bexp^0,w,c
  5629   002564  6E2A               	movwf	(___fldiv@b+3)^0,c
  5630   002566  EF66  F011         	goto	l2378
  5631   00256A                     l790:
  5632   00256A  0012               	return		;funcret
  5633   00256C                     __end_of___fldiv:
  5634                           	callstack 0
  5635                           
  5636 ;; *************** function _test *****************
  5637 ;; Defined at:
  5638 ;;		line 116 in file "./lcd.h"
  5639 ;; Parameters:    Size  Location     Type
  5640 ;;  s               1    wreg     unsigned char 
  5641 ;; Auto vars:     Size  Location     Type
  5642 ;;  s               1   21[COMRAM] unsigned char 
  5643 ;; Return value:  Size  Location     Type
  5644 ;;                  1    wreg      void 
  5645 ;; Registers used:
  5646 ;;		wreg, status,2, status,0, cstack
  5647 ;; Tracked objects:
  5648 ;;		On entry : 0/0
  5649 ;;		On exit  : 0/0
  5650 ;;		Unchanged: 0/0
  5651 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5652 ;;      Params:         0       0       0       0       0       0       0       0       0
  5653 ;;      Locals:         1       0       0       0       0       0       0       0       0
  5654 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5655 ;;      Totals:         1       0       0       0       0       0       0       0       0
  5656 ;;Total ram usage:        1 bytes
  5657 ;; Hardware stack levels used: 1
  5658 ;; Hardware stack levels required when called: 6
  5659 ;; This function calls:
  5660 ;;		_lcd_char
  5661 ;; This function is called by:
  5662 ;;		_main
  5663 ;; This function uses a non-reentrant model
  5664 ;;
  5665                           
  5666                           	psect	text16
  5667   0031BE                     __ptext16:
  5668                           	callstack 0
  5669   0031BE                     _test:
  5670                           	callstack 24
  5671                           
  5672                           ;incstack = 0
  5673                           ;test@s stored from wreg
  5674   0031BE  6E16               	movwf	test@s^0,c
  5675   0031C0                     
  5676                           ;./lcd.h: 119:     lcd_char(s);
  5677   0031C0  5016               	movf	test@s^0,w,c
  5678   0031C2  EC3A  F016         	call	_lcd_char
  5679   0031C6  0012               	return		;funcret
  5680   0031C8                     __end_of_test:
  5681                           	callstack 0
  5682                           
  5683 ;; *************** function _lcd_string *****************
  5684 ;; Defined at:
  5685 ;;		line 109 in file "./lcd.h"
  5686 ;; Parameters:    Size  Location     Type
  5687 ;;  a               1   21[COMRAM] PTR unsigned char 
  5688 ;;		 -> STR_1(5), 
  5689 ;; Auto vars:     Size  Location     Type
  5690 ;;  i               2   23[COMRAM] int 
  5691 ;; Return value:  Size  Location     Type
  5692 ;;                  1    wreg      void 
  5693 ;; Registers used:
  5694 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5695 ;; Tracked objects:
  5696 ;;		On entry : 0/0
  5697 ;;		On exit  : 0/0
  5698 ;;		Unchanged: 0/0
  5699 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5700 ;;      Params:         1       0       0       0       0       0       0       0       0
  5701 ;;      Locals:         2       0       0       0       0       0       0       0       0
  5702 ;;      Temps:          1       0       0       0       0       0       0       0       0
  5703 ;;      Totals:         4       0       0       0       0       0       0       0       0
  5704 ;;Total ram usage:        4 bytes
  5705 ;; Hardware stack levels used: 1
  5706 ;; Hardware stack levels required when called: 6
  5707 ;; This function calls:
  5708 ;;		_lcd_char
  5709 ;; This function is called by:
  5710 ;;		_main
  5711 ;; This function uses a non-reentrant model
  5712 ;;
  5713                           
  5714                           	psect	text17
  5715   0030F0                     __ptext17:
  5716                           	callstack 0
  5717   0030F0                     _lcd_string:
  5718                           	callstack 24
  5719   0030F0                     
  5720                           ;./lcd.h: 109: void lcd_string(char *a);./lcd.h: 110: {;./lcd.h: 111:     int i;;./lcd.h
      +                          : 112:     for(i=0;a[i]!='\0';i++)
  5721   0030F0  0E00               	movlw	0
  5722   0030F2  6E19               	movwf	(lcd_string@i+1)^0,c
  5723   0030F4  0E00               	movlw	0
  5724   0030F6  6E18               	movwf	lcd_string@i^0,c
  5725   0030F8  EF89  F018         	goto	l2804
  5726   0030FC                     l2800:
  5727                           
  5728                           ;./lcd.h: 113:        lcd_char(a[i]);
  5729   0030FC  5016               	movf	lcd_string@a^0,w,c
  5730   0030FE  2418               	addwf	lcd_string@i^0,w,c
  5731   003100  6E17               	movwf	??_lcd_string^0,c
  5732   003102  C017  FFF6         	movff	??_lcd_string,tblptrl
  5733   003106                     	if	0	;There is only one active tblptr byte
  5734   003106                     	endif
  5735   003106                     	if	0	;tblptru may be non-zero
  5736   003106                     	endif
  5737   003106                     	if	0	;tblptru may be non-zero
  5738   003106                     	endif
  5739   003106  0008               	tblrd		*
  5740   003108  50F5               	movf	tablat,w,c
  5741   00310A  EC3A  F016         	call	_lcd_char
  5742   00310E  4A18               	infsnz	lcd_string@i^0,f,c
  5743   003110  2A19               	incf	(lcd_string@i+1)^0,f,c
  5744   003112                     l2804:
  5745   003112  5016               	movf	lcd_string@a^0,w,c
  5746   003114  2418               	addwf	lcd_string@i^0,w,c
  5747   003116  6E17               	movwf	??_lcd_string^0,c
  5748   003118  C017  FFF6         	movff	??_lcd_string,tblptrl
  5749   00311C                     	if	0	;There is only one active tblptr byte
  5750   00311C                     	endif
  5751   00311C                     	if	0	;tblptru may be non-zero
  5752   00311C                     	endif
  5753   00311C                     	if	0	;tblptru may be non-zero
  5754   00311C                     	endif
  5755   00311C  0008               	tblrd		*
  5756   00311E  50F5               	movf	tablat,w,c
  5757   003120  0900               	iorlw	0
  5758   003122  A4D8               	btfss	status,2,c
  5759   003124  EF96  F018         	goto	u3311
  5760   003128  EF98  F018         	goto	u3310
  5761   00312C                     u3311:
  5762   00312C  EF7E  F018         	goto	l2800
  5763   003130                     u3310:
  5764   003130  0012               	return		;funcret
  5765   003132                     __end_of_lcd_string:
  5766                           	callstack 0
  5767                           
  5768 ;; *************** function _lcd_char *****************
  5769 ;; Defined at:
  5770 ;;		line 93 in file "./lcd.h"
  5771 ;; Parameters:    Size  Location     Type
  5772 ;;  data            1    wreg     unsigned char 
  5773 ;; Auto vars:     Size  Location     Type
  5774 ;;  data            1   16[COMRAM] unsigned char 
  5775 ;;  i               2   19[COMRAM] int 
  5776 ;;  i               2   17[COMRAM] int 
  5777 ;;  Upper_Nibble    1   15[COMRAM] unsigned char 
  5778 ;;  Lower_Nibble    1   14[COMRAM] unsigned char 
  5779 ;; Return value:  Size  Location     Type
  5780 ;;                  1    wreg      void 
  5781 ;; Registers used:
  5782 ;;		wreg, status,2, status,0, cstack
  5783 ;; Tracked objects:
  5784 ;;		On entry : 0/0
  5785 ;;		On exit  : 0/0
  5786 ;;		Unchanged: 0/0
  5787 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5788 ;;      Params:         0       0       0       0       0       0       0       0       0
  5789 ;;      Locals:         7       0       0       0       0       0       0       0       0
  5790 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5791 ;;      Totals:         7       0       0       0       0       0       0       0       0
  5792 ;;Total ram usage:        7 bytes
  5793 ;; Hardware stack levels used: 1
  5794 ;; Hardware stack levels required when called: 5
  5795 ;; This function calls:
  5796 ;;		_lcd_set_bit
  5797 ;; This function is called by:
  5798 ;;		_lcd_string
  5799 ;;		_test
  5800 ;; This function uses a non-reentrant model
  5801 ;;
  5802                           
  5803                           	psect	text18
  5804   002C74                     __ptext18:
  5805                           	callstack 0
  5806   002C74                     _lcd_char:
  5807                           	callstack 24
  5808                           
  5809                           ;incstack = 0
  5810                           ;lcd_char@data stored from wreg
  5811   002C74  6E11               	movwf	lcd_char@data^0,c
  5812   002C76                     
  5813                           ;./lcd.h: 93: void lcd_char(char data);./lcd.h: 94: {;./lcd.h: 95:    char Lower_Nibble,
      +                          Upper_Nibble;;./lcd.h: 96:    Lower_Nibble = data&0x0F;
  5814   002C76  5011               	movf	lcd_char@data^0,w,c
  5815   002C78  0B0F               	andlw	15
  5816   002C7A  6E0F               	movwf	lcd_char@Lower_Nibble^0,c
  5817                           
  5818                           ;./lcd.h: 97:    Upper_Nibble = data&0xF0;
  5819   002C7C  5011               	movf	lcd_char@data^0,w,c
  5820   002C7E  0BF0               	andlw	240
  5821   002C80  6E10               	movwf	lcd_char@Upper_Nibble^0,c
  5822   002C82                     
  5823                           ;./lcd.h: 98:    LATDbits.LATD2 = 1;
  5824   002C82  848C               	bsf	140,2,c	;volatile
  5825   002C84                     
  5826                           ;./lcd.h: 99:    lcd_set_bit(Upper_Nibble>>4);
  5827   002C84  3810               	swapf	lcd_char@Upper_Nibble^0,w,c
  5828   002C86  0B0F               	andlw	15
  5829   002C88  EC88  F017         	call	_lcd_set_bit
  5830   002C8C                     
  5831                           ;./lcd.h: 100:    LATDbits.LATD3 = 1;
  5832   002C8C  868C               	bsf	140,3,c	;volatile
  5833   002C8E                     
  5834                           ;./lcd.h: 101:    for(int i=2130483; i<=0; i--) __nop();
  5835   002C8E  0E82               	movlw	130
  5836   002C90  6E13               	movwf	(lcd_char@i+1)^0,c
  5837   002C92  0E33               	movlw	51
  5838   002C94  6E12               	movwf	lcd_char@i^0,c
  5839   002C96                     l99:
  5840   002C96  0000               	nop	
  5841   002C98  0612               	decf	lcd_char@i^0,f,c
  5842   002C9A  A0D8               	btfss	status,0,c
  5843   002C9C  0613               	decf	(lcd_char@i+1)^0,f,c
  5844   002C9E  BE13               	btfsc	(lcd_char@i+1)^0,7,c
  5845   002CA0  EF5A  F016         	goto	u2541
  5846   002CA4  5013               	movf	(lcd_char@i+1)^0,w,c
  5847   002CA6  E108               	bnz	u2540
  5848   002CA8  0412               	decf	lcd_char@i^0,w,c
  5849   002CAA  A0D8               	btfss	status,0,c
  5850   002CAC  EF5A  F016         	goto	u2541
  5851   002CB0  EF5C  F016         	goto	u2540
  5852   002CB4                     u2541:
  5853   002CB4  EF4B  F016         	goto	l99
  5854   002CB8                     u2540:
  5855   002CB8                     
  5856                           ;./lcd.h: 102:    LATDbits.LATD3 = 0;
  5857   002CB8  968C               	bcf	140,3,c	;volatile
  5858   002CBA                     
  5859                           ;./lcd.h: 103:    lcd_set_bit(Lower_Nibble);
  5860   002CBA  500F               	movf	lcd_char@Lower_Nibble^0,w,c
  5861   002CBC  EC88  F017         	call	_lcd_set_bit
  5862   002CC0                     
  5863                           ;./lcd.h: 104:    LATDbits.LATD3 = 1;
  5864   002CC0  868C               	bsf	140,3,c	;volatile
  5865   002CC2                     
  5866                           ;./lcd.h: 105:    for(int i=2130483; i<=0; i--) __nop();
  5867   002CC2  0E82               	movlw	130
  5868   002CC4  6E15               	movwf	(lcd_char@i_173+1)^0,c
  5869   002CC6  0E33               	movlw	51
  5870   002CC8  6E14               	movwf	lcd_char@i_173^0,c
  5871   002CCA                     l101:
  5872   002CCA  0000               	nop	
  5873   002CCC  0614               	decf	lcd_char@i_173^0,f,c
  5874   002CCE  A0D8               	btfss	status,0,c
  5875   002CD0  0615               	decf	(lcd_char@i_173+1)^0,f,c
  5876   002CD2  BE15               	btfsc	(lcd_char@i_173+1)^0,7,c
  5877   002CD4  EF74  F016         	goto	u2551
  5878   002CD8  5015               	movf	(lcd_char@i_173+1)^0,w,c
  5879   002CDA  E108               	bnz	u2550
  5880   002CDC  0414               	decf	lcd_char@i_173^0,w,c
  5881   002CDE  A0D8               	btfss	status,0,c
  5882   002CE0  EF74  F016         	goto	u2551
  5883   002CE4  EF76  F016         	goto	u2550
  5884   002CE8                     u2551:
  5885   002CE8  EF65  F016         	goto	l101
  5886   002CEC                     u2550:
  5887   002CEC                     
  5888                           ;./lcd.h: 106:    LATDbits.LATD3 = 0;
  5889   002CEC  968C               	bcf	140,3,c	;volatile
  5890   002CEE  0012               	return		;funcret
  5891   002CF0                     __end_of_lcd_char:
  5892                           	callstack 0
  5893                           
  5894 ;; *************** function _lcd_set_cursor *****************
  5895 ;; Defined at:
  5896 ;;		line 54 in file "./lcd.h"
  5897 ;; Parameters:    Size  Location     Type
  5898 ;;  a               1    wreg     unsigned char 
  5899 ;;  b               1   16[COMRAM] unsigned char 
  5900 ;; Auto vars:     Size  Location     Type
  5901 ;;  a               1   17[COMRAM] unsigned char 
  5902 ;;  temp            1   20[COMRAM] unsigned char 
  5903 ;;  y               1   19[COMRAM] unsigned char 
  5904 ;;  z               1   18[COMRAM] unsigned char 
  5905 ;; Return value:  Size  Location     Type
  5906 ;;                  1    wreg      void 
  5907 ;; Registers used:
  5908 ;;		wreg, status,2, status,0, cstack
  5909 ;; Tracked objects:
  5910 ;;		On entry : 0/0
  5911 ;;		On exit  : 0/0
  5912 ;;		Unchanged: 0/0
  5913 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5914 ;;      Params:         1       0       0       0       0       0       0       0       0
  5915 ;;      Locals:         4       0       0       0       0       0       0       0       0
  5916 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5917 ;;      Totals:         5       0       0       0       0       0       0       0       0
  5918 ;;Total ram usage:        5 bytes
  5919 ;; Hardware stack levels used: 1
  5920 ;; Hardware stack levels required when called: 6
  5921 ;; This function calls:
  5922 ;;		_lcd_cmd
  5923 ;; This function is called by:
  5924 ;;		_main
  5925 ;; This function uses a non-reentrant model
  5926 ;;
  5927                           
  5928                           	psect	text19
  5929   002E48                     __ptext19:
  5930                           	callstack 0
  5931   002E48                     _lcd_set_cursor:
  5932                           	callstack 24
  5933                           
  5934                           ;incstack = 0
  5935                           ;lcd_set_cursor@a stored from wreg
  5936   002E48  6E12               	movwf	lcd_set_cursor@a^0,c
  5937   002E4A                     
  5938                           ;./lcd.h: 54: void lcd_set_cursor(char a, char b);./lcd.h: 55: {;./lcd.h: 56:     char t
      +                          emp,z,y;;./lcd.h: 57:     if(a== 1)
  5939   002E4A  0412               	decf	lcd_set_cursor@a^0,w,c
  5940   002E4C  A4D8               	btfss	status,2,c
  5941   002E4E  EF2B  F017         	goto	u3291
  5942   002E52  EF2D  F017         	goto	u3290
  5943   002E56                     u3291:
  5944   002E56  EF3E  F017         	goto	l2756
  5945   002E5A                     u3290:
  5946   002E5A                     
  5947                           ;./lcd.h: 58:     {;./lcd.h: 59:       temp = 0x80 + b - 1;
  5948   002E5A  5011               	movf	lcd_set_cursor@b^0,w,c
  5949   002E5C  0F7F               	addlw	127
  5950   002E5E  6E15               	movwf	lcd_set_cursor@temp^0,c
  5951                           
  5952                           ;./lcd.h: 60:         z = temp>>4;
  5953   002E60  3815               	swapf	lcd_set_cursor@temp^0,w,c
  5954   002E62  0B0F               	andlw	15
  5955   002E64  6E13               	movwf	lcd_set_cursor@z^0,c
  5956                           
  5957                           ;./lcd.h: 61:         y = temp & 0x0F;
  5958   002E66  5015               	movf	lcd_set_cursor@temp^0,w,c
  5959   002E68  0B0F               	andlw	15
  5960   002E6A  6E14               	movwf	lcd_set_cursor@y^0,c
  5961   002E6C                     
  5962                           ;./lcd.h: 62:         lcd_cmd(z);
  5963   002E6C  5013               	movf	lcd_set_cursor@z^0,w,c
  5964   002E6E  ECC8  F018         	call	_lcd_cmd
  5965   002E72                     
  5966                           ;./lcd.h: 63:         lcd_cmd(y);
  5967   002E72  5014               	movf	lcd_set_cursor@y^0,w,c
  5968   002E74  ECC8  F018         	call	_lcd_cmd
  5969                           
  5970                           ;./lcd.h: 64:     }
  5971   002E78  EF56  F017         	goto	l91
  5972   002E7C                     l2756:
  5973   002E7C  0E02               	movlw	2
  5974   002E7E  1812               	xorwf	lcd_set_cursor@a^0,w,c
  5975   002E80  A4D8               	btfss	status,2,c
  5976   002E82  EF45  F017         	goto	u3301
  5977   002E86  EF47  F017         	goto	u3300
  5978   002E8A                     u3301:
  5979   002E8A  EF56  F017         	goto	l91
  5980   002E8E                     u3300:
  5981   002E8E                     
  5982                           ;./lcd.h: 66:     {;./lcd.h: 67:         temp = 0xC0 + b - 1;
  5983   002E8E  5011               	movf	lcd_set_cursor@b^0,w,c
  5984   002E90  0FBF               	addlw	191
  5985   002E92  6E15               	movwf	lcd_set_cursor@temp^0,c
  5986                           
  5987                           ;./lcd.h: 68:         z = temp>>4;
  5988   002E94  3815               	swapf	lcd_set_cursor@temp^0,w,c
  5989   002E96  0B0F               	andlw	15
  5990   002E98  6E13               	movwf	lcd_set_cursor@z^0,c
  5991                           
  5992                           ;./lcd.h: 69:         y = temp & 0x0F;
  5993   002E9A  5015               	movf	lcd_set_cursor@temp^0,w,c
  5994   002E9C  0B0F               	andlw	15
  5995   002E9E  6E14               	movwf	lcd_set_cursor@y^0,c
  5996   002EA0                     
  5997                           ;./lcd.h: 70:         lcd_cmd(z);
  5998   002EA0  5013               	movf	lcd_set_cursor@z^0,w,c
  5999   002EA2  ECC8  F018         	call	_lcd_cmd
  6000   002EA6                     
  6001                           ;./lcd.h: 71:         lcd_cmd(y);
  6002   002EA6  5014               	movf	lcd_set_cursor@y^0,w,c
  6003   002EA8  ECC8  F018         	call	_lcd_cmd
  6004   002EAC                     l91:
  6005   002EAC  0012               	return		;funcret
  6006   002EAE                     __end_of_lcd_set_cursor:
  6007                           	callstack 0
  6008                           
  6009 ;; *************** function _lcd_init *****************
  6010 ;; Defined at:
  6011 ;;		line 75 in file "./lcd.h"
  6012 ;; Parameters:    Size  Location     Type
  6013 ;;		None
  6014 ;; Auto vars:     Size  Location     Type
  6015 ;;  i               2    0        int 
  6016 ;; Return value:  Size  Location     Type
  6017 ;;                  1    wreg      void 
  6018 ;; Registers used:
  6019 ;;		wreg, status,2, cstack
  6020 ;; Tracked objects:
  6021 ;;		On entry : 0/0
  6022 ;;		On exit  : 0/0
  6023 ;;		Unchanged: 0/0
  6024 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6025 ;;      Params:         0       0       0       0       0       0       0       0       0
  6026 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6027 ;;      Temps:          1       0       0       0       0       0       0       0       0
  6028 ;;      Totals:         1       0       0       0       0       0       0       0       0
  6029 ;;Total ram usage:        1 bytes
  6030 ;; Hardware stack levels used: 1
  6031 ;; Hardware stack levels required when called: 6
  6032 ;; This function calls:
  6033 ;;		_lcd_cmd
  6034 ;;		_lcd_set_bit
  6035 ;; This function is called by:
  6036 ;;		_main
  6037 ;; This function uses a non-reentrant model
  6038 ;;
  6039                           
  6040                           	psect	text20
  6041   002EAE                     __ptext20:
  6042                           	callstack 0
  6043   002EAE                     _lcd_init:
  6044                           	callstack 24
  6045   002EAE                     
  6046                           ;./lcd.h: 77:   lcd_set_bit(0x00);
  6047   002EAE  0E00               	movlw	0
  6048   002EB0  EC88  F017         	call	_lcd_set_bit
  6049   002EB4                     
  6050                           ;./lcd.h: 79:   lcd_cmd(0x03);
  6051   002EB4  0E03               	movlw	3
  6052   002EB6  ECC8  F018         	call	_lcd_cmd
  6053   002EBA                     
  6054                           ;./lcd.h: 80:   _delay((unsigned long)((5)*(8000000/4000.0)));
  6055   002EBA  0E0D               	movlw	13
  6056   002EBC  6E11               	movwf	??_lcd_init^0,c
  6057   002EBE  0EFC               	movlw	252
  6058   002EC0                     u4527:
  6059   002EC0  2EE8               	decfsz	wreg,f,c
  6060   002EC2  D7FE               	bra	u4527
  6061   002EC4  2E11               	decfsz	??_lcd_init^0,f,c
  6062   002EC6  D7FC               	bra	u4527
  6063   002EC8                     
  6064                           ;./lcd.h: 81:   lcd_cmd(0x03);
  6065   002EC8  0E03               	movlw	3
  6066   002ECA  ECC8  F018         	call	_lcd_cmd
  6067                           
  6068                           ;./lcd.h: 82:   _delay((unsigned long)((11)*(8000000/4000.0)));
  6069   002ECE  0E1D               	movlw	29
  6070   002ED0  6E11               	movwf	??_lcd_init^0,c
  6071   002ED2  0E91               	movlw	145
  6072   002ED4                     u4537:
  6073   002ED4  2EE8               	decfsz	wreg,f,c
  6074   002ED6  D7FE               	bra	u4537
  6075   002ED8  2E11               	decfsz	??_lcd_init^0,f,c
  6076   002EDA  D7FC               	bra	u4537
  6077   002EDC  0000               	nop	
  6078   002EDE                     
  6079                           ;./lcd.h: 83:   lcd_cmd(0x03);
  6080   002EDE  0E03               	movlw	3
  6081   002EE0  ECC8  F018         	call	_lcd_cmd
  6082   002EE4                     
  6083                           ;./lcd.h: 84:   lcd_cmd(0x02);
  6084   002EE4  0E02               	movlw	2
  6085   002EE6  ECC8  F018         	call	_lcd_cmd
  6086   002EEA                     
  6087                           ;./lcd.h: 85:   lcd_cmd(0x02);
  6088   002EEA  0E02               	movlw	2
  6089   002EEC  ECC8  F018         	call	_lcd_cmd
  6090   002EF0                     
  6091                           ;./lcd.h: 86:   lcd_cmd(0x08);
  6092   002EF0  0E08               	movlw	8
  6093   002EF2  ECC8  F018         	call	_lcd_cmd
  6094   002EF6                     
  6095                           ;./lcd.h: 87:   lcd_cmd(0x00);
  6096   002EF6  0E00               	movlw	0
  6097   002EF8  ECC8  F018         	call	_lcd_cmd
  6098   002EFC                     
  6099                           ;./lcd.h: 88:   lcd_cmd(0x0C);
  6100   002EFC  0E0C               	movlw	12
  6101   002EFE  ECC8  F018         	call	_lcd_cmd
  6102   002F02                     
  6103                           ;./lcd.h: 89:   lcd_cmd(0x00);
  6104   002F02  0E00               	movlw	0
  6105   002F04  ECC8  F018         	call	_lcd_cmd
  6106   002F08                     
  6107                           ;./lcd.h: 90:   lcd_cmd(0x06);
  6108   002F08  0E06               	movlw	6
  6109   002F0A  ECC8  F018         	call	_lcd_cmd
  6110   002F0E  0012               	return		;funcret
  6111   002F10                     __end_of_lcd_init:
  6112                           	callstack 0
  6113                           
  6114 ;; *************** function _lcd_clear *****************
  6115 ;; Defined at:
  6116 ;;		line 48 in file "./lcd.h"
  6117 ;; Parameters:    Size  Location     Type
  6118 ;;		None
  6119 ;; Auto vars:     Size  Location     Type
  6120 ;;		None
  6121 ;; Return value:  Size  Location     Type
  6122 ;;                  2   84[None  ] int 
  6123 ;; Registers used:
  6124 ;;		wreg, status,2, cstack
  6125 ;; Tracked objects:
  6126 ;;		On entry : 0/0
  6127 ;;		On exit  : 0/0
  6128 ;;		Unchanged: 0/0
  6129 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6130 ;;      Params:         0       0       0       0       0       0       0       0       0
  6131 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6132 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6133 ;;      Totals:         0       0       0       0       0       0       0       0       0
  6134 ;;Total ram usage:        0 bytes
  6135 ;; Hardware stack levels used: 1
  6136 ;; Hardware stack levels required when called: 6
  6137 ;; This function calls:
  6138 ;;		_lcd_cmd
  6139 ;; This function is called by:
  6140 ;;		_main
  6141 ;; This function uses a non-reentrant model
  6142 ;;
  6143                           
  6144                           	psect	text21
  6145   0031B0                     __ptext21:
  6146                           	callstack 0
  6147   0031B0                     _lcd_clear:
  6148                           	callstack 24
  6149   0031B0                     
  6150                           ;./lcd.h: 50:     lcd_cmd(0);
  6151   0031B0  0E00               	movlw	0
  6152   0031B2  ECC8  F018         	call	_lcd_cmd
  6153                           
  6154                           ;./lcd.h: 51:     lcd_cmd(1);
  6155   0031B6  0E01               	movlw	1
  6156   0031B8  ECC8  F018         	call	_lcd_cmd
  6157   0031BC  0012               	return		;funcret
  6158   0031BE                     __end_of_lcd_clear:
  6159                           	callstack 0
  6160                           
  6161 ;; *************** function _lcd_cmd *****************
  6162 ;; Defined at:
  6163 ;;		line 39 in file "./lcd.h"
  6164 ;; Parameters:    Size  Location     Type
  6165 ;;  a               1    wreg     unsigned char 
  6166 ;; Auto vars:     Size  Location     Type
  6167 ;;  a               1   15[COMRAM] unsigned char 
  6168 ;; Return value:  Size  Location     Type
  6169 ;;                  1    wreg      void 
  6170 ;; Registers used:
  6171 ;;		wreg, status,2, cstack
  6172 ;; Tracked objects:
  6173 ;;		On entry : 0/0
  6174 ;;		On exit  : 0/0
  6175 ;;		Unchanged: 0/0
  6176 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6177 ;;      Params:         0       0       0       0       0       0       0       0       0
  6178 ;;      Locals:         1       0       0       0       0       0       0       0       0
  6179 ;;      Temps:          1       0       0       0       0       0       0       0       0
  6180 ;;      Totals:         2       0       0       0       0       0       0       0       0
  6181 ;;Total ram usage:        2 bytes
  6182 ;; Hardware stack levels used: 1
  6183 ;; Hardware stack levels required when called: 5
  6184 ;; This function calls:
  6185 ;;		_lcd_set_bit
  6186 ;; This function is called by:
  6187 ;;		_lcd_clear
  6188 ;;		_lcd_set_cursor
  6189 ;;		_lcd_init
  6190 ;; This function uses a non-reentrant model
  6191 ;;
  6192                           
  6193                           	psect	text22
  6194   003190                     __ptext22:
  6195                           	callstack 0
  6196   003190                     _lcd_cmd:
  6197                           	callstack 24
  6198                           
  6199                           ;incstack = 0
  6200                           ;lcd_cmd@a stored from wreg
  6201   003190  6E10               	movwf	lcd_cmd@a^0,c
  6202   003192                     
  6203                           ;./lcd.h: 39: void lcd_cmd(char a);./lcd.h: 40: {;./lcd.h: 41:     LATDbits.LATD2 = 0;
  6204   003192  948C               	bcf	140,2,c	;volatile
  6205   003194                     
  6206                           ;./lcd.h: 42:     lcd_set_bit(a);
  6207   003194  5010               	movf	lcd_cmd@a^0,w,c
  6208   003196  EC88  F017         	call	_lcd_set_bit
  6209   00319A                     
  6210                           ;./lcd.h: 43:     LATDbits.LATD3 = 1;
  6211   00319A  868C               	bsf	140,3,c	;volatile
  6212   00319C                     
  6213                           ;./lcd.h: 44:     _delay((unsigned long)((4)*(8000000/4000.0)));
  6214   00319C  0E0B               	movlw	11
  6215   00319E  6E0F               	movwf	??_lcd_cmd^0,c
  6216   0031A0  0E62               	movlw	98
  6217   0031A2                     u4547:
  6218   0031A2  2EE8               	decfsz	wreg,f,c
  6219   0031A4  D7FE               	bra	u4547
  6220   0031A6  2E0F               	decfsz	??_lcd_cmd^0,f,c
  6221   0031A8  D7FC               	bra	u4547
  6222   0031AA  D000               	nop2	
  6223   0031AC                     
  6224                           ;./lcd.h: 45:     LATDbits.LATD3 = 0;
  6225   0031AC  968C               	bcf	140,3,c	;volatile
  6226   0031AE  0012               	return		;funcret
  6227   0031B0                     __end_of_lcd_cmd:
  6228                           	callstack 0
  6229                           
  6230 ;; *************** function _lcd_set_bit *****************
  6231 ;; Defined at:
  6232 ;;		line 16 in file "./lcd.h"
  6233 ;; Parameters:    Size  Location     Type
  6234 ;;  data_bit        1    wreg     unsigned char 
  6235 ;; Auto vars:     Size  Location     Type
  6236 ;;  data_bit        1   13[COMRAM] unsigned char 
  6237 ;; Return value:  Size  Location     Type
  6238 ;;                  1    wreg      void 
  6239 ;; Registers used:
  6240 ;;		wreg
  6241 ;; Tracked objects:
  6242 ;;		On entry : 0/0
  6243 ;;		On exit  : 0/0
  6244 ;;		Unchanged: 0/0
  6245 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6246 ;;      Params:         0       0       0       0       0       0       0       0       0
  6247 ;;      Locals:         1       0       0       0       0       0       0       0       0
  6248 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6249 ;;      Totals:         1       0       0       0       0       0       0       0       0
  6250 ;;Total ram usage:        1 bytes
  6251 ;; Hardware stack levels used: 1
  6252 ;; Hardware stack levels required when called: 4
  6253 ;; This function calls:
  6254 ;;		Nothing
  6255 ;; This function is called by:
  6256 ;;		_lcd_cmd
  6257 ;;		_lcd_init
  6258 ;;		_lcd_char
  6259 ;; This function uses a non-reentrant model
  6260 ;;
  6261                           
  6262                           	psect	text23
  6263   002F10                     __ptext23:
  6264                           	callstack 0
  6265   002F10                     _lcd_set_bit:
  6266                           	callstack 24
  6267                           
  6268                           ;incstack = 0
  6269                           ;lcd_set_bit@data_bit stored from wreg
  6270   002F10  6E0E               	movwf	lcd_set_bit@data_bit^0,c
  6271   002F12                     
  6272                           ;./lcd.h: 16: void lcd_set_bit(char data_bit);./lcd.h: 17: {;./lcd.h: 18:     if(data_bi
      +                          t& 1)
  6273   002F12  A00E               	btfss	lcd_set_bit@data_bit^0,0,c
  6274   002F14  EF8E  F017         	goto	u1941
  6275   002F18  EF90  F017         	goto	u1940
  6276   002F1C                     u1941:
  6277   002F1C  EF93  F017         	goto	l71
  6278   002F20                     u1940:
  6279   002F20                     
  6280                           ;./lcd.h: 19:         LATDbits.LATD4 = 1;
  6281   002F20  888C               	bsf	140,4,c	;volatile
  6282   002F22  EF94  F017         	goto	l1962
  6283   002F26                     l71:
  6284                           
  6285                           ;./lcd.h: 21:         LATDbits.LATD4 = 0;
  6286   002F26  988C               	bcf	140,4,c	;volatile
  6287   002F28                     l1962:
  6288                           
  6289                           ;./lcd.h: 23:     if(data_bit& 2)
  6290   002F28  A20E               	btfss	lcd_set_bit@data_bit^0,1,c
  6291   002F2A  EF99  F017         	goto	u1951
  6292   002F2E  EF9B  F017         	goto	u1950
  6293   002F32                     u1951:
  6294   002F32  EF9E  F017         	goto	l73
  6295   002F36                     u1950:
  6296   002F36                     
  6297                           ;./lcd.h: 24:         LATDbits.LATD5 = 1;
  6298   002F36  8A8C               	bsf	140,5,c	;volatile
  6299   002F38  EF9F  F017         	goto	l1966
  6300   002F3C                     l73:
  6301                           
  6302                           ;./lcd.h: 26:         LATDbits.LATD5 = 0;
  6303   002F3C  9A8C               	bcf	140,5,c	;volatile
  6304   002F3E                     l1966:
  6305                           
  6306                           ;./lcd.h: 28:     if(data_bit& 4)
  6307   002F3E  A40E               	btfss	lcd_set_bit@data_bit^0,2,c
  6308   002F40  EFA4  F017         	goto	u1961
  6309   002F44  EFA6  F017         	goto	u1960
  6310   002F48                     u1961:
  6311   002F48  EFA9  F017         	goto	l75
  6312   002F4C                     u1960:
  6313   002F4C                     
  6314                           ;./lcd.h: 29:         LATDbits.LATD6 = 1;
  6315   002F4C  8C8C               	bsf	140,6,c	;volatile
  6316   002F4E  EFAA  F017         	goto	l1970
  6317   002F52                     l75:
  6318                           
  6319                           ;./lcd.h: 31:         LATDbits.LATD6 = 0;
  6320   002F52  9C8C               	bcf	140,6,c	;volatile
  6321   002F54                     l1970:
  6322                           
  6323                           ;./lcd.h: 33:     if(data_bit& 8)
  6324   002F54  A60E               	btfss	lcd_set_bit@data_bit^0,3,c
  6325   002F56  EFAF  F017         	goto	u1971
  6326   002F5A  EFB1  F017         	goto	u1970
  6327   002F5E                     u1971:
  6328   002F5E  EFB4  F017         	goto	l77
  6329   002F62                     u1970:
  6330   002F62                     
  6331                           ;./lcd.h: 34:         LATDbits.LATD7 = 1;
  6332   002F62  8E8C               	bsf	140,7,c	;volatile
  6333   002F64  EFB5  F017         	goto	l79
  6334   002F68                     l77:
  6335                           
  6336                           ;./lcd.h: 36:         LATDbits.LATD7 = 0;
  6337   002F68  9E8C               	bcf	140,7,c	;volatile
  6338   002F6A                     l79:
  6339   002F6A  0012               	return		;funcret
  6340   002F6C                     __end_of_lcd_set_bit:
  6341                           	callstack 0
  6342                           
  6343 ;; *************** function _low_isr *****************
  6344 ;; Defined at:
  6345 ;;		line 37 in file "rx_main.c"
  6346 ;; Parameters:    Size  Location     Type
  6347 ;;		None
  6348 ;; Auto vars:     Size  Location     Type
  6349 ;;  payload         2   11[COMRAM] unsigned short 
  6350 ;; Return value:  Size  Location     Type
  6351 ;;                  1    wreg      void 
  6352 ;; Registers used:
  6353 ;;		wreg, status,2, status,0, cstack
  6354 ;; Tracked objects:
  6355 ;;		On entry : 0/0
  6356 ;;		On exit  : 0/0
  6357 ;;		Unchanged: 0/0
  6358 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6359 ;;      Params:         0       0       0       0       0       0       0       0       0
  6360 ;;      Locals:         2       0       0       0       0       0       0       0       0
  6361 ;;      Temps:          2       0       0       0       0       0       0       0       0
  6362 ;;      Totals:         4       0       0       0       0       0       0       0       0
  6363 ;;Total ram usage:        4 bytes
  6364 ;; Hardware stack levels used: 1
  6365 ;; Hardware stack levels required when called: 3
  6366 ;; This function calls:
  6367 ;;		i2_lcd_char
  6368 ;;		i2_test
  6369 ;;		i2_uart_read
  6370 ;; This function is called by:
  6371 ;;		Interrupt level 2
  6372 ;; This function uses a non-reentrant model
  6373 ;;
  6374                           
  6375                           	psect	intcode
  6376   000008                     __pintcode:
  6377                           	callstack 0
  6378   000008                     _low_isr:
  6379                           	callstack 24
  6380                           
  6381                           ;incstack = 0
  6382   000008  8252               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  6383   00000A  ED54  F018         	call	int_func,f	;refresh shadow registers
  6384                           
  6385                           	psect	intcode_body
  6386   0030A8                     __pintcode_body:
  6387                           	callstack 24
  6388   0030A8                     int_func:
  6389                           	callstack 24
  6390   0030A8  0006               	pop		; remove dummy address from shadow register refresh
  6391   0030AA                     
  6392                           ;rx_main.c: 38:     if(RCIF){
  6393   0030AA  AA9E               	btfss	3998,5,c	;volatile
  6394   0030AC  EF5A  F018         	goto	i2u374_41
  6395   0030B0  EF5C  F018         	goto	i2u374_40
  6396   0030B4                     i2u374_41:
  6397   0030B4  EF76  F018         	goto	i2l205
  6398   0030B8                     i2u374_40:
  6399   0030B8                     
  6400                           ;rx_main.c: 39:         unsigned short payload = uart_read();
  6401   0030B8  ECED  F016         	call	i2_uart_read	;wreg free
  6402   0030BC  C001  F00C         	movff	?i2_uart_read,low_isr@payload
  6403   0030C0  C002  F00D         	movff	?i2_uart_read+1,low_isr@payload+1
  6404   0030C4                     
  6405                           ;rx_main.c: 40:         if(payload >> 1) test('x');
  6406   0030C4  90D8               	bcf	status,0,c
  6407   0030C6  300D               	rrcf	(low_isr@payload+1)^0,w,c
  6408   0030C8  6E0B               	movwf	(??_low_isr+1)^0,c
  6409   0030CA  300C               	rrcf	low_isr@payload^0,w,c
  6410   0030CC  6E0A               	movwf	??_low_isr^0,c
  6411   0030CE  500A               	movf	??_low_isr^0,w,c
  6412   0030D0  100B               	iorwf	(??_low_isr+1)^0,w,c
  6413   0030D2  B4D8               	btfsc	status,2,c
  6414   0030D4  EF6E  F018         	goto	i2u375_41
  6415   0030D8  EF70  F018         	goto	i2u375_40
  6416   0030DC                     i2u375_41:
  6417   0030DC  EF73  F018         	goto	i2l204
  6418   0030E0                     i2u375_40:
  6419   0030E0  0E78               	movlw	120
  6420   0030E2  ECE4  F018         	call	i2_test
  6421   0030E6                     i2l204:
  6422                           
  6423                           ;rx_main.c: 41:         lcd_char(payload);
  6424   0030E6  500C               	movf	low_isr@payload^0,w,c
  6425   0030E8  EC78  F016         	call	i2_lcd_char
  6426   0030EC                     i2l205:
  6427   0030EC  9252               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  6428   0030EE  0011               	retfie		f
  6429   0030F0                     __end_of_low_isr:
  6430                           	callstack 0
  6431                           
  6432 ;; *************** function i2_uart_read *****************
  6433 ;; Defined at:
  6434 ;;		line 203 in file "./uart.h"
  6435 ;; Parameters:    Size  Location     Type
  6436 ;;		None
  6437 ;; Auto vars:     Size  Location     Type
  6438 ;;  receivedData    1    4[COMRAM] unsigned char 
  6439 ;; Return value:  Size  Location     Type
  6440 ;;                  2    0[COMRAM] short 
  6441 ;; Registers used:
  6442 ;;		wreg, status,2, status,0
  6443 ;; Tracked objects:
  6444 ;;		On entry : 0/0
  6445 ;;		On exit  : 0/0
  6446 ;;		Unchanged: 0/0
  6447 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6448 ;;      Params:         2       0       0       0       0       0       0       0       0
  6449 ;;      Locals:         3       0       0       0       0       0       0       0       0
  6450 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6451 ;;      Totals:         5       0       0       0       0       0       0       0       0
  6452 ;;Total ram usage:        5 bytes
  6453 ;; Hardware stack levels used: 1
  6454 ;; This function calls:
  6455 ;;		Nothing
  6456 ;; This function is called by:
  6457 ;;		_low_isr
  6458 ;; This function uses a non-reentrant model
  6459 ;;
  6460                           
  6461                           	psect	text25
  6462   002DDA                     __ptext25:
  6463                           	callstack 0
  6464   002DDA                     i2_uart_read:
  6465                           	callstack 26
  6466   002DDA                     i2l173:
  6467   002DDA  AA9E               	btfss	3998,5,c	;volatile
  6468   002DDC  EFF2  F016         	goto	i2u369_41
  6469   002DE0  EFF4  F016         	goto	i2u369_40
  6470   002DE4                     i2u369_41:
  6471   002DE4  EFED  F016         	goto	i2l173
  6472   002DE8                     i2u369_40:
  6473   002DE8                     
  6474                           ;./uart.h: 206:     if (FERR) {
  6475   002DE8  A4AB               	btfss	4011,2,c	;volatile
  6476   002DEA  EFF9  F016         	goto	i2u370_41
  6477   002DEE  EFFB  F016         	goto	i2u370_40
  6478   002DF2                     i2u370_41:
  6479   002DF2  EF01  F017         	goto	i2l176
  6480   002DF6                     i2u370_40:
  6481   002DF6  50AE               	movf	174,w,c	;volatile
  6482   002DF8                     i2l2924:
  6483                           
  6484                           ;./uart.h: 208:         return 0x01FF;
  6485   002DF8  0E01               	movlw	1
  6486   002DFA  6E02               	movwf	(?i2_uart_read+1)^0,c
  6487   002DFC  6801               	setf	?i2_uart_read^0,c
  6488   002DFE  EF23  F017         	goto	i2l177
  6489   002E02                     i2l176:
  6490                           
  6491                           ;./uart.h: 211:     if (OERR) {
  6492   002E02  A2AB               	btfss	4011,1,c	;volatile
  6493   002E04  EF06  F017         	goto	i2u371_41
  6494   002E08  EF08  F017         	goto	i2u371_40
  6495   002E0C                     i2u371_41:
  6496   002E0C  EF0D  F017         	goto	i2l178
  6497   002E10                     i2u371_40:
  6498   002E10  50AE               	movf	174,w,c	;volatile
  6499                           
  6500                           ;./uart.h: 213:         RCEN = 0;
  6501   002E12  96C5               	bcf	4037,3,c	;volatile
  6502                           
  6503                           ;./uart.h: 214:         RCEN = 1;
  6504   002E14  86C5               	bsf	4037,3,c	;volatile
  6505   002E16  EFFC  F016         	goto	i2l2924
  6506   002E1A                     i2l178:
  6507                           
  6508                           ;./uart.h: 217:     receivedData = RX9D ? RCREG | 0x0100 : RCREG;
  6509   002E1A  B0AB               	btfsc	4011,0,c	;volatile
  6510   002E1C  EF12  F017         	goto	i2u372_41
  6511   002E20  EF14  F017         	goto	i2u372_40
  6512   002E24                     i2u372_41:
  6513   002E24  EF19  F017         	goto	i2l2936
  6514   002E28                     i2u372_40:
  6515   002E28  CFAE F003          	movff	4014,i2_uart_read$208	;volatile
  6516   002E2C  6A04               	clrf	(i2_uart_read$208+1)^0,c
  6517   002E2E  EF1E  F017         	goto	i2l2938
  6518   002E32                     i2l2936:
  6519   002E32  0E00               	movlw	0
  6520   002E34  10AE               	iorwf	174,w,c	;volatile
  6521   002E36  6E03               	movwf	i2_uart_read$208^0,c
  6522   002E38  0E01               	movlw	1
  6523   002E3A  6E04               	movwf	(i2_uart_read$208+1)^0,c
  6524   002E3C                     i2l2938:
  6525   002E3C  C003  F005         	movff	i2_uart_read$208,i2uart_read@receivedData
  6526   002E40                     
  6527                           ;./uart.h: 218:     return receivedData;
  6528   002E40  C005  F001         	movff	i2uart_read@receivedData,?i2_uart_read
  6529   002E44  6A02               	clrf	(?i2_uart_read+1)^0,c
  6530   002E46                     i2l177:
  6531   002E46  0012               	return		;funcret
  6532   002E48                     __end_ofi2_uart_read:
  6533                           	callstack 0
  6534                           
  6535 ;; *************** function i2_test *****************
  6536 ;; Defined at:
  6537 ;;		line 116 in file "./lcd.h"
  6538 ;; Parameters:    Size  Location     Type
  6539 ;;  s               1    wreg     unsigned char 
  6540 ;; Auto vars:     Size  Location     Type
  6541 ;;  s               1    8[COMRAM] unsigned char 
  6542 ;; Return value:  Size  Location     Type
  6543 ;;                  1    wreg      void 
  6544 ;; Registers used:
  6545 ;;		wreg, status,2, status,0, cstack
  6546 ;; Tracked objects:
  6547 ;;		On entry : 0/0
  6548 ;;		On exit  : 0/0
  6549 ;;		Unchanged: 0/0
  6550 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6551 ;;      Params:         0       0       0       0       0       0       0       0       0
  6552 ;;      Locals:         1       0       0       0       0       0       0       0       0
  6553 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6554 ;;      Totals:         1       0       0       0       0       0       0       0       0
  6555 ;;Total ram usage:        1 bytes
  6556 ;; Hardware stack levels used: 1
  6557 ;; Hardware stack levels required when called: 2
  6558 ;; This function calls:
  6559 ;;		i2_lcd_char
  6560 ;; This function is called by:
  6561 ;;		_low_isr
  6562 ;; This function uses a non-reentrant model
  6563 ;;
  6564                           
  6565                           	psect	text26
  6566   0031C8                     __ptext26:
  6567                           	callstack 0
  6568   0031C8                     i2_test:
  6569                           	callstack 24
  6570                           
  6571                           ;incstack = 0
  6572                           ;i2test@s stored from wreg
  6573   0031C8  6E09               	movwf	i2test@s^0,c
  6574   0031CA                     
  6575                           ;./lcd.h: 119:     lcd_char(s);
  6576   0031CA  5009               	movf	i2test@s^0,w,c
  6577   0031CC  EC78  F016         	call	i2_lcd_char
  6578   0031D0  0012               	return		;funcret
  6579   0031D2                     __end_ofi2_test:
  6580                           	callstack 0
  6581                           
  6582 ;; *************** function i2_lcd_char *****************
  6583 ;; Defined at:
  6584 ;;		line 93 in file "./lcd.h"
  6585 ;; Parameters:    Size  Location     Type
  6586 ;;  data            1    wreg     unsigned char 
  6587 ;; Auto vars:     Size  Location     Type
  6588 ;;  data            1    3[COMRAM] unsigned char 
  6589 ;;  i               2    6[COMRAM] int 
  6590 ;;  i               2    4[COMRAM] int 
  6591 ;;  Upper_Nibble    1    2[COMRAM] unsigned char 
  6592 ;;  Lower_Nibble    1    1[COMRAM] unsigned char 
  6593 ;; Return value:  Size  Location     Type
  6594 ;;                  1    wreg      void 
  6595 ;; Registers used:
  6596 ;;		wreg, status,2, status,0, cstack
  6597 ;; Tracked objects:
  6598 ;;		On entry : 0/0
  6599 ;;		On exit  : 0/0
  6600 ;;		Unchanged: 0/0
  6601 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6602 ;;      Params:         0       0       0       0       0       0       0       0       0
  6603 ;;      Locals:         7       0       0       0       0       0       0       0       0
  6604 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6605 ;;      Totals:         7       0       0       0       0       0       0       0       0
  6606 ;;Total ram usage:        7 bytes
  6607 ;; Hardware stack levels used: 1
  6608 ;; Hardware stack levels required when called: 1
  6609 ;; This function calls:
  6610 ;;		i2_lcd_set_bit
  6611 ;; This function is called by:
  6612 ;;		_low_isr
  6613 ;;		i2_test
  6614 ;; This function uses a non-reentrant model
  6615 ;;
  6616                           
  6617                           	psect	text27
  6618   002CF0                     __ptext27:
  6619                           	callstack 0
  6620   002CF0                     i2_lcd_char:
  6621                           	callstack 24
  6622                           
  6623                           ;incstack = 0
  6624                           ;i2lcd_char@data stored from wreg
  6625   002CF0  6E04               	movwf	i2lcd_char@data^0,c
  6626   002CF2                     
  6627                           ;./lcd.h: 93: void lcd_char(char data);./lcd.h: 94: {;./lcd.h: 95:    char Lower_Nibble,
      +                          Upper_Nibble;;./lcd.h: 96:    Lower_Nibble = data&0x0F;
  6628   002CF2  5004               	movf	i2lcd_char@data^0,w,c
  6629   002CF4  0B0F               	andlw	15
  6630   002CF6  6E02               	movwf	i2lcd_char@Lower_Nibble^0,c
  6631                           
  6632                           ;./lcd.h: 97:    Upper_Nibble = data&0xF0;
  6633   002CF8  5004               	movf	i2lcd_char@data^0,w,c
  6634   002CFA  0BF0               	andlw	240
  6635   002CFC  6E03               	movwf	i2lcd_char@Upper_Nibble^0,c
  6636   002CFE                     
  6637                           ;./lcd.h: 98:    LATDbits.LATD2 = 1;
  6638   002CFE  848C               	bsf	140,2,c	;volatile
  6639   002D00                     
  6640                           ;./lcd.h: 99:    lcd_set_bit(Upper_Nibble>>4);
  6641   002D00  3803               	swapf	i2lcd_char@Upper_Nibble^0,w,c
  6642   002D02  0B0F               	andlw	15
  6643   002D04  ECB6  F017         	call	i2_lcd_set_bit
  6644   002D08                     
  6645                           ;./lcd.h: 100:    LATDbits.LATD3 = 1;
  6646   002D08  868C               	bsf	140,3,c	;volatile
  6647   002D0A                     
  6648                           ;./lcd.h: 101:    for(int i=2130483; i<=0; i--) __nop();
  6649   002D0A  0E82               	movlw	130
  6650   002D0C  6E06               	movwf	(i2lcd_char@i+1)^0,c
  6651   002D0E  0E33               	movlw	51
  6652   002D10  6E05               	movwf	i2lcd_char@i^0,c
  6653   002D12                     i2l99:
  6654   002D12  0000               	nop	
  6655   002D14  0605               	decf	i2lcd_char@i^0,f,c
  6656   002D16  A0D8               	btfss	status,0,c
  6657   002D18  0606               	decf	(i2lcd_char@i+1)^0,f,c
  6658   002D1A  BE06               	btfsc	(i2lcd_char@i+1)^0,7,c
  6659   002D1C  EF98  F016         	goto	i2u327_41
  6660   002D20  5006               	movf	(i2lcd_char@i+1)^0,w,c
  6661   002D22  E108               	bnz	i2u327_40
  6662   002D24  0405               	decf	i2lcd_char@i^0,w,c
  6663   002D26  A0D8               	btfss	status,0,c
  6664   002D28  EF98  F016         	goto	i2u327_41
  6665   002D2C  EF9A  F016         	goto	i2u327_40
  6666   002D30                     i2u327_41:
  6667   002D30  EF89  F016         	goto	i2l99
  6668   002D34                     i2u327_40:
  6669   002D34                     
  6670                           ;./lcd.h: 102:    LATDbits.LATD3 = 0;
  6671   002D34  968C               	bcf	140,3,c	;volatile
  6672   002D36                     
  6673                           ;./lcd.h: 103:    lcd_set_bit(Lower_Nibble);
  6674   002D36  5002               	movf	i2lcd_char@Lower_Nibble^0,w,c
  6675   002D38  ECB6  F017         	call	i2_lcd_set_bit
  6676   002D3C                     
  6677                           ;./lcd.h: 104:    LATDbits.LATD3 = 1;
  6678   002D3C  868C               	bsf	140,3,c	;volatile
  6679   002D3E                     
  6680                           ;./lcd.h: 105:    for(int i=2130483; i<=0; i--) __nop();
  6681   002D3E  0E82               	movlw	130
  6682   002D40  6E08               	movwf	(i2lcd_char@i_173+1)^0,c
  6683   002D42  0E33               	movlw	51
  6684   002D44  6E07               	movwf	i2lcd_char@i_173^0,c
  6685   002D46                     i2l101:
  6686   002D46  0000               	nop	
  6687   002D48  0607               	decf	i2lcd_char@i_173^0,f,c
  6688   002D4A  A0D8               	btfss	status,0,c
  6689   002D4C  0608               	decf	(i2lcd_char@i_173+1)^0,f,c
  6690   002D4E  BE08               	btfsc	(i2lcd_char@i_173+1)^0,7,c
  6691   002D50  EFB2  F016         	goto	i2u328_41
  6692   002D54  5008               	movf	(i2lcd_char@i_173+1)^0,w,c
  6693   002D56  E108               	bnz	i2u328_40
  6694   002D58  0407               	decf	i2lcd_char@i_173^0,w,c
  6695   002D5A  A0D8               	btfss	status,0,c
  6696   002D5C  EFB2  F016         	goto	i2u328_41
  6697   002D60  EFB4  F016         	goto	i2u328_40
  6698   002D64                     i2u328_41:
  6699   002D64  EFA3  F016         	goto	i2l101
  6700   002D68                     i2u328_40:
  6701   002D68                     
  6702                           ;./lcd.h: 106:    LATDbits.LATD3 = 0;
  6703   002D68  968C               	bcf	140,3,c	;volatile
  6704   002D6A  0012               	return		;funcret
  6705   002D6C                     __end_ofi2_lcd_char:
  6706                           	callstack 0
  6707                           
  6708 ;; *************** function i2_lcd_set_bit *****************
  6709 ;; Defined at:
  6710 ;;		line 16 in file "./lcd.h"
  6711 ;; Parameters:    Size  Location     Type
  6712 ;;  data_bit        1    wreg     unsigned char 
  6713 ;; Auto vars:     Size  Location     Type
  6714 ;;  data_bit        1    0[COMRAM] unsigned char 
  6715 ;; Return value:  Size  Location     Type
  6716 ;;                  1    wreg      void 
  6717 ;; Registers used:
  6718 ;;		wreg
  6719 ;; Tracked objects:
  6720 ;;		On entry : 0/0
  6721 ;;		On exit  : 0/0
  6722 ;;		Unchanged: 0/0
  6723 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6724 ;;      Params:         0       0       0       0       0       0       0       0       0
  6725 ;;      Locals:         1       0       0       0       0       0       0       0       0
  6726 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6727 ;;      Totals:         1       0       0       0       0       0       0       0       0
  6728 ;;Total ram usage:        1 bytes
  6729 ;; Hardware stack levels used: 1
  6730 ;; This function calls:
  6731 ;;		Nothing
  6732 ;; This function is called by:
  6733 ;;		i2_lcd_char
  6734 ;; This function uses a non-reentrant model
  6735 ;;
  6736                           
  6737                           	psect	text28
  6738   002F6C                     __ptext28:
  6739                           	callstack 0
  6740   002F6C                     i2_lcd_set_bit:
  6741                           	callstack 24
  6742                           
  6743                           ;incstack = 0
  6744                           ;i2lcd_set_bit@data_bit stored from wreg
  6745   002F6C  6E01               	movwf	i2lcd_set_bit@data_bit^0,c
  6746   002F6E                     
  6747                           ;./lcd.h: 16: void lcd_set_bit(char data_bit);./lcd.h: 17: {;./lcd.h: 18:     if(data_bi
      +                          t& 1)
  6748   002F6E  A001               	btfss	i2lcd_set_bit@data_bit^0,0,c
  6749   002F70  EFBC  F017         	goto	i2u250_41
  6750   002F74  EFBE  F017         	goto	i2u250_40
  6751   002F78                     i2u250_41:
  6752   002F78  EFC1  F017         	goto	i2l71
  6753   002F7C                     i2u250_40:
  6754   002F7C                     
  6755                           ;./lcd.h: 19:         LATDbits.LATD4 = 1;
  6756   002F7C  888C               	bsf	140,4,c	;volatile
  6757   002F7E  EFC2  F017         	goto	i2l2230
  6758   002F82                     i2l71:
  6759                           
  6760                           ;./lcd.h: 21:         LATDbits.LATD4 = 0;
  6761   002F82  988C               	bcf	140,4,c	;volatile
  6762   002F84                     i2l2230:
  6763                           
  6764                           ;./lcd.h: 23:     if(data_bit& 2)
  6765   002F84  A201               	btfss	i2lcd_set_bit@data_bit^0,1,c
  6766   002F86  EFC7  F017         	goto	i2u251_41
  6767   002F8A  EFC9  F017         	goto	i2u251_40
  6768   002F8E                     i2u251_41:
  6769   002F8E  EFCC  F017         	goto	i2l73
  6770   002F92                     i2u251_40:
  6771   002F92                     
  6772                           ;./lcd.h: 24:         LATDbits.LATD5 = 1;
  6773   002F92  8A8C               	bsf	140,5,c	;volatile
  6774   002F94  EFCD  F017         	goto	i2l2234
  6775   002F98                     i2l73:
  6776                           
  6777                           ;./lcd.h: 26:         LATDbits.LATD5 = 0;
  6778   002F98  9A8C               	bcf	140,5,c	;volatile
  6779   002F9A                     i2l2234:
  6780                           
  6781                           ;./lcd.h: 28:     if(data_bit& 4)
  6782   002F9A  A401               	btfss	i2lcd_set_bit@data_bit^0,2,c
  6783   002F9C  EFD2  F017         	goto	i2u252_41
  6784   002FA0  EFD4  F017         	goto	i2u252_40
  6785   002FA4                     i2u252_41:
  6786   002FA4  EFD7  F017         	goto	i2l75
  6787   002FA8                     i2u252_40:
  6788   002FA8                     
  6789                           ;./lcd.h: 29:         LATDbits.LATD6 = 1;
  6790   002FA8  8C8C               	bsf	140,6,c	;volatile
  6791   002FAA  EFD8  F017         	goto	i2l2238
  6792   002FAE                     i2l75:
  6793                           
  6794                           ;./lcd.h: 31:         LATDbits.LATD6 = 0;
  6795   002FAE  9C8C               	bcf	140,6,c	;volatile
  6796   002FB0                     i2l2238:
  6797                           
  6798                           ;./lcd.h: 33:     if(data_bit& 8)
  6799   002FB0  A601               	btfss	i2lcd_set_bit@data_bit^0,3,c
  6800   002FB2  EFDD  F017         	goto	i2u253_41
  6801   002FB6  EFDF  F017         	goto	i2u253_40
  6802   002FBA                     i2u253_41:
  6803   002FBA  EFE2  F017         	goto	i2l77
  6804   002FBE                     i2u253_40:
  6805   002FBE                     
  6806                           ;./lcd.h: 34:         LATDbits.LATD7 = 1;
  6807   002FBE  8E8C               	bsf	140,7,c	;volatile
  6808   002FC0  EFE3  F017         	goto	i2l79
  6809   002FC4                     i2l77:
  6810                           
  6811                           ;./lcd.h: 36:         LATDbits.LATD7 = 0;
  6812   002FC4  9E8C               	bcf	140,7,c	;volatile
  6813   002FC6                     i2l79:
  6814   002FC6  0012               	return		;funcret
  6815   002FC8                     __end_ofi2_lcd_set_bit:
  6816                           	callstack 0
  6817                           
  6818                           	psect	rparam
  6819   000000                     
  6820                           	psect	temp
  6821   000052                     btemp:
  6822                           	callstack 0
  6823   000052                     	ds	1
  6824   000000                     int$flags	set	btemp
  6825   000000                     wtemp8	set	btemp+1
  6826   000000                     ttemp5	set	btemp+1
  6827   000000                     ttemp6	set	btemp+4
  6828   000000                     ttemp7	set	btemp+8
  6829                           
  6830                           	psect	config
  6831                           
  6832                           ;Config register CONFIG2L @ 0x300002
  6833                           ;	unspecified, using default values
  6834                           ;	Power-up Timer Enable bit
  6835                           ;	PWRT = 0x1, unprogrammed default
  6836                           ;	Brown-out Reset Enable bits
  6837                           ;	BOR = 0x3, unprogrammed default
  6838                           ;	Brown-out Reset Voltage bits
  6839                           ;	BORV = 0x3, unprogrammed default
  6840                           ;	USB Voltage Regulator Enable bit
  6841                           ;	VREGEN = 0x0, unprogrammed default
  6842   300002                     	org	3145730
  6843   300002  1F                 	db	31
  6844                           
  6845                           ;Config register CONFIG2H @ 0x300003
  6846                           ;	Watchdog Timer Enable bit
  6847                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  6848                           ;	Watchdog Timer Postscale Select bits
  6849                           ;	WDTPS = 0xF, unprogrammed default
  6850   300003                     	org	3145731
  6851   300003  1E                 	db	30
  6852                           tosu	equ	0xFFF
  6853                           tosh	equ	0xFFE
  6854                           tosl	equ	0xFFD
  6855                           stkptr	equ	0xFFC
  6856                           pclatu	equ	0xFFB
  6857                           pclath	equ	0xFFA
  6858                           pcl	equ	0xFF9
  6859                           tblptru	equ	0xFF8
  6860                           tblptrh	equ	0xFF7
  6861                           tblptrl	equ	0xFF6
  6862                           tablat	equ	0xFF5
  6863                           prodh	equ	0xFF4
  6864                           prodl	equ	0xFF3
  6865                           indf0	equ	0xFEF
  6866                           postinc0	equ	0xFEE
  6867                           postdec0	equ	0xFED
  6868                           preinc0	equ	0xFEC
  6869                           plusw0	equ	0xFEB
  6870                           fsr0h	equ	0xFEA
  6871                           fsr0l	equ	0xFE9
  6872                           wreg	equ	0xFE8
  6873                           indf1	equ	0xFE7
  6874                           postinc1	equ	0xFE6
  6875                           postdec1	equ	0xFE5
  6876                           preinc1	equ	0xFE4
  6877                           plusw1	equ	0xFE3
  6878                           fsr1h	equ	0xFE2
  6879                           fsr1l	equ	0xFE1
  6880                           bsr	equ	0xFE0
  6881                           indf2	equ	0xFDF
  6882                           postinc2	equ	0xFDE
  6883                           postdec2	equ	0xFDD
  6884                           preinc2	equ	0xFDC
  6885                           plusw2	equ	0xFDB
  6886                           fsr2h	equ	0xFDA
  6887                           fsr2l	equ	0xFD9
  6888                           status	equ	0xFD8

Data Sizes:
    Strings     5
    Constant    0
    Data        0
    BSS         12
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     73      81
    BANK0           160     97     101
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    lcd_string@a	PTR unsigned char  size(1) Largest target is 5
		 -> STR_1(CODE[5]), 

    sp__uart_read_buffer	PTR short  size(1) Largest target is 10
		 -> main@payload(BANK0[10]), 

    uart_read_buffer@buffer	PTR short  size(1) Largest target is 10
		 -> main@payload(BANK0[10]), 


Critical Paths under _main in COMRAM

    _uart_read_buffer->_uart_read
    _uart_init->___fltol
    _fminf->___fpclassifyf
    ___fltol->___fladd
    ___flsub->___fladd
    ___fladd->___fldiv
    ___fldiv->___flmul
    _test->_lcd_char
    _lcd_string->_lcd_char
    _lcd_char->_lcd_set_bit
    _lcd_set_cursor->_lcd_cmd
    _lcd_init->_lcd_cmd
    _lcd_clear->_lcd_cmd
    _lcd_cmd->_lcd_set_bit

Critical Paths under _low_isr in COMRAM

    _low_isr->i2_test
    i2_test->i2_lcd_char
    i2_lcd_char->i2_lcd_set_bit

Critical Paths under _main in BANK0

    _main->_uart_init
    _uart_init->_fabsf
    _fabsf->___flsub
    ___fltol->___fladd
    ___flsub->___fladd

Critical Paths under _low_isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _low_isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _low_isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _low_isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _low_isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _low_isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _low_isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _low_isr in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                12    12      0   30283
                                             85 BANK0     12    12      0
                          _lcd_clear
                           _lcd_init
                     _lcd_set_cursor
                         _lcd_string
                               _test
                          _uart_init
                   _uart_read_buffer
 ---------------------------------------------------------------------------------
 (1) _uart_read_buffer                                     6     3      3     298
                                             18 COMRAM     6     3      3
                          _uart_read
 ---------------------------------------------------------------------------------
 (2) _uart_read                                            5     3      2      50
                                             13 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (1) _uart_init                                           61    61      0   28277
                                             24 BANK0     61    61      0
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flsub
                            ___fltol
                           ___xxtofl
                              _fabsf
                              _fminf
 ---------------------------------------------------------------------------------
 (2) _fminf                                               10     2      8    2549
                                             27 COMRAM    10     2      8
                             ___flge
                      ___fpclassifyf
                         ___signbitf
 ---------------------------------------------------------------------------------
 (3) ___signbitf                                          12     8      4     274
                                             13 COMRAM    12     8      4
 ---------------------------------------------------------------------------------
 (3) ___fpclassifyf                                       14    10      4     287
                                             13 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (3) ___flge                                              12     4      8    1246
                                             13 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (2) _fabsf                                                8     4      4     959
                                             16 BANK0      8     4      4
                            ___fldiv (ARG)
                            ___flsub (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4    1234
                                             13 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             10     6      4     457
                                             71 COMRAM     2     2      0
                                              8 BANK0      8     4      4
                            ___fladd (ARG)
                            ___fldiv (ARG)
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flsub                                              8     0      8    6167
                                              8 BANK0      8     0      8
                            ___fladd
                            ___fldiv (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fladd                                             16     8      8    3802
                                             63 COMRAM     8     0      8
                                              0 BANK0      8     8      0
                            ___fldiv (ARG)
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flmul                                             25    17      8    2048
                                             13 COMRAM    25    17      8
 ---------------------------------------------------------------------------------
 (2) ___fleq                                              12     4      8     646
                                             13 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (2) ___fldiv                                             25    17      8    5351
                                             38 COMRAM    25    17      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _test                                                 1     1      0     292
                                             21 COMRAM     1     1      0
                           _lcd_char
 ---------------------------------------------------------------------------------
 (1) _lcd_string                                           4     3      1     436
                                             21 COMRAM     4     3      1
                           _lcd_char
 ---------------------------------------------------------------------------------
 (2) _lcd_char                                             7     7      0     270
                                             14 COMRAM     7     7      0
                        _lcd_set_bit
 ---------------------------------------------------------------------------------
 (1) _lcd_set_cursor                                       5     4      1     456
                                             16 COMRAM     5     4      1
                            _lcd_cmd
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             3     3      0     244
                                             16 COMRAM     1     1      0
                            _lcd_cmd
                        _lcd_set_bit
 ---------------------------------------------------------------------------------
 (1) _lcd_clear                                            0     0      0     110
                            _lcd_cmd
 ---------------------------------------------------------------------------------
 (2) _lcd_cmd                                              2     2      0     110
                                             14 COMRAM     2     2      0
                        _lcd_set_bit
 ---------------------------------------------------------------------------------
 (3) _lcd_set_bit                                          1     1      0      88
                                             13 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _low_isr                                              4     4      0     657
                                              9 COMRAM     4     4      0
                         i2_lcd_char
                             i2_test
                        i2_uart_read
 ---------------------------------------------------------------------------------
 (5) i2_uart_read                                          5     3      2      50
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (5) i2_test                                               1     1      0     292
                                              8 COMRAM     1     1      0
                         i2_lcd_char
 ---------------------------------------------------------------------------------
 (6) i2_lcd_char                                           7     7      0     270
                                              1 COMRAM     7     7      0
                      i2_lcd_set_bit
 ---------------------------------------------------------------------------------
 (7) i2_lcd_set_bit                                        1     1      0      88
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _lcd_clear
     _lcd_cmd
       _lcd_set_bit
   _lcd_init
     _lcd_cmd
     _lcd_set_bit
   _lcd_set_cursor
     _lcd_cmd
   _lcd_string
     _lcd_char
       _lcd_set_bit
   _test
     _lcd_char
   _uart_init
     ___fladd
       ___fldiv (ARG)
         ___flmul (ARG)
         ___xxtofl (ARG)
       ___flmul (ARG)
     ___fldiv
     ___fleq
     ___flge
     ___flmul
     ___flsub
       ___fladd
       ___fldiv (ARG)
       ___xxtofl (ARG)
     ___fltol
       ___fladd (ARG)
       ___fldiv (ARG)
       ___flmul (ARG)
     ___xxtofl
     _fabsf
       ___fldiv (ARG)
       ___flsub (ARG)
       ___xxtofl (ARG)
     _fminf
       ___flge
       ___fpclassifyf
       ___signbitf
   _uart_read_buffer
     _uart_read

 _low_isr (ROOT)
   i2_lcd_char
     i2_lcd_set_bit
   i2_test
     i2_lcd_char
   i2_uart_read

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      29        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     61      65       5       63.1%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     49      51       1       86.2%
BITBIGSFRhhhhl      2C      0       0      21        0.0%
BITBIGSFRl          2C      0       0      27        0.0%
BITBIGSFRhhhhh       D      0       0      20        0.0%
BITBIGSFRhlhh        C      0       0      24        0.0%
BITBIGSFRhhhl        C      0       0      22        0.0%
BITBIGSFRhlhl        7      0       0      25        0.0%
BITBIGSFRhhlh        7      0       0      23        0.0%
BITBIGSFRhll         7      0       0      26        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      B6      28        0.0%
DATA                 0      0      B6       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Sat Sep 07 09:06:12 2024

            ?_lcd_set_bit 0001              ___fldiv@aexp 003F              ___fldiv@bexp 003E  
            lcd_char@data 0011             lcd_char@i_173 0014              ___fldiv@sign 0037  
                      l71 2F26                        l73 2F3C                        l82 31AE  
                      l75 2F52                        l91 2EAC                        l77 2F68  
                      l85 31BC                        l79 2F6A                        l96 2F0E  
                      l99 2C96                       l100 2CB8                       l101 2CCA  
                     l102 2CEC                       l103 2CEE                       l112 31C6  
                     l130 17DA                       l140 186E                       l132 1800  
                     l109 3130                       l141 1880                       l133 1802  
                     l125 174A                       l142 1892                       l134 184E  
                     l135 1822                       l127 18E4                       l136 1834  
                     l145 18BA                       l137 1846                       l129 17E6  
                     l146 18CC                       l138 18E2                       l147 18DE  
                     l139 189A                       l173 2D6C                       l175 2D7A  
                     l176 2D94                       l505 2944                       l177 2DD8  
                     l178 2DAC                       l188 305E                       l801 2410  
                     l473 2A02                       l803 2488                       l467 2BF0  
                     l804 2476                       l822 1E6C                       l478 2A48  
                     l831 20DA                       l832 20C8                       l736 1AD6  
                     l912 2B46                       l753 1BF0                       l745 1DA6  
                     l737 1AC4                       l826 21D0                       l762 1CC0  
                     l738 1A8A                       l763 1CAE                       l829 2062  
                     l790 256A                       l870 265A                       l918 3016  
                     l839 2192                       l863 25C2                       l792 23CA  
                     l778 30A6                       l866 271E                       l795 238E  
                     l884 3166                       l892 283C                       l877 26B6  
                     _GIE 7F97       __end_ofi2_uart_read 2E48                       _RX9 7D5E  
                     _TX9 7D66                       wreg 0FE8              ___flmul@aexp 001F  
            ___flmul@bexp 0020              ___flmul@sign 001A              ___flmul@temp 0025  
            ___flmul@prod 0021           ?_lcd_set_cursor 0011                i2_lcd_char 2CF0  
            ___fltol@exp1 0049                      l3000 1954                      l2200 2A6A  
                    l3010 197E                      l3002 1966                      l2202 2AA8  
                    l2210 2AE8                      l3100 1B54                      l3012 198E  
                    l3020 19B8                      l3004 1968                      l2212 2AFA  
                    l2204 2AD0                      l2220 2FC8                      l2300 2794  
                    l3110 1BC0                      l3102 1B5E                      l3030 19F0  
                    l3022 19C8                      l3014 199E                      l3006 196E  
                    l2206 2ADC                      l2222 2FE8                      l2302 27DC  
                    l2310 2D6C                      l2400 2352                      l3112 1BD0  
                    l3104 1B64                      l3040 1A04                      l3032 19F4  
                    l3024 19DA                      l3016 19AE                      l3008 197C  
                    l2216 2B3E                      l3200 09FE                      l2312 2D88  
                    l2250 31AC                      l2242 3192                      l2410 2398  
                    l2402 235A                      l3130 1C52                      l3122 1C2A  
                    l3106 1B8A                      l3114 1BE0                      l3050 1A18  
                    l3042 1A08                      l3034 19F8                      l3026 19E8  
                    l3018 19B0                      l2306 2806                      l3210 0CFE  
                    l3202 0BF2                      l2330 2DD2                      l2314 2D8A  
                    l2244 3194                      l2260 2C8E                      l2252 2C76  
                    l2420 23F0                      l2412 23B6                      l2404 236A  
                    l2340 21EE                      l2500 1E46                      l3132 1C5A  
                    l3124 1C34                      l3116 1C06                      l3108 1BBE  
                    l3140 1C7E                      l3060 1A2C                      l3052 1A1C  
                    l3044 1A0C                      l3036 19FC                      l3028 19EC  
                    l2180 2984                      l3220 0E3C                      l3212 0D98  
                    l3204 0C02                      l2324 2DBA                      l3300 2C10  
                    l2246 319A                      l2270 2CBA                      l2254 2C82  
                    l2430 242E                      l2422 23F6                      l2414 23B8  
                    l2406 237E                      l2342 21FE                      l2350 2228  
                    l2334 21D2                      l2502 1E56                      l3150 1CD0  
                    l3142 1C82                      l3134 1C5E                      l3126 1C42  
                    l3118 1C16                      l3070 1AA4                      l3062 1A56  
                    l3054 1A20                      l3046 1A10                      l3038 1A00  
                    l2190 29F0                      l2182 29B2                      l3230 1032  
                    l3222 0ED6                      l3214 0DE0                      l3206 0C1C  
                    l2326 2DC4                      l2318 2DA2                      l3302 2C18  
                    l2248 319C                      l2280 2CCC                      l2272 2CC0  
                    l2256 2C84                      l2440 2498                      l2432 2432  
                    l2424 2400                      l2416 23C8                      l2408 238C  
                    l2360 2254                      l2352 2238                      l2344 220E  
                    l2336 21DE                      l2520 1ED8                      l2512 1EA0  
                    l2504 1E5C                      l3160 1D36                      l3152 1CDC  
                    l3144 1C90                      l3136 1C6E                      l3128 1C44  
                    l3080 1AE4                      l3072 1AA8                      l3064 1A72  
                    l3056 1A24                      l3048 1A14                      l2192 2A40  
                    l2184 29C2                      l2176 2946                      l3240 10E6  
                    l3232 1042                      l3224 0F1E                      l3216 0E12  
                    l3208 0CB6                      l2328 2DCE                      l3312 2C38  
                    l3304 2C1E                      l2282 2CD2                      l2274 2CC2  
                    l2266 2C98                      l2258 2C8C                      l2450 24FA  
                    l2442 24A4                      l2434 2440                      l2426 240E  
                    l2418 23DA                      l2362 2264                      l2370 228E  
                    l2354 223E                      l2346 221E                      l2338 21EC  
                    l2610 2B76                      l2530 1F22                      l2522 1EF0  
                    l2514 1EAC                      l2506 1E7C                      l3170 1D7E  
                    l3162 1D46                      l3154 1CEA                      l3146 1CA6  
                    l3138 1C70                      l3090 1B26                      l3082 1AF4  
                    l3074 1AB6                      l3066 1A82                      l3058 1A28  
                    l2194 2A46                      l2186 29D0                      l2178 2974  
                    l3242 12DA                      l3250 1528                      l3234 105C  
                    l3226 0FB8                      l3218 0E22                      l3314 2C4A  
                    l3306 2C2E                      l2268 2C9E                      l2460 2558  
                    l2452 2510                      l2444 24B2                      l2436 246E  
                    l2428 2420                      l2380 22D0                      l2372 229E  
                    l2364 2274                      l2356 2244                      l2348 2220  
                    l2620 2BEE                      l2612 2B86                      l2540 1F78  
                    l2532 1F32                      l2524 1EFC                      l2516 1EB6  
                    l2508 1E8C                      l3172 1D80                      l3164 1D66  
                    l3156 1D24                      l3092 1B34                      l3076 1AB8  
                    l3068 1A98                      l2700 26C6                      l2284 3132  
                    l2188 29E2                      l2292 2720                      l3260 1798  
                    l3252 1546                      l3244 12EA                      l3236 1090  
                    l3228 1000                      l3316 2C50                      l2462 255E  
                    l2454 252A                      l2446 24DC                      l2374 22B4  
                    l2366 2284                      l2358 2252                      l2614 2BB4  
                    l2550 201C                      l2542 1F94                      l2534 1F3E  
                    l2526 1F08                      l2518 1ECC                      l3174 1D86  
                    l3166 1D6A                      l3158 1D26                      l3094 1B40  
                    l3086 1B08                      l3078 1AC2                      l3182 3060  
                    l2630 286A                      l2710 270E                      l2702 26CA  
                    l2286 3152                      l2198 2A4A                      l2294 2746  
                    l3270 1830                      l3262 17CA                      l3254 173A  
                    l3246 14E0                      l3238 10C8                      l3190 082E  
                    l2800 30FC                      l2464 2560                      l2456 2546  
                    l2448 24E0                      l2392 2308                      l2376 22C4  
                    l2384 22E4                      l2368 2286                      l2616 2BC4  
                    l2608 2B48                      l2560 2072                      l2552 202A  
                    l2544 1FA0                      l2536 1F4E                      l2528 1F16  
                    l2480 1DD4                      l2472 1DA8                      l3176 1D94  
                    l3168 1D78                      l3096 1B44                      l3088 1B18  
                    l3184 3072                      l2640 28B8                      l2632 2894  
                    l2624 283E                      l2704 26EE                      l2288 3156  
                    l2296 275A                      l3280 188E                      l3272 1842  
                    l3264 17FA                      l3248 14F0                      l3256 175A  
                    l3192 08BE                      l2802 310E                      l2458 254A  
                    l2394 2322                      l2386 22F4                      l2378 22CC  
                    l2618 2BE8                      l2562 2080                      l2554 2048  
                    l2546 1FBC                      l2538 1F68                      l2490 1E10  
                    l2482 1DE4                      l2474 1DB4                      l3178 1D96  
                    l3098 1B52                      l2650 28E4                      l2634 2896  
                    l2626 2856                      l2706 26FE                      l2298 2780  
                    l3282 18A8                      l3274 185C                      l3266 1810  
                    l3258 178C                      l3194 094E                      l3290 2BF2  
                    l2804 3112                      l2396 2332                      l2388 22F4  
                    l2572 20EA                      l2580 2132                      l2564 2084  
                    l2556 2052                      l2548 1FE6                      l2492 1E16  
                    l2484 1DF4                      l2476 1DC2                      l2660 2914  
                    l2636 28A6                      l2708 270C                      l3284 18B6  
                    l3276 186A                      l3268 181E                      l3196 09DE  
                    l3188 080C                      l3292 2BFA                      l2750 2E5A  
                    l2806 31C0                      l2398 2342                      l2590 21A6  
                    l2582 214C                      l2574 20F6                      l2566 2092  
                    l2558 2060                      l2494 1E24                      l2486 1DFA  
                    l2478 1DC4                      l2662 2924                      l2646 28D0  
                    l2638 28AA                      l2670 257E                      l3286 18C8  
                    l3278 187C                      l3198 09DE                      l2910 3018  
                    l3294 2BFE                      l1960 2F20                      l2760 2EA0  
                    l2752 2E6C                      l2592 21B4                      l2584 2160  
                    l2576 2104                      l2568 20C0                      l2496 1E26  
                    l2488 1E0A                      l2664 2934                      l2656 28F8  
                    l2648 28DA                      l2680 25FC                      l2672 258C  
                    l3288 18DA                      l2912 3024                      l3296 2C02  
                    l1970 2F54                      l1962 2F28                      l2746 31B0  
                    l2762 2EA6                      l2754 2E72                      l2594 21B6  
                    l2586 217A                      l2578 212E                      l2498 1E36  
                    l2658 2904                      l2690 2650                      l2682 2604  
                    l2674 25D2                      l2914 303C                      l3298 2C0C  
                    l1972 2F62                      l1964 2F36                      l2780 2EC8  
                    l2764 2EAE                      l2756 2E7C                      l2748 2E4A  
                    l2588 2196                      l2596 21BC                      l2692 268C  
                    l2684 2610                      l2676 25E8                      l2668 256E  
                    l2916 3040                      l1966 2F3E                      l1958 2F12  
                    l2790 2EF6                      l2782 2EDE                      l2766 2EB4  
                    l2758 2E8E                      l2598 21C0                      l2694 2698  
                    l2686 2642                      l1968 2F4C                      l2792 2EFC  
                    l2784 2EE4                      l2776 2EB4                      l2768 2EB4  
                    l2696 26A6                      l2688 2644                      l2794 2F02  
                    l2786 2EEA                      l2778 2EBA                      l2698 26C4  
                    l2796 2F08                      l2788 2EF0                      l2980 18E6  
                    l2798 30F0                      l2990 1924                      l2982 18F4  
                    l2992 1934                      l2984 1902                      l2994 1936  
                    l2986 1904                      l2988 1914                      l2996 193E  
                    l2998 194E                      STR_1 0801                      _BRGH 7D62  
                    _CREN 7D5C                      _FERR 7D5A                      u3000 20C0  
                    u3001 20BC                      u3010 20D6                      u3011 20D2  
                    u3020 20EA                      u3100 2856                      u3021 20E6  
                    u3101 2852                      u3030 2104                      u3110 288A  
                    u3031 2100                      u3040 214C                      u4000 1C42  
                    u3120 28B8                      u3200 263E                      u2400 29F0  
                    _LATD 0F8C                      u3041 2148                      u4001 1C3E  
                    u3121 28B4                      u3201 263A                      u2401 29EC  
                    u3050 217A                      u4010 1C52                      u3130 28CC  
                    u3210 2688                      u2410 2A40                      u3051 2176  
                    u4011 1C4E                      u3131 28C8                      u3115 2880  
                    u3211 2684                      u2411 2A3C                      u3300 2E8E  
                    u3060 21B4                      u4100 1D36                      u4020 1C6E  
                    u3140 28F4                      u3220 26A6                      u2420 2A8A  
                    u3301 2E8A                      u3061 21B0                      u4101 1D32  
                    u4021 1C6A                      u3141 28F0                      u3221 26A2  
                    u3310 3130                      u3070 2B76                      u4110 1D46  
                    u4030 1C7E                      u3150 2914                      u3230 26B6  
                    u2430 2AA8                      u3311 312C                      u3071 2B72  
                    u4111 1D42                      u4031 1C7A                      u3151 2910  
                    u3231 26B2                      u2431 2AA4                      u3080 2BB4  
                    u4120 1D66                      u4040 1C90                      u3160 2924  
                    u3240 26C4                      u2440 2AD0                      u2600 2838  
                    u3081 2BB0                      u4121 1D62                      u4041 1C8C  
                    u3161 2920                      u3241 26C0                      u2441 2ACC  
                    u2425 2A80                      u2601 2834                      u3090 2BE8  
                    u4130 1D78                      u4050 1CA6                      u3250 26FE  
                    u3170 257E                      u2370 2974                      u2450 2AFA  
                    u4210 0E12                      u2610 2D7A                      u3091 2BE4  
                    u4131 1D74                      u4051 1CA2                      u3251 26FA  
                    u3171 257A                      u2371 2970                      u2451 2AF6  
                    u4211 0E0E                      u2611 2D76                      u2540 2CB8  
                    u2700 2274                      u4140 1D94                      u4060 1CBC  
                    u3260 270C                      u3180 258C                      u2380 29B2  
                    u2620 2D88                      u2541 2CB4                      u2701 2270  
                    u4141 1D90                      u4061 1CB8                      u3261 2708  
                    u3181 2588                      u2381 29AE                      u4205 0D20  
                    u2621 2D84                      u2550 2CEC                      u2710 22B4  
                    u4070 1CD0                      u3190 25E8                      u2390 29D0  
                    u2470 2B34                      u4310 14E0                      u4150 09FE  
                    u2630 2DA2                      u2551 2CE8                      u2711 22B0  
                    u4071 1CCC                      u3191 25E4                      u2391 29CC  
                    u2471 2B2E                      u4311 14DC                      u4151 09FA  
                    u2631 2D9E                      u2800 2440                      u2720 22F4  
                    u4080 1CEA                      u2480 2B36                      u2560 2746  
                    u4400 181E                      u4320 1546                      u4240 1032  
                    u2640 2DBA                      u2801 243C                      u2721 22F0  
                    u4081 1CE6                      u2465 2B0C                      u2561 2742  
                    u4401 181A                      u4321 1542                      u4305 13EE  
                    u4241 102E                      u4225 0E5E                      u2641 2DB6  
                    u3290 2E5A                      u2810 246E                      u2730 236A  
                    u2650 21EC                      u4090 1D24                      u2490 3008  
                    u2570 2780                      u4410 1830                      u4250 10E6  
                    u3291 2E56                      u2811 246A                      u2731 2366  
                    u2651 21E8                      u4091 1D20                      u2571 277C  
                    u4411 182C                      u4251 10E2                      u4235 0F40  
                    u1940 2F20                      u2820 2484                      u2740 238C  
                    u2660 21FE                      u2900 1DE4                      u2580 27DC  
                    u4500 18DA                      u4420 1842                      u4180 0BF2  
                    u1941 2F1C                      u2821 2480                      u2741 2388  
                    u2661 21FA                      u2901 1DE0                      u2581 27D8  
                    u4501 18D6                      u4421 183E                      u4181 0BEE  
                    u4165 0A20                      u1950 2F36                      u2830 2498  
                    u2750 23B6                      u2670 220E                      u2910 1E24  
                    u2590 2802                      u4430 185C                      u4350 173A  
                    u4510 2C6C                      u1951 2F32                      u2831 2494  
                    u2751 23B2                      u2671 220A                      u2911 1E20  
                    u2495 2FFE                      u2591 27FE                      u4431 1858  
                    u4351 1736                      u4335 1568                      u4175 0B00  
                    u4511 2C68                      u1960 2F4C                      u2840 24B2  
                    u2760 23DA                      u2680 2252                      u2920 1E36  
                    u3800 197C                      u4440 186A                      u4360 178C  
                    u4280 12DA                      u1961 2F48                      u2841 24AE  
                    u2761 23D6                      u2681 224E                      u2921 1E32  
                    u3801 1978                      u4441 1866                      u4361 1788  
                    u4345 1648                      u4281 12D6                      u4265 1108  
                    u1970 2F62                      u2850 24FA                      u2770 23F0  
                    u2690 2264                      u2930 1E46                      u3810 198E  
                    u4450 187C                      u4370 17CA                      u1971 2F5E  
                    u2851 24F6                      u2771 23EC                      u2691 2260  
                    u2931 1E42                      u3811 198A                      u4451 1878  
                    u4371 17C6                      u4275 11E8                      u4195 0C3E  
                    _PEIE 7F96                      u2860 252A                      u2780 240E  
                    u2940 1E7C                      u3900 1AD6                      u3820 199E  
                    u4460 188E                      u4380 17FA                      u2861 2526  
                    u2781 240A                      u2941 1E78                      u3901 1AD2  
                    u3821 199A                      u4461 188A                      u4381 17F6  
                    u2870 2558                      u2790 242E                      u2950 1E8C  
                    u3910 1AE4                      u3830 19DA                      u4470 18A8  
                    u4390 1810                      u4527 2EC0                      u2871 2554  
                    u2791 242A                      u2951 1E88                      u3911 1AE0  
                    u3831 19D6                      u4471 18A4                      u4391 180C  
                    u4295 130C                      u2960 2006                      u2880 1DC2  
                    u3920 1AF4                      u3840 19E8                      u3760 1902  
                    u4480 18B6                      u3680 305E                      u4537 2ED4  
                    u2881 1DBE                      u3921 1AF0                      u3841 19E4  
                    u3761 18FE                      u4481 18B2                      u3681 305A  
                    u2970 2060                      u2890 1DD4                      u3930 1B26  
                    u3850 1A56                      u3770 1914                      u4490 18C8  
                    u4547 31A2                      u2971 205C                      u2891 1DD0  
                    u3931 1B22                      u3851 1A52                      u3771 1910  
                    u4491 18C4                      _RCIE 7CED                      u2980 2080  
                    u3940 1B34                      u3860 1A6E                      u3780 1924  
                    _RCEN 7E2B                      _RCIF 7CF5                      u2981 207C  
                    u2965 1FFC                      u3941 1B30                      u3861 1A68  
                    u3781 1920                      u2990 2092                      u3950 1B52  
                    u3870 1A70                      u3790 1966                      u2991 208E  
                    u3951 1B4E                      u3791 1962                      u3960 1B8A  
                    u3880 1A98                      u3961 1B86                      u3881 1A94  
                    u3970 1BD0                      u3890 1AB6                      u3971 1BCC  
                    u3891 1AB2                      u3980 1C06                      u3981 1C02  
                    u3990 1C16                      i2l71 2F82                      u3991 1C12  
                    i2l73 2F98                      _OERR 7D59                      i2l75 2FAE  
                    i2l77 2FC4                      i2l79 2FC6                      i2l99 2D12  
                    _RX9D 7D58                      _SPEN 7D5F                      _TX9D 7D60  
                    _TRMT 7D61                      _TXIE 7CEC                      _TXIF 7CF4  
                    _TXEN 7D65                      _SYNC 7D64               main@payload 00B5  
                    _main 2BF2    uart_read_buffer@buffer 0013                      _test 31BE  
                    fsr2h 0FDA                      indf2 0FDF                      fsr2l 0FD9  
                    btemp 0052    uart_read_buffer@length 0014             ___fpclassifyf 2A4A  
                    prodh 0FF4                      prodl 0FF3                      start 000E  
             lcd_string@a 0016               lcd_string@i 0018           ___fldiv@new_exp 0038  
            ___param_bank 0000    i2lcd_char@Upper_Nibble 0003             ___fltol@sign1 0048  
         __end_of___fladd 1DA8                     ?_main 0001           __end_of___fldiv 256C  
                   _BRG16 7DC3           __end_of___flmul 21D2                     ?_test 0001  
         __end_of___flsub 30A8           __end_of___fltol 2946                     i2l100 2D34  
                   i2l101 2D46                     i2l102 2D68                     i2l103 2D6A  
                   i2l112 31D0                     i2l204 30E6                     i2l205 30EC  
                   i2l173 2DDA                     i2l175 2DE8                     i2l176 2E02  
                   i2l177 2E46                     i2l178 2E1A                     _RCREG 0FAE  
                   _SPBRG 0FAF                     _TRISD 0F95                     _RXDTP 7DC5  
                   _TXCKP 7DC4                     _TXREG 0FAD         uart_read_buffer@i 0017  
         __end_of_lcd_cmd 31B0                     _fabsf 3132                     _fminf 2720  
                   main@i 00BF           __end_of_low_isr 30F0                     tablat 0FF5  
            ___signbitf@x 000E              ___signbitf@y 0016                     test@s 0016  
                   ttemp5 0053                     ttemp6 0056                     ttemp7 005A  
                   status 0FD8                     wtemp8 0053            ?___fpclassifyf 000E  
         __initialization 3168              __end_of_main 2C74              __end_of_test 31C8  
             i2_uart_read 2DDA               i2lcd_char@i 0005                    ??_main 004A  
                  ??_test 0016            low_isr@payload 000C             __activetblptr 0001  
                  ?_fabsf 0070                    ?_fminf 001C               ?i2_lcd_char 0001  
                  i2l2230 2F84                    i2l2240 2FBE                    i2l2232 2F92  
                  i2l2234 2F9A                    i2l2226 2F6E                    i2l2236 2FA8  
                  i2l2228 2F7C                    i2l2238 2FB0                    i2l2720 2D08  
                  i2l2730 2D1A                    i2l2722 2D0A                    i2l2714 2CF2  
                  i2l2732 2D36                    i2l2716 2CFE                    i2l2742 2D48  
                  i2l2734 2D3C                    i2l2718 2D00                    i2l2744 2D4E  
                  i2l2736 2D3E                    i2l2728 2D14                    i2l2920 2DDA  
                  i2l2922 2DF6                    i2l2940 2E40                    i2l2924 2DF8  
                  i2l2918 31CA                    i2l2934 2E28                    i2l2936 2E32  
                  i2l2928 2E10                    i2l2938 2E3C                    i2l2972 30AA  
                  i2l2974 30B8                    i2l2976 30C4                    i2l2978 30E0  
                  _SPBRGH 0FB0          __end_of___xxtofl 2720                    i2_test 31C8  
     lcd_set_bit@data_bit 000E         ?_uart_read_buffer 0013          __end_of_lcd_char 2CF0  
        __end_of_lcd_init 2F10                    ___flge 2946                    ___fleq 2B48  
      ??_uart_read_buffer 0016                 ??___fladd 0060                 ??___fldiv 002F  
               ??___flmul 0016                 ??___flsub 0048                 ??___fltol 006C  
                  fabsf@u 0074                    fabsf@x 0070                    clear_0 3178  
          i2lcd_char@data 0004                    isa$std 0001                 ??_lcd_cmd 000F  
    lcd_char@Lower_Nibble 000F                    fminf@x 001C                    fminf@y 0020  
         ___fpclassifyf@e 0016           ___fpclassifyf@u 0018           ___fpclassifyf@x 000E  
            __mediumconst 0000                 ??_low_isr 000A                    tblptrh 0FF7  
                  tblptrl 0FF6                    tblptru 0FF8           i2_uart_read$208 0003  
              ___flge@ff1 000E                ___flge@ff2 0012           ??___fpclassifyf 0012  
            ___xxtofl@arg 0018              ___xxtofl@exp 0017              ___xxtofl@val 000E  
              ___fleq@ff1 000E                ___fleq@ff2 0012                __accesstop 0060  
 __end_of__initialization 317E             ___rparam_used 0001                ___fltol@f1 0068  
          __pcstackCOMRAM 0001             __end_of_fabsf 3168             __end_of_fminf 283E  
              ___signbitf 2FC8          ??_lcd_set_cursor 0012                   ??_fabsf 0048  
                 ??_fminf 0024                __pbssBANK0 00C1                   ?i2_test 0001  
                 ?___flge 000E                   ?___fleq 000E             i2_lcd_set_bit 2F6C  
               ?___xxtofl 000E                 ?_lcd_char 0001                _lcd_string 30F0  
               ?_lcd_init 0001                   i2test@s 0009                   __Hparam 0000  
                 __Lparam 0000         __end_of_lcd_clear 31BE                   ___fladd 18E6  
          ?i2_lcd_set_bit 0001              ?i2_uart_read 0001                   ___fldiv 21D2  
                 ___flmul 1DA8                   ___flsub 3060                   ___fltol 283E  
            __psmallconst 0800               ?___signbitf 000E                   __pcinit 3168  
                 __ramtop 0800                   __ptext0 2BF2                   __ptext1 3018  
                 __ptext2 2D6C                   __ptext3 0808                   __ptext4 2720  
                 __ptext5 2FC8                   __ptext6 2A4A                   __ptext7 2946  
                 __ptext8 3132                   __ptext9 256C                   _lcd_cmd 3190  
         i2lcd_char@i_173 0007                ??___xxtofl 0012                   _low_isr 0008  
            ??i2_lcd_char 0002                ??_lcd_char 000F                ??_lcd_init 0011  
          __pintcode_body 30A8      end_of_initialization 317E                   int_func 30A8  
       __end_of_uart_init 18E6         __end_of_uart_read 2DDA                   postdec2 0FDD  
                 postinc0 0FEE                   postinc2 0FDE        __end_ofi2_lcd_char 2D6C  
             uart_init@e1 0088               uart_init@e2 0094               uart_init@e3 009C  
    lcd_char@Upper_Nibble 0010               ___fladd@grs 0067             ___xxtofl@sign 0016  
               _TRISCbits 0F94               ___fldiv@grs 003A               ___fldiv@rem 0033  
             ?_lcd_string 0016               ___flmul@grs 001B           ??i2_lcd_set_bit 0001  
          __end_ofi2_test 31D2             ??_lcd_set_bit 000E            __end_of___flge 2A4A  
          __end_of___fleq 2BF2       start_initialization 3168     __end_of___fpclassifyf 2B48  
                ??i2_test 0009                  ??___flge 0016                  ??___fleq 0016  
     __end_of_lcd_set_bit 2F6C                 ___fladd@a 0044                 ___fladd@b 0040  
               ___fldiv@a 002B                 ___fldiv@b 0027                 ___flmul@a 0012  
               ___flmul@b 000E               __pbssCOMRAM 004A                 ___flsub@a 006C  
               ___flsub@b 0068             __pcstackBANK0 0060                 __pintcode 0008  
                ?___fladd 0040                  ?___fldiv 0027                  ?___flmul 000E  
                ?___flsub 0068                  ?___fltol 0068              ??___signbitf 0012  
               _lcd_clear 31B0                  ?_lcd_cmd 0001                 fabsf@F465 00C1  
             __smallconst 0800          _uart_read_buffer 3018     uart_read@receivedData 0012  
                ?_low_isr 0001        __end_of___signbitf 3018                  _LATDbits 0F8C  
         lcd_set_cursor@a 0012           lcd_set_cursor@b 0011           lcd_set_cursor@y 0014  
         lcd_set_cursor@z 0013                  i2u250_40 2F7C                  i2u250_41 2F78  
                i2u251_40 2F92                  i2u251_41 2F8E                  i2u252_40 2FA8  
                i2u252_41 2FA4                  i2u253_40 2FBE                  i2u253_41 2FBA  
                i2u327_40 2D34                  i2u327_41 2D30                  i2u328_40 2D68  
                i2u328_41 2D64                  i2u370_40 2DF6                  i2u370_41 2DF2  
                i2u371_40 2E10                  i2u371_41 2E0C                  i2u372_40 2E28  
                i2u372_41 2E24                  i2u374_40 30B8                  i2u374_41 30B4  
         uart_init@config 00A8                  i2u375_40 30E0                  i2u375_41 30DC  
                i2u369_40 2DE8                  i2u369_41 2DE4               _lcd_set_bit 2F10  
               _uart_init 0808                 _uart_read 2D6C                uart_init@x 0090  
              uart_init@y 00A0                uart_init@z 00A4                ?_lcd_clear 0001  
               lcd_char@i 0012              ??_lcd_string 0017                  __Hrparam 0000  
                __Lrparam 0000              __Lsmallconst 0800                ?_uart_init 0001  
              ?_uart_read 000E        __end_of_lcd_string 3132    i2lcd_char@Lower_Nibble 0002  
           _uart_init$920 007C             _uart_init$919 00AD             _uart_read$208 0010  
      ___fpclassifyf@F465 004E        lcd_set_cursor@temp 0015                  ___xxtofl 256C  
                __ptext10 283E                  __ptext11 3060                  __ptext20 2EAE  
                __ptext12 18E6                  __ptext21 31B0                  __ptext13 1DA8  
                __ptext22 3190                  __ptext14 2B48                  __ptext23 2F10  
                __ptext15 21D2                  __ptext16 31BE                  __ptext25 2DDA  
                __ptext17 30F0                  __ptext26 31C8                  __ptext18 2C74  
                __ptext27 2CF0                  __ptext19 2E48                  __ptext28 2F6C  
                _lcd_char 2C74                  _lcd_init 2EAE                  isa$xinst 0000  
   __end_ofi2_lcd_set_bit 2FC8                  int$flags 0052                  lcd_cmd@a 0010  
             ??_lcd_clear 0011        uart_init@frequency 00A9   i2uart_read@receivedData 0005  
                intlevel2 0000            _lcd_set_cursor 2E48           ___signbitf@F521 004A  
       uart_init@baudrate 00B1  __end_of_uart_read_buffer 3060             ??i2_uart_read 0003  
             ??_uart_init 0078               ??_uart_read 0010              uart_init@e11 0080  
            uart_init@e22 008C              uart_init@e33 0098              uart_init@min 0084  
  __end_of_lcd_set_cursor 2EAE             ___fladd@signs 0064              ___fladd@aexp 0065  
            ___fladd@bexp 0066     i2lcd_set_bit@data_bit 0001  
