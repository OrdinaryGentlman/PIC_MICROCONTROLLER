

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Tue Sep 03 18:14:06 2024

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	18F458
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1
    15                           	psect	text6,global,reloc=2,class=CODE,delta=1
    16                           	psect	text7,global,reloc=2,class=CODE,delta=1
    17                           	psect	text8,global,reloc=2,class=CODE,delta=1
    18                           	psect	text9,global,reloc=2,class=CODE,delta=1
    19                           	psect	text10,global,reloc=2,class=CODE,delta=1
    20                           	psect	text11,global,reloc=2,class=CODE,delta=1
    21                           	psect	text12,global,reloc=2,class=CODE,delta=1
    22                           	psect	text13,global,reloc=2,class=CODE,delta=1
    23                           	psect	text14,global,reloc=2,class=CODE,delta=1
    24                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    25                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    26                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    27   000000                     
    28                           ; Generated 23/03/2023 GMT
    29                           ; 
    30                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    31                           ; All rights reserved.
    32                           ; 
    33                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    34                           ; 
    35                           ; Redistribution and use in source and binary forms, with or without modification, are
    36                           ; permitted provided that the following conditions are met:
    37                           ; 
    38                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    39                           ;        conditions and the following disclaimer.
    40                           ; 
    41                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    42                           ;        of conditions and the following disclaimer in the documentation and/or other
    43                           ;        materials provided with the distribution. Publication is not required when
    44                           ;        this file is used in an embedded application.
    45                           ; 
    46                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    47                           ;        software without specific prior written permission.
    48                           ; 
    49                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    50                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    51                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    52                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    53                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    54                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    55                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    56                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    57                           ; 
    58                           ; 
    59                           ; Code-generator required, PIC18F458 Definitions
    60                           ; 
    61                           ; SFR Addresses
    62   000000                     _LATD	set	3980
    63   000000                     _TRISB4	set	31900
    64   000000                     _PORTBbits	set	3969
    65   000000                     _LATBbits	set	3978
    66   000000                     _LATDbits	set	3980
    67   000000                     _TRISB1	set	31897
    68   000000                     _TRISD	set	3989
    69                           
    70                           	psect	smallconst
    71   000600                     __psmallconst:
    72                           	callstack 0
    73   000600  00                 	db	0
    74   000601                     STR_1:
    75   000601  4D                 	db	77	;'M'
    76   000602  41                 	db	65	;'A'
    77   000603  53                 	db	83	;'S'
    78   000604  54                 	db	84	;'T'
    79   000605  45                 	db	69	;'E'
    80   000606  52                 	db	82	;'R'
    81   000607  3A                 	db	58	;':'
    82   000608  20                 	db	32
    83   000609  00                 	db	0
    84   00060A  00                 	db	0	; dummy byte at the end
    85   000000                     
    86                           ; #config settings
    87                           
    88                           	psect	cinit
    89   000B1A                     __pcinit:
    90                           	callstack 0
    91   000B1A                     start_initialization:
    92                           	callstack 0
    93   000B1A                     __initialization:
    94                           	callstack 0
    95                           
    96                           ; Clear objects allocated to COMRAM (3 bytes)
    97   000B1A  6A15               	clrf	(__pbssCOMRAM+2)& (0+255),c
    98   000B1C  6A14               	clrf	(__pbssCOMRAM+1)& (0+255),c
    99   000B1E  6A13               	clrf	__pbssCOMRAM& (0+255),c
   100   000B20                     end_of_initialization:
   101                           	callstack 0
   102   000B20                     __end_of__initialization:
   103                           	callstack 0
   104   000B20  0E00               	movlw	low (__Lmediumconst shr (0+16))
   105   000B22  6EF8               	movwf	tblptru,c
   106   000B24  0100               	movlb	0
   107   000B26  EF06  F003         	goto	_main	;jump to C main() function
   108                           
   109                           	psect	bssCOMRAM
   110   000013                     __pbssCOMRAM:
   111                           	callstack 0
   112   000013                     _payload:
   113                           	callstack 0
   114   000013                     	ds	3
   115                           
   116                           	psect	cstackCOMRAM
   117   000001                     __pcstackCOMRAM:
   118                           	callstack 0
   119   000001                     lcd_set_bit@data_bit:
   120                           	callstack 0
   121   000001                     i2c_read@nack:
   122                           	callstack 0
   123   000001                     i2c_write@d:
   124                           	callstack 0
   125                           
   126                           ; 1 bytes @ 0x0
   127   000001                     	ds	1
   128   000002                     ??_lcd_cmd:
   129   000002                     lcd_char@Lower_Nibble:
   130                           	callstack 0
   131   000002                     i2c_read@data:
   132                           	callstack 0
   133   000002                     i2c_write@b:
   134                           	callstack 0
   135                           
   136                           ; 1 bytes @ 0x1
   137   000002                     	ds	1
   138   000003                     lcd_cmd@a:
   139                           	callstack 0
   140   000003                     lcd_char@Upper_Nibble:
   141                           	callstack 0
   142   000003                     i2c_read@x:
   143                           	callstack 0
   144   000003                     i2c_write@x:
   145                           	callstack 0
   146                           
   147                           ; 1 bytes @ 0x2
   148   000003                     	ds	1
   149   000004                     ??_lcd_init:
   150   000004                     lcd_set_cursor@b:
   151                           	callstack 0
   152   000004                     lcd_char@i:
   153                           	callstack 0
   154                           
   155                           ; 2 bytes @ 0x3
   156   000004                     	ds	1
   157   000005                     lcd_set_cursor@a:
   158                           	callstack 0
   159                           
   160                           ; 1 bytes @ 0x4
   161   000005                     	ds	1
   162   000006                     lcd_set_cursor@z:
   163                           	callstack 0
   164   000006                     lcd_char@i_193:
   165                           	callstack 0
   166                           
   167                           ; 2 bytes @ 0x5
   168   000006                     	ds	1
   169   000007                     lcd_set_cursor@y:
   170                           	callstack 0
   171                           
   172                           ; 1 bytes @ 0x6
   173   000007                     	ds	1
   174   000008                     lcd_set_cursor@temp:
   175                           	callstack 0
   176   000008                     lcd_char@data:
   177                           	callstack 0
   178                           
   179                           ; 1 bytes @ 0x7
   180   000008                     	ds	1
   181   000009                     lcd_string@a:
   182                           	callstack 0
   183                           
   184                           ; 2 bytes @ 0x8
   185   000009                     	ds	2
   186   00000B                     ??_lcd_string:
   187                           
   188                           ; 1 bytes @ 0xA
   189   00000B                     	ds	2
   190   00000D                     lcd_string@i:
   191                           	callstack 0
   192                           
   193                           ; 2 bytes @ 0xC
   194   00000D                     	ds	2
   195   00000F                     ??_main:
   196                           
   197                           ; 1 bytes @ 0xE
   198   00000F                     	ds	2
   199   000011                     main@nack:
   200                           	callstack 0
   201                           
   202                           ; 2 bytes @ 0x10
   203   000011                     	ds	2
   204                           
   205 ;;
   206 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   207 ;;
   208 ;; *************** function _main *****************
   209 ;; Defined at:
   210 ;;		line 15 in file "tx_main.c"
   211 ;; Parameters:    Size  Location     Type
   212 ;;		None
   213 ;; Auto vars:     Size  Location     Type
   214 ;;  nack            2   16[COMRAM] int 
   215 ;; Return value:  Size  Location     Type
   216 ;;                  1    wreg      void 
   217 ;; Registers used:
   218 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   219 ;; Tracked objects:
   220 ;;		On entry : 0/0
   221 ;;		On exit  : 0/0
   222 ;;		Unchanged: 0/0
   223 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   224 ;;      Params:         0       0       0       0       0       0       0
   225 ;;      Locals:         2       0       0       0       0       0       0
   226 ;;      Temps:          2       0       0       0       0       0       0
   227 ;;      Totals:         4       0       0       0       0       0       0
   228 ;;Total ram usage:        4 bytes
   229 ;; Hardware stack levels required when called: 3
   230 ;; This function calls:
   231 ;;		_i2c_init
   232 ;;		_i2c_read
   233 ;;		_i2c_restart
   234 ;;		_i2c_start
   235 ;;		_i2c_stop
   236 ;;		_i2c_write
   237 ;;		_lcd_clear
   238 ;;		_lcd_init
   239 ;;		_lcd_set_cursor
   240 ;;		_lcd_string
   241 ;; This function is called by:
   242 ;;		Startup code after reset
   243 ;; This function uses a non-reentrant model
   244 ;;
   245                           
   246                           	psect	text0
   247   00060C                     __ptext0:
   248                           	callstack 0
   249   00060C                     _main:
   250                           	callstack 28
   251   00060C  FFFF               	dw	65535	; assembler added errata NOP
   252                           
   253                           ;tx_main.c: 16:     TRISD = 0;
   254   00060E  0E00               	movlw	0
   255   000610  6E95               	movwf	149,c	;volatile
   256                           
   257                           ;tx_main.c: 17:     LATD = 0;
   258   000612  0E00               	movlw	0
   259   000614  6E8C               	movwf	140,c	;volatile
   260   000616                     
   261                           ;tx_main.c: 19:     lcd_init();
   262   000616  EC13  F005         	call	_lcd_init	;wreg free
   263   00061A                     
   264                           ;tx_main.c: 20:     lcd_set_cursor(1,1);
   265   00061A  0E01               	movlw	1
   266   00061C  6E04               	movwf	lcd_set_cursor@b^0,c
   267   00061E  0E01               	movlw	1
   268   000620  ECD8  F004         	call	_lcd_set_cursor
   269   000624                     
   270                           ;tx_main.c: 21:     lcd_clear();
   271   000624  EC84  F005         	call	_lcd_clear	;wreg free
   272   000628                     
   273                           ;tx_main.c: 22:     lcd_string("MASTER: ");
   274   000628  0E01               	movlw	low STR_1
   275   00062A  6E09               	movwf	lcd_string@a^0,c
   276   00062C  5009               	movf	lcd_string@a^0,w,c
   277   00062E  A4D8               	btfss	status,2,c
   278   000630  0E06               	movlw	high __smallconst
   279   000632  6E0A               	movwf	(lcd_string@a+1)^0,c
   280   000634  ECCB  F003         	call	_lcd_string	;wreg free
   281   000638                     
   282                           ;tx_main.c: 24:     i2c_init();
   283   000638  EC9C  F005         	call	_i2c_init	;wreg free
   284   00063C                     l1089:
   285   00063C  FFFF               	dw	65535	; assembler added errata NOP
   286                           
   287                           ;tx_main.c: 27:         i2c_start();
   288   00063E  EC5C  F005         	call	_i2c_start	;wreg free
   289   000642                     
   290                           ;tx_main.c: 28:         int nack = i2c_write(0x88);
   291   000642  0E88               	movlw	136
   292   000644  EC98  F004         	call	_i2c_write
   293   000648  6E0F               	movwf	??_main^0,c
   294   00064A  500F               	movf	??_main^0,w,c
   295   00064C  6E11               	movwf	main@nack^0,c
   296   00064E  6A12               	clrf	(main@nack+1)^0,c
   297   000650                     
   298                           ;tx_main.c: 29:         if(!nack){
   299   000650  5011               	movf	main@nack^0,w,c
   300   000652  1012               	iorwf	(main@nack+1)^0,w,c
   301   000654  A4D8               	btfss	status,2,c
   302   000656  EF2F  F003         	goto	u271
   303   00065A  EF32  F003         	goto	u270
   304   00065E                     u271:
   305   00065E  FFFF               	dw	65535	; assembler added errata NOP
   306   000660  EF65  F003         	goto	l1107
   307   000664                     u270:
   308   000664  FFFF               	dw	65535	; assembler added errata NOP
   309   000666                     
   310                           ;tx_main.c: 30:             nack = i2c_write(0x02);
   311   000666  0E02               	movlw	2
   312   000668  EC98  F004         	call	_i2c_write
   313   00066C  6E0F               	movwf	??_main^0,c
   314   00066E  500F               	movf	??_main^0,w,c
   315   000670  6E11               	movwf	main@nack^0,c
   316   000672  6A12               	clrf	(main@nack+1)^0,c
   317   000674                     
   318                           ;tx_main.c: 31:             if(!nack){
   319   000674  5011               	movf	main@nack^0,w,c
   320   000676  1012               	iorwf	(main@nack+1)^0,w,c
   321   000678  A4D8               	btfss	status,2,c
   322   00067A  EF41  F003         	goto	u281
   323   00067E  EF44  F003         	goto	u280
   324   000682                     u281:
   325   000682  FFFF               	dw	65535	; assembler added errata NOP
   326   000684  EF65  F003         	goto	l1107
   327   000688                     u280:
   328   000688  FFFF               	dw	65535	; assembler added errata NOP
   329   00068A                     
   330                           ;tx_main.c: 32:                 i2c_restart();
   331   00068A  EC6B  F005         	call	_i2c_restart	;wreg free
   332   00068E                     
   333                           ;tx_main.c: 33:                 nack = i2c_write(0x88 | 1);
   334   00068E  0E89               	movlw	137
   335   000690  EC98  F004         	call	_i2c_write
   336   000694  6E0F               	movwf	??_main^0,c
   337   000696  500F               	movf	??_main^0,w,c
   338   000698  6E11               	movwf	main@nack^0,c
   339   00069A  6A12               	clrf	(main@nack+1)^0,c
   340   00069C                     
   341                           ;tx_main.c: 34:                 if(!nack){
   342   00069C  5011               	movf	main@nack^0,w,c
   343   00069E  1012               	iorwf	(main@nack+1)^0,w,c
   344   0006A0  A4D8               	btfss	status,2,c
   345   0006A2  EF55  F003         	goto	u291
   346   0006A6  EF58  F003         	goto	u290
   347   0006AA                     u291:
   348   0006AA  FFFF               	dw	65535	; assembler added errata NOP
   349   0006AC  EF65  F003         	goto	l1107
   350   0006B0                     u290:
   351   0006B0  FFFF               	dw	65535	; assembler added errata NOP
   352   0006B2                     
   353                           ;tx_main.c: 35:                     payload[0] = i2c_read(0);
   354   0006B2  0E00               	movlw	0
   355   0006B4  EC7E  F003         	call	_i2c_read
   356   0006B8  6E13               	movwf	_payload^0,c
   357                           
   358                           ;tx_main.c: 36:                     payload[1] = i2c_read(0);
   359   0006BA  0E00               	movlw	0
   360   0006BC  EC7E  F003         	call	_i2c_read
   361   0006C0  6E14               	movwf	(_payload+1)^0,c
   362                           
   363                           ;tx_main.c: 37:                     payload[2] = i2c_read(1);
   364   0006C2  0E01               	movlw	1
   365   0006C4  EC7E  F003         	call	_i2c_read
   366   0006C8  6E15               	movwf	(_payload+2)^0,c
   367   0006CA                     l1107:
   368   0006CA  FFFF               	dw	65535	; assembler added errata NOP
   369                           
   370                           ;tx_main.c: 42:         i2c_stop();
   371   0006CC  EC78  F005         	call	_i2c_stop	;wreg free
   372   0006D0                     
   373                           ;tx_main.c: 44:         lcd_string(payload);
   374   0006D0  0E13               	movlw	low _payload
   375   0006D2  6E09               	movwf	lcd_string@a^0,c
   376   0006D4  6A0A               	clrf	(lcd_string@a+1)^0,c
   377   0006D6  ECCB  F003         	call	_lcd_string	;wreg free
   378   0006DA                     
   379                           ;tx_main.c: 45:         _delay((unsigned long)((2000)*(8000000/4000.0)));
   380   0006DA  0E10               	movlw	16
   381   0006DC  6E10               	movwf	(??_main+1)^0,c
   382   0006DE  0E3B               	movlw	59
   383   0006E0  6E0F               	movwf	??_main^0,c
   384   0006E2  0E99               	movlw	153
   385   0006E4                     u307:
   386   0006E4  FFFF               	dw	65535	; errata NOP
   387   0006E6  2EE8               	decfsz	wreg,f,c
   388   0006E8  D7FD               	bra	u307
   389   0006EA  2E0F               	decfsz	??_main^0,f,c
   390   0006EC  D7FB               	bra	u307
   391   0006EE  2E10               	decfsz	(??_main+1)^0,f,c
   392   0006F0  D7F9               	bra	u307
   393   0006F2  D000               	nop2	
   394   0006F4  EF1E  F003         	goto	l1089
   395   0006F8  EF01  F000         	goto	start
   396   0006FC                     __end_of_main:
   397                           	callstack 0
   398                           
   399 ;; *************** function _lcd_string *****************
   400 ;; Defined at:
   401 ;;		line 110 in file "./lcd.h"
   402 ;; Parameters:    Size  Location     Type
   403 ;;  a               2    8[COMRAM] PTR unsigned char 
   404 ;;		 -> payload(3), STR_1(9), 
   405 ;; Auto vars:     Size  Location     Type
   406 ;;  i               2   12[COMRAM] int 
   407 ;; Return value:  Size  Location     Type
   408 ;;                  1    wreg      void 
   409 ;; Registers used:
   410 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   411 ;; Tracked objects:
   412 ;;		On entry : 0/0
   413 ;;		On exit  : 0/0
   414 ;;		Unchanged: 0/0
   415 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   416 ;;      Params:         2       0       0       0       0       0       0
   417 ;;      Locals:         2       0       0       0       0       0       0
   418 ;;      Temps:          2       0       0       0       0       0       0
   419 ;;      Totals:         6       0       0       0       0       0       0
   420 ;;Total ram usage:        6 bytes
   421 ;; Hardware stack levels used: 1
   422 ;; Hardware stack levels required when called: 2
   423 ;; This function calls:
   424 ;;		_lcd_char
   425 ;; This function is called by:
   426 ;;		_main
   427 ;; This function uses a non-reentrant model
   428 ;;
   429                           
   430                           	psect	text1
   431   000796                     __ptext1:
   432                           	callstack 0
   433   000796                     _lcd_string:
   434                           	callstack 0
   435   000796  FFFF               	dw	65535	; assembler added errata NOP
   436   000798                     
   437                           ;./lcd.h: 110: void lcd_string(char *a);./lcd.h: 111: {;./lcd.h: 112:     int i;;./lcd.h
      +                          : 113:     for(i=0;a[i]!='\0';i++)
   438   000798  0E00               	movlw	0
   439   00079A  6E0E               	movwf	(lcd_string@i+1)^0,c
   440   00079C  0E00               	movlw	0
   441   00079E  6E0D               	movwf	lcd_string@i^0,c
   442   0007A0  EFEE  F003         	goto	l1075
   443   0007A4                     l1071:
   444   0007A4  FFFF               	dw	65535	; assembler added errata NOP
   445                           
   446                           ;./lcd.h: 114:        lcd_char(a[i]);
   447   0007A6  500D               	movf	lcd_string@i^0,w,c
   448   0007A8  2409               	addwf	lcd_string@a^0,w,c
   449   0007AA  6E0B               	movwf	??_lcd_string^0,c
   450   0007AC  500E               	movf	(lcd_string@i+1)^0,w,c
   451   0007AE  200A               	addwfc	(lcd_string@a+1)^0,w,c
   452   0007B0  6E0C               	movwf	(??_lcd_string+1)^0,c
   453   0007B2  C00B  FFF6         	movff	??_lcd_string,tblptrl
   454   0007B6  C00C  FFF7         	movff	??_lcd_string+1,tblptrh
   455   0007BA  6AF8               	clrf	tblptru,c
   456   0007BC  0E05               	movlw	(high __ramtop+-1)
   457   0007BE  64F7               	cpfsgt	tblptrh,c
   458   0007C0  D004               	bra	u247
   459   0007C2  0008               	tblrd		*
   460   0007C4  FFFF               	dw	65535	; errata NOP
   461   0007C6  50F5               	movf	tablat,w,c
   462   0007C8  D005               	bra	u240
   463   0007CA                     u247:
   464   0007CA  CFF6 FFE9          	movff	tblptrl,fsr0l
   465   0007CE  CFF7 FFEA          	movff	tblptrh,fsr0h
   466   0007D2  50EF               	movf	indf0,w,c
   467   0007D4                     u240:
   468   0007D4  EC12  F004         	call	_lcd_char
   469   0007D8  4A0D               	infsnz	lcd_string@i^0,f,c
   470   0007DA  2A0E               	incf	(lcd_string@i+1)^0,f,c
   471   0007DC                     l1075:
   472   0007DC  FFFF               	dw	65535	; assembler added errata NOP
   473   0007DE  500D               	movf	lcd_string@i^0,w,c
   474   0007E0  2409               	addwf	lcd_string@a^0,w,c
   475   0007E2  6E0B               	movwf	??_lcd_string^0,c
   476   0007E4  500E               	movf	(lcd_string@i+1)^0,w,c
   477   0007E6  200A               	addwfc	(lcd_string@a+1)^0,w,c
   478   0007E8  6E0C               	movwf	(??_lcd_string+1)^0,c
   479   0007EA  C00B  FFF6         	movff	??_lcd_string,tblptrl
   480   0007EE  C00C  FFF7         	movff	??_lcd_string+1,tblptrh
   481   0007F2  6AF8               	clrf	tblptru,c
   482   0007F4  0E05               	movlw	(high __ramtop+-1)
   483   0007F6  64F7               	cpfsgt	tblptrh,c
   484   0007F8  D004               	bra	u257
   485   0007FA  0008               	tblrd		*
   486   0007FC  FFFF               	dw	65535	; errata NOP
   487   0007FE  50F5               	movf	tablat,w,c
   488   000800  D005               	bra	u250
   489   000802                     u257:
   490   000802  CFF6 FFE9          	movff	tblptrl,fsr0l
   491   000806  CFF7 FFEA          	movff	tblptrh,fsr0h
   492   00080A  50EF               	movf	indf0,w,c
   493   00080C                     u250:
   494   00080C  0900               	iorlw	0
   495   00080E  A4D8               	btfss	status,2,c
   496   000810  EF0C  F004         	goto	u261
   497   000814  EF0F  F004         	goto	u260
   498   000818                     u261:
   499   000818  FFFF               	dw	65535	; assembler added errata NOP
   500   00081A  EFD2  F003         	goto	l1071
   501   00081E                     u260:
   502   00081E  FFFF               	dw	65535	; assembler added errata NOP
   503   000820  0012               	return		;funcret
   504   000822  FFFF               	dw	65535	; errata NOP
   505   000824                     __end_of_lcd_string:
   506                           	callstack 0
   507                           
   508 ;; *************** function _lcd_char *****************
   509 ;; Defined at:
   510 ;;		line 94 in file "./lcd.h"
   511 ;; Parameters:    Size  Location     Type
   512 ;;  data            1    wreg     unsigned char 
   513 ;; Auto vars:     Size  Location     Type
   514 ;;  data            1    7[COMRAM] unsigned char 
   515 ;;  i               2    5[COMRAM] int 
   516 ;;  i               2    3[COMRAM] int 
   517 ;;  Upper_Nibble    1    2[COMRAM] unsigned char 
   518 ;;  Lower_Nibble    1    1[COMRAM] unsigned char 
   519 ;; Return value:  Size  Location     Type
   520 ;;                  1    wreg      void 
   521 ;; Registers used:
   522 ;;		wreg, status,2, status,0, cstack
   523 ;; Tracked objects:
   524 ;;		On entry : 0/0
   525 ;;		On exit  : 0/0
   526 ;;		Unchanged: 0/0
   527 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   528 ;;      Params:         0       0       0       0       0       0       0
   529 ;;      Locals:         7       0       0       0       0       0       0
   530 ;;      Temps:          0       0       0       0       0       0       0
   531 ;;      Totals:         7       0       0       0       0       0       0
   532 ;;Total ram usage:        7 bytes
   533 ;; Hardware stack levels used: 1
   534 ;; Hardware stack levels required when called: 1
   535 ;; This function calls:
   536 ;;		_lcd_set_bit
   537 ;; This function is called by:
   538 ;;		_lcd_string
   539 ;;		_test
   540 ;; This function uses a non-reentrant model
   541 ;;
   542                           
   543                           	psect	text2
   544   000824                     __ptext2:
   545                           	callstack 0
   546   000824                     _lcd_char:
   547                           	callstack 0
   548   000824  FFFF               	dw	65535	; assembler added errata NOP
   549                           
   550                           ;incstack = 0
   551                           ;lcd_char@data stored from wreg
   552   000826  6E08               	movwf	lcd_char@data^0,c
   553   000828                     
   554                           ;./lcd.h: 94: void lcd_char(char data);./lcd.h: 95: {;./lcd.h: 96:    char Lower_Nibble,
      +                          Upper_Nibble;;./lcd.h: 97:    Lower_Nibble = data&0x0F;
   555   000828  5008               	movf	lcd_char@data^0,w,c
   556   00082A  0B0F               	andlw	15
   557   00082C  6E02               	movwf	lcd_char@Lower_Nibble^0,c
   558                           
   559                           ;./lcd.h: 98:    Upper_Nibble = data&0xF0;
   560   00082E  5008               	movf	lcd_char@data^0,w,c
   561   000830  0BF0               	andlw	240
   562   000832  6E03               	movwf	lcd_char@Upper_Nibble^0,c
   563   000834                     
   564                           ;./lcd.h: 99:    LATDbits.LATD2 = 1;
   565   000834  848C               	bsf	140,2,c	;volatile
   566   000836                     
   567                           ;./lcd.h: 100:    lcd_set_bit(Upper_Nibble>>4);
   568   000836  3803               	swapf	lcd_char@Upper_Nibble^0,w,c
   569   000838  0B0F               	andlw	15
   570   00083A  EC58  F004         	call	_lcd_set_bit
   571   00083E                     
   572                           ;./lcd.h: 101:    LATDbits.LATD3 = 1;
   573   00083E  868C               	bsf	140,3,c	;volatile
   574   000840                     
   575                           ;./lcd.h: 102:    for(int i=2130483; i<=0; i--) __nop();
   576   000840  0E82               	movlw	130
   577   000842  6E05               	movwf	(lcd_char@i+1)^0,c
   578   000844  0E33               	movlw	51
   579   000846  6E04               	movwf	lcd_char@i^0,c
   580   000848                     l49:
   581   000848  FFFF               	dw	65535	; assembler added errata NOP
   582   00084A  0000               	nop	
   583   00084C  0604               	decf	lcd_char@i^0,f,c
   584   00084E  A0D8               	btfss	status,0,c
   585   000850  0605               	decf	(lcd_char@i+1)^0,f,c
   586   000852  BE05               	btfsc	(lcd_char@i+1)^0,7,c
   587   000854  EF34  F004         	goto	u51
   588   000858  5005               	movf	(lcd_char@i+1)^0,w,c
   589   00085A  E109               	bnz	u50
   590   00085C  0404               	decf	lcd_char@i^0,w,c
   591   00085E  A0D8               	btfss	status,0,c
   592   000860  EF34  F004         	goto	u51
   593   000864  EF37  F004         	goto	u50
   594   000868                     u51:
   595   000868  FFFF               	dw	65535	; assembler added errata NOP
   596   00086A  EF24  F004         	goto	l49
   597   00086E                     u50:
   598   00086E  FFFF               	dw	65535	; assembler added errata NOP
   599   000870                     
   600                           ;./lcd.h: 103:    LATDbits.LATD3 = 0;
   601   000870  968C               	bcf	140,3,c	;volatile
   602   000872                     
   603                           ;./lcd.h: 104:    lcd_set_bit(Lower_Nibble);
   604   000872  5002               	movf	lcd_char@Lower_Nibble^0,w,c
   605   000874  EC58  F004         	call	_lcd_set_bit
   606   000878                     
   607                           ;./lcd.h: 105:    LATDbits.LATD3 = 1;
   608   000878  868C               	bsf	140,3,c	;volatile
   609   00087A                     
   610                           ;./lcd.h: 106:    for(int i=2130483; i<=0; i--) __nop();
   611   00087A  0E82               	movlw	130
   612   00087C  6E07               	movwf	(lcd_char@i_193+1)^0,c
   613   00087E  0E33               	movlw	51
   614   000880  6E06               	movwf	lcd_char@i_193^0,c
   615   000882                     l51:
   616   000882  FFFF               	dw	65535	; assembler added errata NOP
   617   000884  0000               	nop	
   618   000886  0606               	decf	lcd_char@i_193^0,f,c
   619   000888  A0D8               	btfss	status,0,c
   620   00088A  0607               	decf	(lcd_char@i_193+1)^0,f,c
   621   00088C  BE07               	btfsc	(lcd_char@i_193+1)^0,7,c
   622   00088E  EF51  F004         	goto	u61
   623   000892  5007               	movf	(lcd_char@i_193+1)^0,w,c
   624   000894  E109               	bnz	u60
   625   000896  0406               	decf	lcd_char@i_193^0,w,c
   626   000898  A0D8               	btfss	status,0,c
   627   00089A  EF51  F004         	goto	u61
   628   00089E  EF54  F004         	goto	u60
   629   0008A2                     u61:
   630   0008A2  FFFF               	dw	65535	; assembler added errata NOP
   631   0008A4  EF41  F004         	goto	l51
   632   0008A8                     u60:
   633   0008A8  FFFF               	dw	65535	; assembler added errata NOP
   634   0008AA                     
   635                           ;./lcd.h: 107:    LATDbits.LATD3 = 0;
   636   0008AA  968C               	bcf	140,3,c	;volatile
   637   0008AC  0012               	return		;funcret
   638   0008AE  FFFF               	dw	65535	; errata NOP
   639   0008B0                     __end_of_lcd_char:
   640                           	callstack 0
   641                           
   642 ;; *************** function _lcd_set_cursor *****************
   643 ;; Defined at:
   644 ;;		line 55 in file "./lcd.h"
   645 ;; Parameters:    Size  Location     Type
   646 ;;  a               1    wreg     unsigned char 
   647 ;;  b               1    3[COMRAM] unsigned char 
   648 ;; Auto vars:     Size  Location     Type
   649 ;;  a               1    4[COMRAM] unsigned char 
   650 ;;  temp            1    7[COMRAM] unsigned char 
   651 ;;  y               1    6[COMRAM] unsigned char 
   652 ;;  z               1    5[COMRAM] unsigned char 
   653 ;; Return value:  Size  Location     Type
   654 ;;                  1    wreg      void 
   655 ;; Registers used:
   656 ;;		wreg, status,2, status,0, cstack
   657 ;; Tracked objects:
   658 ;;		On entry : 0/0
   659 ;;		On exit  : 0/0
   660 ;;		Unchanged: 0/0
   661 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   662 ;;      Params:         1       0       0       0       0       0       0
   663 ;;      Locals:         4       0       0       0       0       0       0
   664 ;;      Temps:          0       0       0       0       0       0       0
   665 ;;      Totals:         5       0       0       0       0       0       0
   666 ;;Total ram usage:        5 bytes
   667 ;; Hardware stack levels used: 1
   668 ;; Hardware stack levels required when called: 2
   669 ;; This function calls:
   670 ;;		_lcd_cmd
   671 ;; This function is called by:
   672 ;;		_main
   673 ;; This function uses a non-reentrant model
   674 ;;
   675                           
   676                           	psect	text3
   677   0009B0                     __ptext3:
   678                           	callstack 0
   679   0009B0                     _lcd_set_cursor:
   680                           	callstack 0
   681   0009B0  FFFF               	dw	65535	; assembler added errata NOP
   682                           
   683                           ;incstack = 0
   684                           ;lcd_set_cursor@a stored from wreg
   685   0009B2  6E05               	movwf	lcd_set_cursor@a^0,c
   686   0009B4                     
   687                           ;./lcd.h: 55: void lcd_set_cursor(char a, char b);./lcd.h: 56: {;./lcd.h: 57:     char t
      +                          emp,z,y;;./lcd.h: 58:     if(a== 1)
   688   0009B4  0405               	decf	lcd_set_cursor@a^0,w,c
   689   0009B6  A4D8               	btfss	status,2,c
   690   0009B8  EFE0  F004         	goto	u221
   691   0009BC  EFE3  F004         	goto	u220
   692   0009C0                     u221:
   693   0009C0  FFFF               	dw	65535	; assembler added errata NOP
   694   0009C2  EFF5  F004         	goto	l1061
   695   0009C6                     u220:
   696   0009C6  FFFF               	dw	65535	; assembler added errata NOP
   697   0009C8                     
   698                           ;./lcd.h: 59:     {;./lcd.h: 60:       temp = 0x80 + b - 1;
   699   0009C8  5004               	movf	lcd_set_cursor@b^0,w,c
   700   0009CA  0F7F               	addlw	127
   701   0009CC  6E08               	movwf	lcd_set_cursor@temp^0,c
   702                           
   703                           ;./lcd.h: 61:         z = temp>>4;
   704   0009CE  3808               	swapf	lcd_set_cursor@temp^0,w,c
   705   0009D0  0B0F               	andlw	15
   706   0009D2  6E06               	movwf	lcd_set_cursor@z^0,c
   707                           
   708                           ;./lcd.h: 62:         y = temp & 0x0F;
   709   0009D4  5008               	movf	lcd_set_cursor@temp^0,w,c
   710   0009D6  0B0F               	andlw	15
   711   0009D8  6E07               	movwf	lcd_set_cursor@y^0,c
   712   0009DA                     
   713                           ;./lcd.h: 63:         lcd_cmd(z);
   714   0009DA  5006               	movf	lcd_set_cursor@z^0,w,c
   715   0009DC  EC49  F005         	call	_lcd_cmd
   716   0009E0                     
   717                           ;./lcd.h: 64:         lcd_cmd(y);
   718   0009E0  5007               	movf	lcd_set_cursor@y^0,w,c
   719   0009E2  EC49  F005         	call	_lcd_cmd
   720                           
   721                           ;./lcd.h: 65:     }
   722   0009E6  EF10  F005         	goto	l41
   723   0009EA                     l1061:
   724   0009EA  FFFF               	dw	65535	; assembler added errata NOP
   725   0009EC  0E02               	movlw	2
   726   0009EE  1805               	xorwf	lcd_set_cursor@a^0,w,c
   727   0009F0  A4D8               	btfss	status,2,c
   728   0009F2  EFFD  F004         	goto	u231
   729   0009F6  EF00  F005         	goto	u230
   730   0009FA                     u231:
   731   0009FA  FFFF               	dw	65535	; assembler added errata NOP
   732   0009FC  EF10  F005         	goto	l41
   733   000A00                     u230:
   734   000A00  FFFF               	dw	65535	; assembler added errata NOP
   735   000A02                     
   736                           ;./lcd.h: 67:     {;./lcd.h: 68:         temp = 0xC0 + b - 1;
   737   000A02  5004               	movf	lcd_set_cursor@b^0,w,c
   738   000A04  0FBF               	addlw	191
   739   000A06  6E08               	movwf	lcd_set_cursor@temp^0,c
   740                           
   741                           ;./lcd.h: 69:         z = temp>>4;
   742   000A08  3808               	swapf	lcd_set_cursor@temp^0,w,c
   743   000A0A  0B0F               	andlw	15
   744   000A0C  6E06               	movwf	lcd_set_cursor@z^0,c
   745                           
   746                           ;./lcd.h: 70:         y = temp & 0x0F;
   747   000A0E  5008               	movf	lcd_set_cursor@temp^0,w,c
   748   000A10  0B0F               	andlw	15
   749   000A12  6E07               	movwf	lcd_set_cursor@y^0,c
   750   000A14                     
   751                           ;./lcd.h: 71:         lcd_cmd(z);
   752   000A14  5006               	movf	lcd_set_cursor@z^0,w,c
   753   000A16  EC49  F005         	call	_lcd_cmd
   754   000A1A                     
   755                           ;./lcd.h: 72:         lcd_cmd(y);
   756   000A1A  5007               	movf	lcd_set_cursor@y^0,w,c
   757   000A1C  EC49  F005         	call	_lcd_cmd
   758   000A20                     l41:
   759   000A20  FFFF               	dw	65535	; assembler added errata NOP
   760   000A22  0012               	return		;funcret
   761   000A24  FFFF               	dw	65535	; errata NOP
   762   000A26                     __end_of_lcd_set_cursor:
   763                           	callstack 0
   764                           
   765 ;; *************** function _lcd_init *****************
   766 ;; Defined at:
   767 ;;		line 76 in file "./lcd.h"
   768 ;; Parameters:    Size  Location     Type
   769 ;;		None
   770 ;; Auto vars:     Size  Location     Type
   771 ;;  i               2    0        int 
   772 ;; Return value:  Size  Location     Type
   773 ;;                  1    wreg      void 
   774 ;; Registers used:
   775 ;;		wreg, status,2, cstack
   776 ;; Tracked objects:
   777 ;;		On entry : 0/0
   778 ;;		On exit  : 0/0
   779 ;;		Unchanged: 0/0
   780 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   781 ;;      Params:         0       0       0       0       0       0       0
   782 ;;      Locals:         0       0       0       0       0       0       0
   783 ;;      Temps:          1       0       0       0       0       0       0
   784 ;;      Totals:         1       0       0       0       0       0       0
   785 ;;Total ram usage:        1 bytes
   786 ;; Hardware stack levels used: 1
   787 ;; Hardware stack levels required when called: 2
   788 ;; This function calls:
   789 ;;		_lcd_cmd
   790 ;;		_lcd_set_bit
   791 ;; This function is called by:
   792 ;;		_main
   793 ;; This function uses a non-reentrant model
   794 ;;
   795                           
   796                           	psect	text4
   797   000A26                     __ptext4:
   798                           	callstack 0
   799   000A26                     _lcd_init:
   800                           	callstack 0
   801   000A26  FFFF               	dw	65535	; assembler added errata NOP
   802   000A28                     
   803                           ;./lcd.h: 78:   lcd_set_bit(0x00);
   804   000A28  0E00               	movlw	0
   805   000A2A  EC58  F004         	call	_lcd_set_bit
   806   000A2E                     
   807                           ;./lcd.h: 80:   lcd_cmd(0x03);
   808   000A2E  0E03               	movlw	3
   809   000A30  EC49  F005         	call	_lcd_cmd
   810   000A34                     
   811                           ;./lcd.h: 81:   _delay((unsigned long)((5)*(8000000/4000.0)));
   812   000A34  0E0A               	movlw	10
   813   000A36  6E04               	movwf	??_lcd_init^0,c
   814   000A38  0EBE               	movlw	190
   815   000A3A                     u317:
   816   000A3A  FFFF               	dw	65535	; errata NOP
   817   000A3C  2EE8               	decfsz	wreg,f,c
   818   000A3E  D7FD               	bra	u317
   819   000A40  2E04               	decfsz	??_lcd_init^0,f,c
   820   000A42  D7FB               	bra	u317
   821   000A44  D000               	nop2	
   822   000A46                     
   823                           ;./lcd.h: 82:   lcd_cmd(0x03);
   824   000A46  0E03               	movlw	3
   825   000A48  EC49  F005         	call	_lcd_cmd
   826                           
   827                           ;./lcd.h: 83:   _delay((unsigned long)((11)*(8000000/4000.0)));
   828   000A4C  0E16               	movlw	22
   829   000A4E  6E04               	movwf	??_lcd_init^0,c
   830   000A50  0E70               	movlw	112
   831   000A52                     u327:
   832   000A52  FFFF               	dw	65535	; errata NOP
   833   000A54  2EE8               	decfsz	wreg,f,c
   834   000A56  D7FD               	bra	u327
   835   000A58  2E04               	decfsz	??_lcd_init^0,f,c
   836   000A5A  D7FB               	bra	u327
   837   000A5C  D000               	nop2	
   838   000A5E                     
   839                           ;./lcd.h: 84:   lcd_cmd(0x03);
   840   000A5E  0E03               	movlw	3
   841   000A60  EC49  F005         	call	_lcd_cmd
   842   000A64                     
   843                           ;./lcd.h: 85:   lcd_cmd(0x02);
   844   000A64  0E02               	movlw	2
   845   000A66  EC49  F005         	call	_lcd_cmd
   846   000A6A                     
   847                           ;./lcd.h: 86:   lcd_cmd(0x02);
   848   000A6A  0E02               	movlw	2
   849   000A6C  EC49  F005         	call	_lcd_cmd
   850   000A70                     
   851                           ;./lcd.h: 87:   lcd_cmd(0x08);
   852   000A70  0E08               	movlw	8
   853   000A72  EC49  F005         	call	_lcd_cmd
   854   000A76                     
   855                           ;./lcd.h: 88:   lcd_cmd(0x00);
   856   000A76  0E00               	movlw	0
   857   000A78  EC49  F005         	call	_lcd_cmd
   858   000A7C                     
   859                           ;./lcd.h: 89:   lcd_cmd(0x0C);
   860   000A7C  0E0C               	movlw	12
   861   000A7E  EC49  F005         	call	_lcd_cmd
   862   000A82                     
   863                           ;./lcd.h: 90:   lcd_cmd(0x00);
   864   000A82  0E00               	movlw	0
   865   000A84  EC49  F005         	call	_lcd_cmd
   866   000A88                     
   867                           ;./lcd.h: 91:   lcd_cmd(0x06);
   868   000A88  0E06               	movlw	6
   869   000A8A  EC49  F005         	call	_lcd_cmd
   870   000A8E  0012               	return		;funcret
   871   000A90  FFFF               	dw	65535	; errata NOP
   872   000A92                     __end_of_lcd_init:
   873                           	callstack 0
   874                           
   875 ;; *************** function _lcd_clear *****************
   876 ;; Defined at:
   877 ;;		line 49 in file "./lcd.h"
   878 ;; Parameters:    Size  Location     Type
   879 ;;		None
   880 ;; Auto vars:     Size  Location     Type
   881 ;;		None
   882 ;; Return value:  Size  Location     Type
   883 ;;                  2   34[None  ] int 
   884 ;; Registers used:
   885 ;;		wreg, status,2, cstack
   886 ;; Tracked objects:
   887 ;;		On entry : 0/0
   888 ;;		On exit  : 0/0
   889 ;;		Unchanged: 0/0
   890 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   891 ;;      Params:         0       0       0       0       0       0       0
   892 ;;      Locals:         0       0       0       0       0       0       0
   893 ;;      Temps:          0       0       0       0       0       0       0
   894 ;;      Totals:         0       0       0       0       0       0       0
   895 ;;Total ram usage:        0 bytes
   896 ;; Hardware stack levels used: 1
   897 ;; Hardware stack levels required when called: 2
   898 ;; This function calls:
   899 ;;		_lcd_cmd
   900 ;; This function is called by:
   901 ;;		_main
   902 ;; This function uses a non-reentrant model
   903 ;;
   904                           
   905                           	psect	text5
   906   000B08                     __ptext5:
   907                           	callstack 0
   908   000B08                     _lcd_clear:
   909                           	callstack 0
   910   000B08  FFFF               	dw	65535	; assembler added errata NOP
   911   000B0A                     
   912                           ;./lcd.h: 51:     lcd_cmd(0);
   913   000B0A  0E00               	movlw	0
   914   000B0C  EC49  F005         	call	_lcd_cmd
   915                           
   916                           ;./lcd.h: 52:     lcd_cmd(1);
   917   000B10  0E01               	movlw	1
   918   000B12  EC49  F005         	call	_lcd_cmd
   919   000B16  0012               	return		;funcret
   920   000B18  FFFF               	dw	65535	; errata NOP
   921   000B1A                     __end_of_lcd_clear:
   922                           	callstack 0
   923                           
   924 ;; *************** function _lcd_cmd *****************
   925 ;; Defined at:
   926 ;;		line 40 in file "./lcd.h"
   927 ;; Parameters:    Size  Location     Type
   928 ;;  a               1    wreg     unsigned char 
   929 ;; Auto vars:     Size  Location     Type
   930 ;;  a               1    2[COMRAM] unsigned char 
   931 ;; Return value:  Size  Location     Type
   932 ;;                  1    wreg      void 
   933 ;; Registers used:
   934 ;;		wreg, status,2, cstack
   935 ;; Tracked objects:
   936 ;;		On entry : 0/0
   937 ;;		On exit  : 0/0
   938 ;;		Unchanged: 0/0
   939 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   940 ;;      Params:         0       0       0       0       0       0       0
   941 ;;      Locals:         1       0       0       0       0       0       0
   942 ;;      Temps:          1       0       0       0       0       0       0
   943 ;;      Totals:         2       0       0       0       0       0       0
   944 ;;Total ram usage:        2 bytes
   945 ;; Hardware stack levels used: 1
   946 ;; Hardware stack levels required when called: 1
   947 ;; This function calls:
   948 ;;		_lcd_set_bit
   949 ;; This function is called by:
   950 ;;		_lcd_clear
   951 ;;		_lcd_set_cursor
   952 ;;		_lcd_init
   953 ;; This function uses a non-reentrant model
   954 ;;
   955                           
   956                           	psect	text6
   957   000A92                     __ptext6:
   958                           	callstack 0
   959   000A92                     _lcd_cmd:
   960                           	callstack 0
   961   000A92  FFFF               	dw	65535	; assembler added errata NOP
   962                           
   963                           ;incstack = 0
   964                           ;lcd_cmd@a stored from wreg
   965   000A94  6E03               	movwf	lcd_cmd@a^0,c
   966   000A96                     
   967                           ;./lcd.h: 40: void lcd_cmd(char a);./lcd.h: 41: {;./lcd.h: 42:     LATDbits.LATD2 = 0;
   968   000A96  948C               	bcf	140,2,c	;volatile
   969   000A98                     
   970                           ;./lcd.h: 43:     lcd_set_bit(a);
   971   000A98  5003               	movf	lcd_cmd@a^0,w,c
   972   000A9A  EC58  F004         	call	_lcd_set_bit
   973   000A9E                     
   974                           ;./lcd.h: 44:     LATDbits.LATD3 = 1;
   975   000A9E  868C               	bsf	140,3,c	;volatile
   976   000AA0                     
   977                           ;./lcd.h: 45:     _delay((unsigned long)((4)*(8000000/4000.0)));
   978   000AA0  0E08               	movlw	8
   979   000AA2  6E02               	movwf	??_lcd_cmd^0,c
   980   000AA4  0ECB               	movlw	203
   981   000AA6                     u337:
   982   000AA6  FFFF               	dw	65535	; errata NOP
   983   000AA8  2EE8               	decfsz	wreg,f,c
   984   000AAA  D7FD               	bra	u337
   985   000AAC  2E02               	decfsz	??_lcd_cmd^0,f,c
   986   000AAE  D7FB               	bra	u337
   987   000AB0  D000               	nop2	
   988   000AB2                     
   989                           ;./lcd.h: 46:     LATDbits.LATD3 = 0;
   990   000AB2  968C               	bcf	140,3,c	;volatile
   991   000AB4  0012               	return		;funcret
   992   000AB6  FFFF               	dw	65535	; errata NOP
   993   000AB8                     __end_of_lcd_cmd:
   994                           	callstack 0
   995                           
   996 ;; *************** function _lcd_set_bit *****************
   997 ;; Defined at:
   998 ;;		line 17 in file "./lcd.h"
   999 ;; Parameters:    Size  Location     Type
  1000 ;;  data_bit        1    wreg     unsigned char 
  1001 ;; Auto vars:     Size  Location     Type
  1002 ;;  data_bit        1    0[COMRAM] unsigned char 
  1003 ;; Return value:  Size  Location     Type
  1004 ;;                  1    wreg      void 
  1005 ;; Registers used:
  1006 ;;		wreg
  1007 ;; Tracked objects:
  1008 ;;		On entry : 0/0
  1009 ;;		On exit  : 0/0
  1010 ;;		Unchanged: 0/0
  1011 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1012 ;;      Params:         0       0       0       0       0       0       0
  1013 ;;      Locals:         1       0       0       0       0       0       0
  1014 ;;      Temps:          0       0       0       0       0       0       0
  1015 ;;      Totals:         1       0       0       0       0       0       0
  1016 ;;Total ram usage:        1 bytes
  1017 ;; Hardware stack levels used: 1
  1018 ;; This function calls:
  1019 ;;		Nothing
  1020 ;; This function is called by:
  1021 ;;		_lcd_cmd
  1022 ;;		_lcd_init
  1023 ;;		_lcd_char
  1024 ;; This function uses a non-reentrant model
  1025 ;;
  1026                           
  1027                           	psect	text7
  1028   0008B0                     __ptext7:
  1029                           	callstack 0
  1030   0008B0                     _lcd_set_bit:
  1031                           	callstack 0
  1032   0008B0  FFFF               	dw	65535	; assembler added errata NOP
  1033                           
  1034                           ;incstack = 0
  1035                           ;lcd_set_bit@data_bit stored from wreg
  1036   0008B2  6E01               	movwf	lcd_set_bit@data_bit^0,c
  1037   0008B4                     
  1038                           ;./lcd.h: 17: void lcd_set_bit(char data_bit);./lcd.h: 18: {;./lcd.h: 19:     if(data_bi
      +                          t& 1)
  1039   0008B4  A001               	btfss	lcd_set_bit@data_bit^0,0,c
  1040   0008B6  EF5F  F004         	goto	u11
  1041   0008BA  EF62  F004         	goto	u10
  1042   0008BE                     u11:
  1043   0008BE  FFFF               	dw	65535	; assembler added errata NOP
  1044   0008C0  EF66  F004         	goto	l21
  1045   0008C4                     u10:
  1046   0008C4  FFFF               	dw	65535	; assembler added errata NOP
  1047   0008C6                     
  1048                           ;./lcd.h: 20:         LATDbits.LATD4 = 1;
  1049   0008C6  888C               	bsf	140,4,c	;volatile
  1050   0008C8  EF68  F004         	goto	l791
  1051   0008CC                     l21:
  1052   0008CC  FFFF               	dw	65535	; assembler added errata NOP
  1053                           
  1054                           ;./lcd.h: 22:         LATDbits.LATD4 = 0;
  1055   0008CE  988C               	bcf	140,4,c	;volatile
  1056   0008D0                     l791:
  1057   0008D0  FFFF               	dw	65535	; assembler added errata NOP
  1058                           
  1059                           ;./lcd.h: 24:     if(data_bit& 2)
  1060   0008D2  A201               	btfss	lcd_set_bit@data_bit^0,1,c
  1061   0008D4  EF6E  F004         	goto	u21
  1062   0008D8  EF71  F004         	goto	u20
  1063   0008DC                     u21:
  1064   0008DC  FFFF               	dw	65535	; assembler added errata NOP
  1065   0008DE  EF75  F004         	goto	l23
  1066   0008E2                     u20:
  1067   0008E2  FFFF               	dw	65535	; assembler added errata NOP
  1068   0008E4                     
  1069                           ;./lcd.h: 25:         LATDbits.LATD5 = 1;
  1070   0008E4  8A8C               	bsf	140,5,c	;volatile
  1071   0008E6  EF77  F004         	goto	l795
  1072   0008EA                     l23:
  1073   0008EA  FFFF               	dw	65535	; assembler added errata NOP
  1074                           
  1075                           ;./lcd.h: 27:         LATDbits.LATD5 = 0;
  1076   0008EC  9A8C               	bcf	140,5,c	;volatile
  1077   0008EE                     l795:
  1078   0008EE  FFFF               	dw	65535	; assembler added errata NOP
  1079                           
  1080                           ;./lcd.h: 29:     if(data_bit& 4)
  1081   0008F0  A401               	btfss	lcd_set_bit@data_bit^0,2,c
  1082   0008F2  EF7D  F004         	goto	u31
  1083   0008F6  EF80  F004         	goto	u30
  1084   0008FA                     u31:
  1085   0008FA  FFFF               	dw	65535	; assembler added errata NOP
  1086   0008FC  EF84  F004         	goto	l25
  1087   000900                     u30:
  1088   000900  FFFF               	dw	65535	; assembler added errata NOP
  1089   000902                     
  1090                           ;./lcd.h: 30:         LATDbits.LATD6 = 1;
  1091   000902  8C8C               	bsf	140,6,c	;volatile
  1092   000904  EF86  F004         	goto	l799
  1093   000908                     l25:
  1094   000908  FFFF               	dw	65535	; assembler added errata NOP
  1095                           
  1096                           ;./lcd.h: 32:         LATDbits.LATD6 = 0;
  1097   00090A  9C8C               	bcf	140,6,c	;volatile
  1098   00090C                     l799:
  1099   00090C  FFFF               	dw	65535	; assembler added errata NOP
  1100                           
  1101                           ;./lcd.h: 34:     if(data_bit& 8)
  1102   00090E  A601               	btfss	lcd_set_bit@data_bit^0,3,c
  1103   000910  EF8C  F004         	goto	u41
  1104   000914  EF8F  F004         	goto	u40
  1105   000918                     u41:
  1106   000918  FFFF               	dw	65535	; assembler added errata NOP
  1107   00091A  EF93  F004         	goto	l27
  1108   00091E                     u40:
  1109   00091E  FFFF               	dw	65535	; assembler added errata NOP
  1110   000920                     
  1111                           ;./lcd.h: 35:         LATDbits.LATD7 = 1;
  1112   000920  8E8C               	bsf	140,7,c	;volatile
  1113   000922  EF95  F004         	goto	l29
  1114   000926                     l27:
  1115   000926  FFFF               	dw	65535	; assembler added errata NOP
  1116                           
  1117                           ;./lcd.h: 37:         LATDbits.LATD7 = 0;
  1118   000928  9E8C               	bcf	140,7,c	;volatile
  1119   00092A                     l29:
  1120   00092A  FFFF               	dw	65535	; assembler added errata NOP
  1121   00092C  0012               	return		;funcret
  1122   00092E  FFFF               	dw	65535	; errata NOP
  1123   000930                     __end_of_lcd_set_bit:
  1124                           	callstack 0
  1125                           
  1126 ;; *************** function _i2c_write *****************
  1127 ;; Defined at:
  1128 ;;		line 93 in file "./soft_i2c_master.h"
  1129 ;; Parameters:    Size  Location     Type
  1130 ;;  d               1    wreg     unsigned char 
  1131 ;; Auto vars:     Size  Location     Type
  1132 ;;  d               1    0[COMRAM] unsigned char 
  1133 ;;  x               1    2[COMRAM] unsigned char 
  1134 ;;  b               1    1[COMRAM] unsigned char 
  1135 ;; Return value:  Size  Location     Type
  1136 ;;                  1    wreg      unsigned char 
  1137 ;; Registers used:
  1138 ;;		wreg, status,2, status,0, cstack
  1139 ;; Tracked objects:
  1140 ;;		On entry : 0/0
  1141 ;;		On exit  : 0/0
  1142 ;;		Unchanged: 0/0
  1143 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1144 ;;      Params:         0       0       0       0       0       0       0
  1145 ;;      Locals:         3       0       0       0       0       0       0
  1146 ;;      Temps:          0       0       0       0       0       0       0
  1147 ;;      Totals:         3       0       0       0       0       0       0
  1148 ;;Total ram usage:        3 bytes
  1149 ;; Hardware stack levels used: 1
  1150 ;; Hardware stack levels required when called: 1
  1151 ;; This function calls:
  1152 ;;		_dly
  1153 ;; This function is called by:
  1154 ;;		_main
  1155 ;; This function uses a non-reentrant model
  1156 ;;
  1157                           
  1158                           	psect	text8
  1159   000930                     __ptext8:
  1160                           	callstack 0
  1161   000930                     _i2c_write:
  1162                           	callstack 0
  1163   000930  FFFF               	dw	65535	; assembler added errata NOP
  1164                           
  1165                           ;incstack = 0
  1166                           ;i2c_write@d stored from wreg
  1167   000932  6E01               	movwf	i2c_write@d^0,c
  1168   000934                     
  1169                           ;./soft_i2c_master.h: 93: unsigned char i2c_write(unsigned char d);./soft_i2c_master.h: 
      +                          94: {;./soft_i2c_master.h: 95:   unsigned char b;;./soft_i2c_master.h: 96:   for(unsigne
      +                          d char x=8; x>0; x--) {
  1170   000934  0E08               	movlw	8
  1171   000936  6E03               	movwf	i2c_write@x^0,c
  1172   000938                     l91:
  1173   000938  FFFF               	dw	65535	; assembler added errata NOP
  1174                           
  1175                           ;./soft_i2c_master.h: 97:     if(d&0x80) TRISB1 = 1;
  1176   00093A  AE01               	btfss	i2c_write@d^0,7,c
  1177   00093C  EFA2  F004         	goto	u161
  1178   000940  EFA5  F004         	goto	u160
  1179   000944                     u161:
  1180   000944  FFFF               	dw	65535	; assembler added errata NOP
  1181   000946  EFA9  F004         	goto	l93
  1182   00094A                     u160:
  1183   00094A  FFFF               	dw	65535	; assembler added errata NOP
  1184   00094C  8293               	bsf	3987,1,c	;volatile
  1185   00094E  EFAB  F004         	goto	l991
  1186   000952                     l93:
  1187   000952  FFFF               	dw	65535	; assembler added errata NOP
  1188   000954  9293               	bcf	3987,1,c	;volatile
  1189   000956                     l991:
  1190   000956  FFFF               	dw	65535	; assembler added errata NOP
  1191                           
  1192                           ;./soft_i2c_master.h: 99:     d <<= 1;
  1193   000958  90D8               	bcf	status,0,c
  1194   00095A  3601               	rlcf	i2c_write@d^0,f,c
  1195   00095C                     
  1196                           ;./soft_i2c_master.h: 100:     TRISB4 = 1;
  1197   00095C  8893               	bsf	3987,4,c	;volatile
  1198   00095E                     
  1199                           ;./soft_i2c_master.h: 101:     dly();
  1200   00095E  EC95  F005         	call	_dly	;wreg free
  1201   000962                     
  1202                           ;./soft_i2c_master.h: 102:     TRISB4 = 0;
  1203   000962  9893               	bcf	3987,4,c	;volatile
  1204   000964                     
  1205                           ;./soft_i2c_master.h: 103:     dly();
  1206   000964  EC95  F005         	call	_dly	;wreg free
  1207   000968                     
  1208                           ;./soft_i2c_master.h: 104:   }
  1209   000968  0603               	decf	i2c_write@x^0,f,c
  1210   00096A  5003               	movf	i2c_write@x^0,w,c
  1211   00096C  A4D8               	btfss	status,2,c
  1212   00096E  EFBB  F004         	goto	u171
  1213   000972  EFBE  F004         	goto	u170
  1214   000976                     u171:
  1215   000976  FFFF               	dw	65535	; assembler added errata NOP
  1216   000978  EF9C  F004         	goto	l91
  1217   00097C                     u170:
  1218   00097C  FFFF               	dw	65535	; assembler added errata NOP
  1219   00097E                     
  1220                           ;./soft_i2c_master.h: 106:   TRISB1 = 1;
  1221   00097E  8293               	bsf	3987,1,c	;volatile
  1222                           
  1223                           ;./soft_i2c_master.h: 107:   TRISB4 = 1;
  1224   000980  8893               	bsf	3987,4,c	;volatile
  1225   000982                     
  1226                           ;./soft_i2c_master.h: 109:   _delay((unsigned long)((5)*(8000000/4000000.0)));
  1227   000982  0E02               	movlw	2
  1228   000984                     u347:
  1229   000984  FFFF               	dw	65535	; errata NOP
  1230   000986  2EE8               	decfsz	wreg,f,c
  1231   000988  D7FD               	bra	u347
  1232   00098A  D000               	nop2	
  1233   00098C                     l95:
  1234   00098C  FFFF               	dw	65535	; assembler added errata NOP
  1235   00098E  A881               	btfss	129,4,c	;volatile
  1236   000990  EFCC  F004         	goto	u181
  1237   000994  EFCF  F004         	goto	u180
  1238   000998                     u181:
  1239   000998  FFFF               	dw	65535	; assembler added errata NOP
  1240   00099A  EFC6  F004         	goto	l95
  1241   00099E                     u180:
  1242   00099E  FFFF               	dw	65535	; assembler added errata NOP
  1243   0009A0                     
  1244                           ;./soft_i2c_master.h: 112:   b = PORTBbits.RB1;
  1245   0009A0  0E00               	movlw	0
  1246   0009A2  B281               	btfsc	129,1,c	;volatile
  1247   0009A4  0E01               	movlw	1
  1248   0009A6  6E02               	movwf	i2c_write@b^0,c
  1249   0009A8                     
  1250                           ;./soft_i2c_master.h: 113:   TRISB4 = 0;
  1251   0009A8  9893               	bcf	3987,4,c	;volatile
  1252   0009AA                     
  1253                           ;./soft_i2c_master.h: 114:   return b;
  1254   0009AA  5002               	movf	i2c_write@b^0,w,c
  1255   0009AC  0012               	return		;funcret
  1256   0009AE  FFFF               	dw	65535	; errata NOP
  1257   0009B0                     __end_of_i2c_write:
  1258                           	callstack 0
  1259                           
  1260 ;; *************** function _i2c_stop *****************
  1261 ;; Defined at:
  1262 ;;		line 51 in file "./soft_i2c_master.h"
  1263 ;; Parameters:    Size  Location     Type
  1264 ;;		None
  1265 ;; Auto vars:     Size  Location     Type
  1266 ;;		None
  1267 ;; Return value:  Size  Location     Type
  1268 ;;                  1    wreg      void 
  1269 ;; Registers used:
  1270 ;;		wreg, cstack
  1271 ;; Tracked objects:
  1272 ;;		On entry : 0/0
  1273 ;;		On exit  : 0/0
  1274 ;;		Unchanged: 0/0
  1275 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1276 ;;      Params:         0       0       0       0       0       0       0
  1277 ;;      Locals:         0       0       0       0       0       0       0
  1278 ;;      Temps:          0       0       0       0       0       0       0
  1279 ;;      Totals:         0       0       0       0       0       0       0
  1280 ;;Total ram usage:        0 bytes
  1281 ;; Hardware stack levels used: 1
  1282 ;; Hardware stack levels required when called: 1
  1283 ;; This function calls:
  1284 ;;		_dly
  1285 ;; This function is called by:
  1286 ;;		_main
  1287 ;; This function uses a non-reentrant model
  1288 ;;
  1289                           
  1290                           	psect	text9
  1291   000AF0                     __ptext9:
  1292                           	callstack 0
  1293   000AF0                     _i2c_stop:
  1294                           	callstack 0
  1295   000AF0  FFFF               	dw	65535	; assembler added errata NOP
  1296   000AF2                     
  1297                           ;./soft_i2c_master.h: 53:   TRISB1 = 0;
  1298   000AF2  9293               	bcf	3987,1,c	;volatile
  1299   000AF4                     
  1300                           ;./soft_i2c_master.h: 54:   dly();
  1301   000AF4  EC95  F005         	call	_dly	;wreg free
  1302   000AF8                     
  1303                           ;./soft_i2c_master.h: 55:   TRISB4 = 1;
  1304   000AF8  8893               	bsf	3987,4,c	;volatile
  1305                           
  1306                           ;./soft_i2c_master.h: 56:   dly();
  1307   000AFA  EC95  F005         	call	_dly	;wreg free
  1308   000AFE                     
  1309                           ;./soft_i2c_master.h: 57:   TRISB1 = 1;
  1310   000AFE  8293               	bsf	3987,1,c	;volatile
  1311                           
  1312                           ;./soft_i2c_master.h: 58:   dly();
  1313   000B00  EC95  F005         	call	_dly	;wreg free
  1314   000B04  0012               	return		;funcret
  1315   000B06  FFFF               	dw	65535	; errata NOP
  1316   000B08                     __end_of_i2c_stop:
  1317                           	callstack 0
  1318                           
  1319 ;; *************** function _i2c_start *****************
  1320 ;; Defined at:
  1321 ;;		line 28 in file "./soft_i2c_master.h"
  1322 ;; Parameters:    Size  Location     Type
  1323 ;;		None
  1324 ;; Auto vars:     Size  Location     Type
  1325 ;;		None
  1326 ;; Return value:  Size  Location     Type
  1327 ;;                  1    wreg      void 
  1328 ;; Registers used:
  1329 ;;		wreg, cstack
  1330 ;; Tracked objects:
  1331 ;;		On entry : 0/0
  1332 ;;		On exit  : 0/0
  1333 ;;		Unchanged: 0/0
  1334 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1335 ;;      Params:         0       0       0       0       0       0       0
  1336 ;;      Locals:         0       0       0       0       0       0       0
  1337 ;;      Temps:          0       0       0       0       0       0       0
  1338 ;;      Totals:         0       0       0       0       0       0       0
  1339 ;;Total ram usage:        0 bytes
  1340 ;; Hardware stack levels used: 1
  1341 ;; Hardware stack levels required when called: 1
  1342 ;; This function calls:
  1343 ;;		_dly
  1344 ;; This function is called by:
  1345 ;;		_main
  1346 ;; This function uses a non-reentrant model
  1347 ;;
  1348                           
  1349                           	psect	text10
  1350   000AB8                     __ptext10:
  1351                           	callstack 0
  1352   000AB8                     _i2c_start:
  1353                           	callstack 0
  1354   000AB8  FFFF               	dw	65535	; assembler added errata NOP
  1355   000ABA                     
  1356                           ;./soft_i2c_master.h: 30:   TRISB1 = 1;
  1357   000ABA  8293               	bsf	3987,1,c	;volatile
  1358   000ABC                     
  1359                           ;./soft_i2c_master.h: 31:   dly();
  1360   000ABC  EC95  F005         	call	_dly	;wreg free
  1361   000AC0                     
  1362                           ;./soft_i2c_master.h: 32:   TRISB4 = 1;
  1363   000AC0  8893               	bsf	3987,4,c	;volatile
  1364                           
  1365                           ;./soft_i2c_master.h: 33:   dly();
  1366   000AC2  EC95  F005         	call	_dly	;wreg free
  1367   000AC6                     
  1368                           ;./soft_i2c_master.h: 34:   TRISB1 = 0;
  1369   000AC6  9293               	bcf	3987,1,c	;volatile
  1370                           
  1371                           ;./soft_i2c_master.h: 35:   dly();
  1372   000AC8  EC95  F005         	call	_dly	;wreg free
  1373   000ACC                     
  1374                           ;./soft_i2c_master.h: 36:   TRISB4 = 0;
  1375   000ACC  9893               	bcf	3987,4,c	;volatile
  1376                           
  1377                           ;./soft_i2c_master.h: 37:   dly();
  1378   000ACE  EC95  F005         	call	_dly	;wreg free
  1379   000AD2  0012               	return		;funcret
  1380   000AD4  FFFF               	dw	65535	; errata NOP
  1381   000AD6                     __end_of_i2c_start:
  1382                           	callstack 0
  1383                           
  1384 ;; *************** function _i2c_restart *****************
  1385 ;; Defined at:
  1386 ;;		line 40 in file "./soft_i2c_master.h"
  1387 ;; Parameters:    Size  Location     Type
  1388 ;;		None
  1389 ;; Auto vars:     Size  Location     Type
  1390 ;;		None
  1391 ;; Return value:  Size  Location     Type
  1392 ;;                  1    wreg      void 
  1393 ;; Registers used:
  1394 ;;		wreg, cstack
  1395 ;; Tracked objects:
  1396 ;;		On entry : 0/0
  1397 ;;		On exit  : 0/0
  1398 ;;		Unchanged: 0/0
  1399 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1400 ;;      Params:         0       0       0       0       0       0       0
  1401 ;;      Locals:         0       0       0       0       0       0       0
  1402 ;;      Temps:          0       0       0       0       0       0       0
  1403 ;;      Totals:         0       0       0       0       0       0       0
  1404 ;;Total ram usage:        0 bytes
  1405 ;; Hardware stack levels used: 1
  1406 ;; Hardware stack levels required when called: 1
  1407 ;; This function calls:
  1408 ;;		_dly
  1409 ;; This function is called by:
  1410 ;;		_main
  1411 ;; This function uses a non-reentrant model
  1412 ;;
  1413                           
  1414                           	psect	text11
  1415   000AD6                     __ptext11:
  1416                           	callstack 0
  1417   000AD6                     _i2c_restart:
  1418                           	callstack 0
  1419   000AD6  FFFF               	dw	65535	; assembler added errata NOP
  1420   000AD8                     
  1421                           ;./soft_i2c_master.h: 41:     TRISB1 = 1;
  1422   000AD8  8293               	bsf	3987,1,c	;volatile
  1423   000ADA                     
  1424                           ;./soft_i2c_master.h: 42:     dly();
  1425   000ADA  EC95  F005         	call	_dly	;wreg free
  1426   000ADE                     
  1427                           ;./soft_i2c_master.h: 43:     TRISB4 = 1;
  1428   000ADE  8893               	bsf	3987,4,c	;volatile
  1429                           
  1430                           ;./soft_i2c_master.h: 44:     dly();
  1431   000AE0  EC95  F005         	call	_dly	;wreg free
  1432   000AE4                     
  1433                           ;./soft_i2c_master.h: 45:     TRISB1 = 0;
  1434   000AE4  9293               	bcf	3987,1,c	;volatile
  1435                           
  1436                           ;./soft_i2c_master.h: 46:     dly();
  1437   000AE6  EC95  F005         	call	_dly	;wreg free
  1438   000AEA                     
  1439                           ;./soft_i2c_master.h: 47:     TRISB4 = 0;
  1440   000AEA  9893               	bcf	3987,4,c	;volatile
  1441   000AEC  0012               	return		;funcret
  1442   000AEE  FFFF               	dw	65535	; errata NOP
  1443   000AF0                     __end_of_i2c_restart:
  1444                           	callstack 0
  1445                           
  1446 ;; *************** function _i2c_read *****************
  1447 ;; Defined at:
  1448 ;;		line 62 in file "./soft_i2c_master.h"
  1449 ;; Parameters:    Size  Location     Type
  1450 ;;  nack            1    wreg     unsigned char 
  1451 ;; Auto vars:     Size  Location     Type
  1452 ;;  nack            1    0[COMRAM] unsigned char 
  1453 ;;  x               1    2[COMRAM] unsigned char 
  1454 ;;  data            1    1[COMRAM] unsigned char 
  1455 ;; Return value:  Size  Location     Type
  1456 ;;                  1    wreg      unsigned char 
  1457 ;; Registers used:
  1458 ;;		wreg, status,2, status,0, cstack
  1459 ;; Tracked objects:
  1460 ;;		On entry : 0/0
  1461 ;;		On exit  : 0/0
  1462 ;;		Unchanged: 0/0
  1463 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1464 ;;      Params:         0       0       0       0       0       0       0
  1465 ;;      Locals:         3       0       0       0       0       0       0
  1466 ;;      Temps:          0       0       0       0       0       0       0
  1467 ;;      Totals:         3       0       0       0       0       0       0
  1468 ;;Total ram usage:        3 bytes
  1469 ;; Hardware stack levels used: 1
  1470 ;; Hardware stack levels required when called: 1
  1471 ;; This function calls:
  1472 ;;		_dly
  1473 ;; This function is called by:
  1474 ;;		_main
  1475 ;; This function uses a non-reentrant model
  1476 ;;
  1477                           
  1478                           	psect	text12
  1479   0006FC                     __ptext12:
  1480                           	callstack 0
  1481   0006FC                     _i2c_read:
  1482                           	callstack 0
  1483   0006FC  FFFF               	dw	65535	; assembler added errata NOP
  1484                           
  1485                           ;incstack = 0
  1486                           ;i2c_read@nack stored from wreg
  1487   0006FE  6E01               	movwf	i2c_read@nack^0,c
  1488   000700                     
  1489                           ;./soft_i2c_master.h: 63:     unsigned char data = 0;
  1490   000700  0E00               	movlw	0
  1491   000702  6E02               	movwf	i2c_read@data^0,c
  1492   000704                     
  1493                           ;./soft_i2c_master.h: 65:     dly();
  1494   000704  EC95  F005         	call	_dly	;wreg free
  1495   000708                     
  1496                           ;./soft_i2c_master.h: 67:     TRISB1 = 1;
  1497   000708  8293               	bsf	3987,1,c	;volatile
  1498   00070A                     
  1499                           ;./soft_i2c_master.h: 68:     TRISB4 = 1;
  1500   00070A  8893               	bsf	3987,4,c	;volatile
  1501   00070C                     l80:
  1502   00070C  FFFF               	dw	65535	; assembler added errata NOP
  1503   00070E  A881               	btfss	129,4,c	;volatile
  1504   000710  EF8C  F003         	goto	u121
  1505   000714  EF8F  F003         	goto	u120
  1506   000718                     u121:
  1507   000718  FFFF               	dw	65535	; assembler added errata NOP
  1508   00071A  EF86  F003         	goto	l80
  1509   00071E                     u120:
  1510   00071E  FFFF               	dw	65535	; assembler added errata NOP
  1511   000720                     
  1512                           ;./soft_i2c_master.h: 72:     for (char x = 0; x<8; x++) {
  1513   000720  0E00               	movlw	0
  1514   000722  6E03               	movwf	i2c_read@x^0,c
  1515   000724                     l951:
  1516   000724  FFFF               	dw	65535	; assembler added errata NOP
  1517                           
  1518                           ;./soft_i2c_master.h: 73:         data <<= 1;
  1519   000726  90D8               	bcf	status,0,c
  1520   000728  3602               	rlcf	i2c_read@data^0,f,c
  1521   00072A                     
  1522                           ;./soft_i2c_master.h: 74:         if (PORTBbits.RB1) data |= 1;
  1523   00072A  A281               	btfss	129,1,c	;volatile
  1524   00072C  EF9A  F003         	goto	u131
  1525   000730  EF9D  F003         	goto	u130
  1526   000734                     u131:
  1527   000734  FFFF               	dw	65535	; assembler added errata NOP
  1528   000736  EF9F  F003         	goto	l957
  1529   00073A                     u130:
  1530   00073A  FFFF               	dw	65535	; assembler added errata NOP
  1531   00073C  8002               	bsf	i2c_read@data^0,0,c
  1532   00073E                     l957:
  1533   00073E  FFFF               	dw	65535	; assembler added errata NOP
  1534                           
  1535                           ;./soft_i2c_master.h: 75:         TRISB4 = 1;
  1536   000740  8893               	bsf	3987,4,c	;volatile
  1537   000742                     
  1538                           ;./soft_i2c_master.h: 76:         dly();
  1539   000742  EC95  F005         	call	_dly	;wreg free
  1540   000746                     
  1541                           ;./soft_i2c_master.h: 77:         TRISB4 = 0;
  1542   000746  9893               	bcf	3987,4,c	;volatile
  1543   000748                     
  1544                           ;./soft_i2c_master.h: 78:         dly();
  1545   000748  EC95  F005         	call	_dly	;wreg free
  1546                           
  1547                           ;./soft_i2c_master.h: 79:     }
  1548   00074C  2A03               	incf	i2c_read@x^0,f,c
  1549   00074E  0E07               	movlw	7
  1550   000750  6403               	cpfsgt	i2c_read@x^0,c
  1551   000752  EFAD  F003         	goto	u141
  1552   000756  EFB0  F003         	goto	u140
  1553   00075A                     u141:
  1554   00075A  FFFF               	dw	65535	; assembler added errata NOP
  1555   00075C  EF92  F003         	goto	l951
  1556   000760                     u140:
  1557   000760  FFFF               	dw	65535	; assembler added errata NOP
  1558   000762                     
  1559                           ;./soft_i2c_master.h: 81:     if(nack) TRISB1 = 1;
  1560   000762  5001               	movf	i2c_read@nack^0,w,c
  1561   000764  B4D8               	btfsc	status,2,c
  1562   000766  EFB7  F003         	goto	u151
  1563   00076A  EFBA  F003         	goto	u150
  1564   00076E                     u151:
  1565   00076E  FFFF               	dw	65535	; assembler added errata NOP
  1566   000770  EFBE  F003         	goto	l86
  1567   000774                     u150:
  1568   000774  FFFF               	dw	65535	; assembler added errata NOP
  1569   000776  8293               	bsf	3987,1,c	;volatile
  1570   000778  EFC0  F003         	goto	l971
  1571   00077C                     l86:
  1572   00077C  FFFF               	dw	65535	; assembler added errata NOP
  1573   00077E  9293               	bcf	3987,1,c	;volatile
  1574   000780                     l971:
  1575   000780  FFFF               	dw	65535	; assembler added errata NOP
  1576                           
  1577                           ;./soft_i2c_master.h: 83:     dly();
  1578   000782  EC95  F005         	call	_dly	;wreg free
  1579   000786                     
  1580                           ;./soft_i2c_master.h: 84:     TRISB4 = 1;
  1581   000786  8893               	bsf	3987,4,c	;volatile
  1582                           
  1583                           ;./soft_i2c_master.h: 85:     dly();
  1584   000788  EC95  F005         	call	_dly	;wreg free
  1585   00078C                     
  1586                           ;./soft_i2c_master.h: 87:     TRISB4 = 0;
  1587   00078C  9893               	bcf	3987,4,c	;volatile
  1588   00078E                     
  1589                           ;./soft_i2c_master.h: 88:     TRISB1 = 0;
  1590   00078E  9293               	bcf	3987,1,c	;volatile
  1591   000790                     
  1592                           ;./soft_i2c_master.h: 90:     return data;
  1593   000790  5002               	movf	i2c_read@data^0,w,c
  1594   000792  0012               	return		;funcret
  1595   000794  FFFF               	dw	65535	; errata NOP
  1596   000796                     __end_of_i2c_read:
  1597                           	callstack 0
  1598                           
  1599 ;; *************** function _dly *****************
  1600 ;; Defined at:
  1601 ;;		line 24 in file "./soft_i2c_master.h"
  1602 ;; Parameters:    Size  Location     Type
  1603 ;;		None
  1604 ;; Auto vars:     Size  Location     Type
  1605 ;;		None
  1606 ;; Return value:  Size  Location     Type
  1607 ;;                  1    wreg      void 
  1608 ;; Registers used:
  1609 ;;		wreg
  1610 ;; Tracked objects:
  1611 ;;		On entry : 0/0
  1612 ;;		On exit  : 0/0
  1613 ;;		Unchanged: 0/0
  1614 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1615 ;;      Params:         0       0       0       0       0       0       0
  1616 ;;      Locals:         0       0       0       0       0       0       0
  1617 ;;      Temps:          0       0       0       0       0       0       0
  1618 ;;      Totals:         0       0       0       0       0       0       0
  1619 ;;Total ram usage:        0 bytes
  1620 ;; Hardware stack levels used: 1
  1621 ;; This function calls:
  1622 ;;		Nothing
  1623 ;; This function is called by:
  1624 ;;		_i2c_start
  1625 ;;		_i2c_restart
  1626 ;;		_i2c_stop
  1627 ;;		_i2c_read
  1628 ;;		_i2c_write
  1629 ;; This function uses a non-reentrant model
  1630 ;;
  1631                           
  1632                           	psect	text13
  1633   000B2A                     __ptext13:
  1634                           	callstack 0
  1635   000B2A                     _dly:
  1636                           	callstack 0
  1637   000B2A  FFFF               	dw	65535	; assembler added errata NOP
  1638   000B2C                     
  1639                           ;./soft_i2c_master.h: 25:     _delay((unsigned long)((10)*(8000000/4000000.0)));
  1640   000B2C  0E05               	movlw	5
  1641   000B2E                     u357:
  1642   000B2E  FFFF               	dw	65535	; errata NOP
  1643   000B30  2EE8               	decfsz	wreg,f,c
  1644   000B32  D7FD               	bra	u357
  1645   000B34  0012               	return		;funcret
  1646   000B36  FFFF               	dw	65535	; errata NOP
  1647   000B38                     __end_of_dly:
  1648                           	callstack 0
  1649                           
  1650 ;; *************** function _i2c_init *****************
  1651 ;; Defined at:
  1652 ;;		line 19 in file "./soft_i2c_master.h"
  1653 ;; Parameters:    Size  Location     Type
  1654 ;;		None
  1655 ;; Auto vars:     Size  Location     Type
  1656 ;;		None
  1657 ;; Return value:  Size  Location     Type
  1658 ;;                  1    wreg      void 
  1659 ;; Registers used:
  1660 ;;		None
  1661 ;; Tracked objects:
  1662 ;;		On entry : 0/0
  1663 ;;		On exit  : 0/0
  1664 ;;		Unchanged: 0/0
  1665 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1666 ;;      Params:         0       0       0       0       0       0       0
  1667 ;;      Locals:         0       0       0       0       0       0       0
  1668 ;;      Temps:          0       0       0       0       0       0       0
  1669 ;;      Totals:         0       0       0       0       0       0       0
  1670 ;;Total ram usage:        0 bytes
  1671 ;; Hardware stack levels used: 1
  1672 ;; This function calls:
  1673 ;;		Nothing
  1674 ;; This function is called by:
  1675 ;;		_main
  1676 ;; This function uses a non-reentrant model
  1677 ;;
  1678                           
  1679                           	psect	text14
  1680   000B38                     __ptext14:
  1681                           	callstack 0
  1682   000B38                     _i2c_init:
  1683                           	callstack 0
  1684   000B38  FFFF               	dw	65535	; assembler added errata NOP
  1685   000B3A                     
  1686                           ;./soft_i2c_master.h: 20:     TRISB1 = TRISB4 = 1;
  1687   000B3A  8893               	bsf	3987,4,c	;volatile
  1688   000B3C  8293               	bsf	3987,1,c	;volatile
  1689                           
  1690                           ;./soft_i2c_master.h: 21:     LATBbits.LB4 = LATBbits.LB1 = 0;
  1691   000B3E  928A               	bcf	138,1,c	;volatile
  1692   000B40  988A               	bcf	138,4,c	;volatile
  1693   000B42  0012               	return		;funcret
  1694   000B44  FFFF               	dw	65535	; errata NOP
  1695   000B46                     __end_of_i2c_init:
  1696                           	callstack 0
  1697                           
  1698                           	psect	rparam
  1699   000000                     
  1700                           	psect	config
  1701                           
  1702                           ;Config register CONFIG2L @ 0x300002
  1703                           ;	unspecified, using default values
  1704                           ;	Power-up Timer Enable bit
  1705                           ;	PWRT = 0x1, unprogrammed default
  1706                           ;	Brown-out Reset Enable bit
  1707                           ;	BOR = 0x1, unprogrammed default
  1708                           ;	Brown-out Reset Voltage bits
  1709                           ;	BORV = 0x3, unprogrammed default
  1710   300002                     	org	3145730
  1711   300002  0F                 	db	15
  1712                           
  1713                           ;Config register CONFIG2H @ 0x300003
  1714                           ;	Watchdog Timer Enable bit
  1715                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  1716                           ;	Watchdog Timer Postscale Select bits
  1717                           ;	WDTPS = 0x7, unprogrammed default
  1718   300003                     	org	3145731
  1719   300003  0E                 	db	14
  1720                           tosu	equ	0xFFF
  1721                           tosh	equ	0xFFE
  1722                           tosl	equ	0xFFD
  1723                           stkptr	equ	0xFFC
  1724                           pclatu	equ	0xFFB
  1725                           pclath	equ	0xFFA
  1726                           pcl	equ	0xFF9
  1727                           tblptru	equ	0xFF8
  1728                           tblptrh	equ	0xFF7
  1729                           tblptrl	equ	0xFF6
  1730                           tablat	equ	0xFF5
  1731                           prodh	equ	0xFF4
  1732                           prodl	equ	0xFF3
  1733                           indf0	equ	0xFEF
  1734                           postinc0	equ	0xFEE
  1735                           postdec0	equ	0xFED
  1736                           preinc0	equ	0xFEC
  1737                           plusw0	equ	0xFEB
  1738                           fsr0h	equ	0xFEA
  1739                           fsr0l	equ	0xFE9
  1740                           wreg	equ	0xFE8
  1741                           indf1	equ	0xFE7
  1742                           postinc1	equ	0xFE6
  1743                           postdec1	equ	0xFE5
  1744                           preinc1	equ	0xFE4
  1745                           plusw1	equ	0xFE3
  1746                           fsr1h	equ	0xFE2
  1747                           fsr1l	equ	0xFE1
  1748                           bsr	equ	0xFE0
  1749                           indf2	equ	0xFDF
  1750                           postinc2	equ	0xFDE
  1751                           postdec2	equ	0xFDD
  1752                           preinc2	equ	0xFDC
  1753                           plusw2	equ	0xFDB
  1754                           fsr2h	equ	0xFDA
  1755                           fsr2l	equ	0xFD9
  1756                           status	equ	0xFD8

Data Sizes:
    Strings     9
    Constant    0
    Data        0
    BSS         3
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     18      21
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    lcd_string@a	PTR unsigned char  size(2) Largest target is 9
		 -> payload(COMRAM[3]), STR_1(CODE[9]), 


Critical Paths under _main in COMRAM

    _main->_lcd_string
    _lcd_string->_lcd_char
    _lcd_char->_lcd_set_bit
    _lcd_set_cursor->_lcd_cmd
    _lcd_init->_lcd_cmd
    _lcd_clear->_lcd_cmd
    _lcd_cmd->_lcd_set_bit

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0    1272
                                             14 COMRAM     4     4      0
                           _i2c_init
                           _i2c_read
                        _i2c_restart
                          _i2c_start
                           _i2c_stop
                          _i2c_write
                          _lcd_clear
                           _lcd_init
                     _lcd_set_cursor
                         _lcd_string
 ---------------------------------------------------------------------------------
 (1) _lcd_string                                           6     4      2     422
                                              8 COMRAM     6     4      2
                           _lcd_char
 ---------------------------------------------------------------------------------
 (2) _lcd_char                                             7     7      0     180
                                              1 COMRAM     7     7      0
                        _lcd_set_bit
 ---------------------------------------------------------------------------------
 (1) _lcd_set_cursor                                       5     4      1     421
                                              3 COMRAM     5     4      1
                            _lcd_cmd
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             3     3      0     165
                                              3 COMRAM     1     1      0
                            _lcd_cmd
                        _lcd_set_bit
 ---------------------------------------------------------------------------------
 (1) _lcd_clear                                            0     0      0      75
                            _lcd_cmd
 ---------------------------------------------------------------------------------
 (2) _lcd_cmd                                              2     2      0      75
                                              1 COMRAM     2     2      0
                        _lcd_set_bit
 ---------------------------------------------------------------------------------
 (3) _lcd_set_bit                                          1     1      0      60
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _i2c_write                                            3     3      0      60
                                              0 COMRAM     3     3      0
                                _dly
 ---------------------------------------------------------------------------------
 (1) _i2c_stop                                             0     0      0       0
                                _dly
 ---------------------------------------------------------------------------------
 (1) _i2c_start                                            0     0      0       0
                                _dly
 ---------------------------------------------------------------------------------
 (1) _i2c_restart                                          0     0      0       0
                                _dly
 ---------------------------------------------------------------------------------
 (1) _i2c_read                                             3     3      0      60
                                              0 COMRAM     3     3      0
                                _dly
 ---------------------------------------------------------------------------------
 (2) _dly                                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _i2c_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _i2c_init
   _i2c_read
     _dly
   _i2c_restart
     _dly
   _i2c_start
     _dly
   _i2c_stop
     _dly
   _i2c_write
     _dly
   _lcd_clear
     _lcd_cmd
       _lcd_set_bit
   _lcd_init
     _lcd_cmd
     _lcd_set_bit
   _lcd_set_cursor
     _lcd_cmd
   _lcd_string
     _lcd_char
       _lcd_set_bit

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      23        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBIGSFRlll        81      0       0      21        0.0%
BITBIGSFRhhh        6A      0       0      16        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     12      15       1       22.1%
BITBIGSFRllh         8      0       0      20        0.0%
BITBIGSFRhl          6      0       0      18        0.0%
BITBIGSFRlh          1      0       0      19        0.0%
BITBIGSFRhhl         1      0       0      17        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      15      22        0.0%
DATA                 0      0      15       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Tue Sep 03 18:14:06 2024

                                             ?_lcd_set_bit 0001  
                                             lcd_char@data 0008  
                                            lcd_char@i_193 0006  
                                                       l21 08CC  
                                                       l23 08EA  
                                                       l32 0AB4  
                                                       l25 0908  
                                                       l41 0A20  
                                                       l50 0870  
                                                       l27 0926  
                                                       l35 0B16  
                                                       l51 0882  
                                                       l52 08AA  
                                                       l29 092A  
                                                       l53 08AC  
                                                       l46 0A8E  
                                                       l71 0AD2  
                                                       l80 070C  
                                                       l65 0B42  
                                                       l49 0848  
                                                       l74 0AEC  
                                                       l91 0938  
                                                       l59 0820  
                                                       l68 0B34  
                                                       l92 097E  
                                                       l77 0B04  
                                                       l93 0952  
                                                       l86 077C  
                                                       l95 098C  
                                                       l88 0792  
                                                       l98 09AC  
                                                       u10 08C4  
                                                       u11 08BE  
                                                       u20 08E2  
                                                       u21 08DC  
                                                       u30 0900  
                                                       u31 08FA  
                                                       u40 091E  
                                                       u41 0918  
                                                       u50 086E  
                                                       u51 0868  
                                                       u60 08A8  
                                                       u61 08A2  
                                                      l801 0920  
                                                      l811 0AB2  
                                                      l803 0A96  
                                                      l805 0A98  
                                                      l821 0840  
                                                      l813 0828  
                                                      l911 0ABC  
                                                      l807 0A9E  
                                                      l831 0872  
                                                      l815 0834  
                                                      l921 0ADA  
                                                      l913 0AC0  
                                                      l809 0AA0  
                                                      l841 0886  
                                                      l833 0878  
                                                      l817 0836  
                                                      l907 0B3A  
                                                      l923 0ADE  
                                                      l915 0AC6  
                                                      l931 0AF4  
                                                      l843 088C  
                                                      l835 087A  
                                                      l827 084C  
                                                      l819 083E  
                                                      l845 0B2C  
                                                      l941 0708  
                                                      l925 0AE4  
                                                      l917 0ACC  
                                                      l909 0ABA  
                                                      l933 0AF8  
                                                      l829 0852  
                                                      l951 0724  
                                                      l943 070A  
                                                      l927 0AEA  
                                                      l919 0AD8  
                                                      l935 0AFE  
                                                      l791 08D0  
                                                      l847 0B0A  
                                                      l961 0746  
                                                      l953 072A  
                                                      l945 0720  
                                                      l937 0700  
                                                      l929 0AF2  
                                                      l793 08E4  
                                                      l881 0A46  
                                                      l865 0A28  
                                                      l971 0780  
                                                      l963 0748  
                                                      l955 073C  
                                                      l939 0704  
                                                      l795 08EE  
                                                      l787 08B4  
                                                      l891 0A76  
                                                      l883 0A5E  
                                                      l867 0A2E  
                                                      l973 0786  
                                                      l965 074E  
                                                      l957 073E  
                                                      l797 0902  
                                                      l789 08C6  
                                                      l893 0A7C  
                                                      l885 0A64  
                                                      l877 0A2E  
                                                      l869 0A2E  
                                                      l975 078C  
                                                      l967 0762  
                                                      l959 0742  
                                                      l991 0956  
                                                      l983 0934  
                                                      l799 090C  
                                                      l895 0A82  
                                                      l887 0A6A  
                                                      l879 0A34  
                                                      l977 078E  
                                                      l969 0776  
                                                      l993 095C  
                                                      l897 0A88  
                                                      l889 0A70  
                                                      l979 0790  
                                                      l995 095E  
                                                      l997 0962  
                                                      l989 094C  
                                                      l999 0964  
                                                      u120 071E  
                                                      u121 0718  
                                                      u130 073A  
                                                      u131 0734  
                                                      u140 0760  
                                                      u220 09C6  
                                                      u141 075A  
                                                      u221 09C0  
                                                      u150 0774  
                                                      u230 0A00  
                                                      u151 076E  
                                                      u231 09FA  
                                                      u160 094A  
                                                      u240 07D4  
                                                      u161 0944  
                                                      u170 097C  
                                                      u250 080C  
                                                      u171 0976  
                                                      u307 06E4  
                                                      u180 099E  
                                                      u260 081E  
                                                      u181 0998  
                                                      u317 0A3A  
                                                      u261 0818  
                                                      u270 0664  
                                                      u327 0A52  
                                                      u247 07CA  
                                                      u271 065E  
                                                      u280 0688  
                                                      u337 0AA6  
                                                      u257 0802  
                                                      u281 0682  
                                                      u290 06B0  
                                                      u347 0984  
                                                      u291 06AA  
                                                      u357 0B2E  
                                                      _dly 0B2A  
                                                      wreg 0FE8  
                                          ?_lcd_set_cursor 0004  
                                                     l1001 0968  
                                                     l1011 09AA  
                                                     l1003 096A  
                                                     l1005 0982  
                                                     l1101 068E  
                                                     l1007 09A0  
                                                     l1111 06DA  
                                                     l1103 069C  
                                                     l1009 09A8  
                                                     l1105 06B2  
                                                     l1107 06CA  
                                                     l1061 09EA  
                                                     l1053 09B4  
                                                     l1109 06D0  
                                                     l1063 0A02  
                                                     l1055 09C8  
                                                     l1071 07A4  
                                                     l1065 0A14  
                                                     l1057 09DA  
                                                     l1073 07D8  
                                                     l1081 061A  
                                                     l1067 0A1A  
                                                     l1059 09E0  
                                                     l1075 07DC  
                                                     l1091 0642  
                                                     l1083 0624  
                                                     l1069 0798  
                                                     l1093 0650  
                                                     l1085 0628  
                                                     l1077 060C  
                                                     l1095 0666  
                                                     l1087 0638  
                                                     l1079 0616  
                                                     l1097 0674  
                                                     l1089 063C  
                                                     l1099 068A  
                                                     ?_dly 0001  
                                                     STR_1 0601  
                                                     _LATD 0F8C  
                                                     _main 060C  
                                                     fsr0h 0FEA  
                                                     indf0 0FEF  
                                                     fsr0l 0FE9  
                                                     start 0002  
                                              lcd_string@a 0009  
                                              lcd_string@i 000D  
                                               i2c_write@b 0002  
                                               i2c_write@d 0001  
                                               i2c_write@x 0003  
                                            ??_i2c_restart 0001  
                                             ___param_bank 0000  
                                                    ??_dly 0001  
                                                    ?_main 0001  
                                                    _TRISD 0F95  
                                          __end_of_lcd_cmd 0AB8  
                                                    tablat 0FF5  
                                                    status 0FD8  
                                          __initialization 0B1A  
                                             __end_of_main 06FC  
                                         __end_of_i2c_init 0B46  
                                         __end_of_i2c_read 0796  
                                         __end_of_i2c_stop 0B08  
                                      __end_of_i2c_restart 0AF0  
                                                   ??_main 000F  
                                            __activetblptr 0002  
                                             i2c_read@data 0002  
                                             i2c_read@nack 0001  
                                                   _TRISB1 7C99  
                                                   _TRISB4 7C9C  
                                      lcd_set_bit@data_bit 0001  
                                         __end_of_lcd_char 08B0  
                                         __end_of_lcd_init 0A92  
                                                   isa$std 0001  
                                                ??_lcd_cmd 0002  
                                     lcd_char@Lower_Nibble 0002  
                                             __mediumconst 0000  
                                                   tblptrh 0FF7  
                                                   tblptrl 0FF6  
                                                   tblptru 0FF8  
                                               __accesstop 0060  
                                  __end_of__initialization 0B20  
                                            ___rparam_used 0001  
                                           __pcstackCOMRAM 0001  
                                              _i2c_restart 0AD6  
                                        __end_of_i2c_start 0AD6  
                                         ??_lcd_set_cursor 0005  
                                        __end_of_i2c_write 09B0  
                                                ?_i2c_init 0001  
                                                ?_i2c_read 0001  
                                                ?_i2c_stop 0001  
                                                ?_lcd_char 0001  
                                               _lcd_string 0796  
                                                ?_lcd_init 0001  
                                               ??_i2c_init 0001  
                                               ??_i2c_read 0001  
                                               ??_i2c_stop 0001  
                                                  __Hparam 0000  
                                                  __Lparam 0000  
                                        __end_of_lcd_clear 0B1A  
                                             __psmallconst 0600  
                                                  __pcinit 0B1A  
                                                  __ramtop 0600  
                                                  __ptext0 060C  
                                                  __ptext1 0796  
                                                  __ptext2 0824  
                                                  __ptext3 09B0  
                                                  __ptext4 0A26  
                                                  __ptext5 0B08  
                                                  __ptext6 0A92  
                                                  __ptext7 08B0  
                                                  __ptext8 0930  
                                                  __ptext9 0AF0  
                                                  _lcd_cmd 0A92  
                                                  _payload 0013  
                                               ??_lcd_char 0002  
                                               ??_lcd_init 0004  
                                     end_of_initialization 0B20  
                                            __Lmediumconst 0000  
                                     lcd_char@Upper_Nibble 0003  
                                                _PORTBbits 0F81  
                                              ?_lcd_string 0009  
                                                i2c_read@x 0003  
                                            ??_lcd_set_bit 0001  
                                             ?_i2c_restart 0001  
                                      start_initialization 0B1A  
                                                _i2c_start 0AB8  
                                              __end_of_dly 0B38  
                                                _i2c_write 0930  
                                      __end_of_lcd_set_bit 0930  
                                              __pbssCOMRAM 0013  
                                               ?_i2c_start 0001  
                                               ?_i2c_write 0001  
                                                _lcd_clear 0B08  
                                                 ?_lcd_cmd 0001  
                                              __smallconst 0600  
                                                 _LATBbits 0F8A  
                                                 _LATDbits 0F8C  
                                          lcd_set_cursor@a 0005  
                                          lcd_set_cursor@b 0004  
                                          lcd_set_cursor@y 0007  
                                          lcd_set_cursor@z 0006  
                                              _lcd_set_bit 08B0  
                                               ?_lcd_clear 0001  
                                                lcd_char@i 0004  
                                              ??_i2c_start 0001  
                                              ??_i2c_write 0001  
                                             ??_lcd_string 000B  
                                                 _i2c_init 0B38  
                                                 _i2c_read 06FC  
                                                 _i2c_stop 0AF0  
                                                 __Hrparam 0000  
                                                 __Lrparam 0000  
                                       __end_of_lcd_string 0824  
                                       lcd_set_cursor@temp 0008  
                                                 __ptext10 0AB8  
                                                 __ptext11 0AD6  
                                                 __ptext12 06FC  
                                                 __ptext13 0B2A  
                                                 __ptext14 0B38  
                                                 _lcd_char 0824  
                                                 _lcd_init 0A26  
                                                 isa$xinst 0000  
                                                 lcd_cmd@a 0003  
                                              ??_lcd_clear 0004  
                                                 main@nack 0011  
                                           _lcd_set_cursor 09B0  
                                   __end_of_lcd_set_cursor 0A26  
